{
    "v1": [
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684657432.739121,
            "elapsed_time": 299.35824847221375,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684664537.034477,
            "elapsed_time": 385.43586254119873,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684670902.313893,
            "elapsed_time": 302.8894624710083,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684685277.462446,
            "elapsed_time": 303.31714725494385,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684699779.022338,
            "elapsed_time": 371.7542209625244,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684714171.635261,
            "elapsed_time": 307.92603182792664,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684728552.730517,
            "elapsed_time": 320.2816948890686,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684745552.468907,
            "elapsed_time": 310.50685000419617,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684743010.192255,
            "elapsed_time": 433.99671387672424,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684757392.984715,
            "elapsed_time": 376.2039577960968,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684767451.408989,
            "elapsed_time": 365.0249054431915,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684771902.9771,
            "elapsed_time": 388.1186182498932,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684786110.758038,
            "elapsed_time": 356.7516357898712,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684800683.135999,
            "elapsed_time": 366.3063609600067,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684815031.001538,
            "elapsed_time": 344.32253217697144,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684829670.341681,
            "elapsed_time": 417.6601564884186,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684829386.749486,
            "elapsed_time": 400.11024951934814,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684843829.617655,
            "elapsed_time": 387.153329372406,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684860449.490949,
            "elapsed_time": 385.62357473373413,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684858244.484198,
            "elapsed_time": 422.49450612068176,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684872493.492713,
            "elapsed_time": 307.10898423194885,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684886995.40541,
            "elapsed_time": 310.54746770858765,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684901367.143107,
            "elapsed_time": 318.34268498420715,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684915731.692204,
            "elapsed_time": 316.82924914360046,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684932931.093288,
            "elapsed_time": 369.2900743484497,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684930125.368656,
            "elapsed_time": 313.64088916778564,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684935631.108278,
            "elapsed_time": 359.055867433548,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684942031.870674,
            "elapsed_time": 307.72335410118103,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684944542.26176,
            "elapsed_time": 369.9609441757202,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684958897.143119,
            "elapsed_time": 312.0504837036133,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684973393.479884,
            "elapsed_time": 310.3773138523102,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1684987719.027607,
            "elapsed_time": 310.2006804943085,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685002121.025635,
            "elapsed_time": 304.9139335155487,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685007207.402617,
            "elapsed_time": 308.45625400543213,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685016529.402705,
            "elapsed_time": 300.13296341896057,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685030889.954582,
            "elapsed_time": 300.7254436016083,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685045354.354921,
            "elapsed_time": 381.5746293067932,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "721f6e10fbdb25909e020351dc7130393201da8d",
            "commit_message": "Sync to upstream/release/577 (#934)\n\nLots of things going on this week:\r\n\r\n* Fix a crash that could occur in the presence of a cyclic union. We\r\nshouldn't be creating cyclic unions, but we shouldn't be crashing when\r\nthey arise either.\r\n* Minor cleanup of `luau_precall`\r\n* Internal change to make L->top handling slightly more uniform\r\n* Optimize SETGLOBAL & GETGLOBAL fallback C functions.\r\n* https://github.com/Roblox/luau/pull/929\r\n* The syntax to the `luau-reduce` commandline tool has changed. It now\r\naccepts a script, a command to execute, and an error to search for. It\r\nno longer automatically passes the script to the command which makes it\r\na lot more flexible. Also be warned that it edits the script it is\r\npassed **in place**. Do not point it at something that is not in source\r\ncontrol!\r\n\r\nNew solver\r\n\r\n* Switch to a greedier but more fallible algorithm for simplifying union\r\nand intersection types that are created as part of refinement\r\ncalculation. This has much better and more predictable performance.\r\n* Fix a constraint cycle in recursive function calls.\r\n* Much improved inference of binary addition. Functions like `function\r\nadd(x, y) return x + y end` can now be inferred without annotations. We\r\nalso accurately typecheck calls to functions like this.\r\n* Many small bugfixes surrounding things like table indexers\r\n* Add support for indexers on class types. This was previously added to\r\nthe old solver; we now add it to the new one for feature parity.\r\n\r\nJIT\r\n\r\n* https://github.com/Roblox/luau/pull/931\r\n* Fuse key.value and key.tt loads for CEHCK_SLOT_MATCH in A64\r\n* Implement remaining aliases of BFM for A64\r\n* Implement new callinfo flag for A64\r\n* Add instruction simplification for int->num->int conversion chains\r\n* Don't even load execdata for X64 calls\r\n* Treat opcode fallbacks the same as manually written fallbacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1684525050.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685059861.762924,
            "elapsed_time": 328.9347469806671,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685074130.397628,
            "elapsed_time": 343.4818375110626,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685085654.054551,
            "elapsed_time": 369.57731652259827,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685087125.520854,
            "elapsed_time": 302.94352316856384,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685088581.921973,
            "elapsed_time": 318.9921202659607,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685098260.250029,
            "elapsed_time": 343.7921748161316,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685102925.208259,
            "elapsed_time": 360.1158299446106,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685113796.44732,
            "elapsed_time": 365.8231613636017,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685131725.075868,
            "elapsed_time": 318.45090675354004,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685146198.91501,
            "elapsed_time": 308.39301586151123,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685160593.608381,
            "elapsed_time": 360.7691481113434,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685168831.942406,
            "elapsed_time": 310.1242127418518,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685174869.871599,
            "elapsed_time": 290.71976685523987,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685181773.42086,
            "elapsed_time": 340.3288218975067,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685191445.544299,
            "elapsed_time": 359.5428559780121,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685189354.938971,
            "elapsed_time": 325.59674525260925,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685203740.932208,
            "elapsed_time": 307.90477991104126,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685219748.755624,
            "elapsed_time": 340.8662452697754,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685218067.851637,
            "elapsed_time": 301.94525027275085,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685232296.307356,
            "elapsed_time": 321.9173786640167,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685246665.196369,
            "elapsed_time": 347.6549565792084,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685260971.359986,
            "elapsed_time": 358.88397192955017,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685275398.07411,
            "elapsed_time": 301.41819858551025,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685289777.712135,
            "elapsed_time": 316.0138051509857,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685304191.674659,
            "elapsed_time": 365.2195580005646,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685318718.009209,
            "elapsed_time": 364.69531536102295,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685333007.87653,
            "elapsed_time": 316.1356279850006,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685347473.002309,
            "elapsed_time": 303.27708673477173,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685361849.014945,
            "elapsed_time": 304.91650891304016,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685376224.813655,
            "elapsed_time": 356.2855694293976,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685390598.765099,
            "elapsed_time": 306.1117961406708,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685405095.966466,
            "elapsed_time": 325.6111378669739,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685419452.876918,
            "elapsed_time": 311.56925892829895,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685433810.674537,
            "elapsed_time": 319.4945454597473,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685448213.793554,
            "elapsed_time": 333.43077278137207,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685462596.088635,
            "elapsed_time": 314.03483843803406,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685477056.100153,
            "elapsed_time": 342.1101462841034,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685491464.765296,
            "elapsed_time": 309.6119558811188,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685505812.156704,
            "elapsed_time": 390.3504638671875,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685520210.252584,
            "elapsed_time": 315.7661371231079,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685526883.189402,
            "elapsed_time": 307.112624168396,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685534629.116934,
            "elapsed_time": 321.90641927719116,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685553635.616128,
            "elapsed_time": 367.13842034339905,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685549001.769922,
            "elapsed_time": 320.3791332244873,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685563419.314731,
            "elapsed_time": 410.5162281990051,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685577850.127988,
            "elapsed_time": 349.55673599243164,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685592189.349956,
            "elapsed_time": 369.11984753608704,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685606581.981867,
            "elapsed_time": 306.8372461795807,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685620999.769924,
            "elapsed_time": 321.8200044631958,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685635448.387279,
            "elapsed_time": 396.03871059417725,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685649798.244027,
            "elapsed_time": 364.0134789943695,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685664318.111883,
            "elapsed_time": 397.13962721824646,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685678606.520181,
            "elapsed_time": 317.75320982933044,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685693011.332843,
            "elapsed_time": 320.46625900268555,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685707412.502738,
            "elapsed_time": 304.1977365016937,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685716394.269884,
            "elapsed_time": 371.23781299591064,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685721773.038587,
            "elapsed_time": 313.221964597702,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "271c509046779bfae0e9224629543130e02687d2",
            "commit_message": "Sync to upstream/release/578 (#939)\n\n* Fixed gcc warning about uninitialized `std::optional`\r\n* Fixed inlining of functions when they are used to compute their own\r\narguments\r\n\r\nIn the new type solver:\r\n* Type families that are not part of a function signature cannot be\r\nresolved at instantiation time and will now produce an error. This will\r\nbe relaxed in the future when we get constraint clauses on function\r\nsignatures (internally)\r\n* `never` type is now comparable\r\n* Improved typechecking of `for..in` statements\r\n* Fixed checks for number type in `Add` type family\r\n* Performance was improved, with particularly large gains on large\r\nprojects\r\n\r\nAnd in native code generation (jit):\r\n* We eliminated the call instruction overhead when native code support\r\nis enabled in the VM\r\n* Small optimizations to arm64 lowering\r\n* Reworked LOP_GETIMPORT handling to reduce assembly code size\r\n* Fixed non-deterministic binary output\r\n* Fixed bad code generation caused by incorrect SSA to VM register links\r\ninvalidation\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>",
            "commit_timestamp": 1685050594.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685736181.361783,
            "elapsed_time": 300.2939922809601,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685750609.459724,
            "elapsed_time": 458.63570404052734,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685765041.544702,
            "elapsed_time": 432.94176506996155,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685779449.330668,
            "elapsed_time": 313.3798100948334,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685793821.995961,
            "elapsed_time": 311.61239194869995,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685808204.415149,
            "elapsed_time": 354.8222839832306,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685822640.796737,
            "elapsed_time": 311.1458055973053,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685837047.394811,
            "elapsed_time": 365.87900733947754,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685851390.562668,
            "elapsed_time": 394.64696884155273,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685865778.831603,
            "elapsed_time": 355.9755141735077,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685880161.990338,
            "elapsed_time": 359.55082750320435,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685894591.501241,
            "elapsed_time": 318.36975169181824,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685909042.449231,
            "elapsed_time": 317.24833941459656,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685923427.023949,
            "elapsed_time": 362.9734513759613,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685937873.71094,
            "elapsed_time": 332.9015579223633,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685952195.795085,
            "elapsed_time": 321.30472326278687,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685966705.124964,
            "elapsed_time": 406.827397108078,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685981026.598522,
            "elapsed_time": 390.34577560424805,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1685995446.598384,
            "elapsed_time": 314.1325330734253,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686009895.254444,
            "elapsed_time": 382.18287658691406,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686024161.131544,
            "elapsed_time": 362.35454511642456,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686040292.226603,
            "elapsed_time": 373.0739758014679,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686038630.542696,
            "elapsed_time": 317.5303273200989,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686051768.501097,
            "elapsed_time": 335.6699981689453,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686057409.671262,
            "elapsed_time": 327.1549756526947,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686053046.37917,
            "elapsed_time": 342.3630065917969,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "63679f7288ca3994d3e3a9c6d432418d6dd7ba9c",
            "commit_message": "Sync to upstream/release/579 (#943)\n\nA pretty small changelist this week:\r\n\r\n* When type inference fails to find any matching overload for a\r\nfunction, we were declining to commit any changes to the type graph at\r\nall. This was resulting in confusing type errors in certain cases. Now,\r\nwhen a matching overload cannot be found, we always commit to the first\r\noverload we tried.\r\n\r\nJIT\r\n\r\n* Fix missing variadic register invalidation in FALLBACK_GETVARARGS\r\n* Add a missing null pointer check for the result of luaT_gettm\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1685735535.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686067413.144816,
            "elapsed_time": 335.7690041065216,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "4f82a7739648af3dcd9b8c8067f0c4c97c063727",
            "commit_message": "Update lint.md to specify language on fenced code blocks which have none (#946)\n\nSpecified language on the last two fenced code blocks in the page as\r\nthey were inconsistent with the others on the same page.",
            "commit_timestamp": 1686067056.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686081832.599634,
            "elapsed_time": 338.84315609931946,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e78897229a24328aba343694d1004b1cc5c607dc",
            "commit_message": "Fix website demo's string highlighting behaviour (#942)\n\nFixes #935:\r\n* String literals that include `\\z` escape sequence followed by newline\r\ncharacters are now correctly highlighted.\r\n* Unescaped backslash (`\\`) character at the end of the line no longer\r\nacts like the `\\z` escape sequence inside string literals when\r\nhighlighting.",
            "commit_timestamp": 1686075751.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686096348.407173,
            "elapsed_time": 334.7879605293274,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "febebde72a24a662f83df12f2472932566cf2234",
            "commit_message": "Update performance.md (#948)\n\nWe haven't updated this document in a while and yet there was a fair\r\namount of performance work, some of which can be documented here.\r\n\r\nNote that this is not fully comprehensive in that it excludes a lot of\r\ninternal tuning that is difficult to describe other than with \"we made\r\nthings faster\".",
            "commit_timestamp": 1686089489.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686110603.468253,
            "elapsed_time": 410.3643891811371,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "febebde72a24a662f83df12f2472932566cf2234",
            "commit_message": "Update performance.md (#948)\n\nWe haven't updated this document in a while and yet there was a fair\r\namount of performance work, some of which can be documented here.\r\n\r\nNote that this is not fully comprehensive in that it excludes a lot of\r\ninternal tuning that is difficult to describe other than with \"we made\r\nthings faster\".",
            "commit_timestamp": 1686089489.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686118376.64122,
            "elapsed_time": 321.1997489929199,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "febebde72a24a662f83df12f2472932566cf2234",
            "commit_message": "Update performance.md (#948)\n\nWe haven't updated this document in a while and yet there was a fair\r\namount of performance work, some of which can be documented here.\r\n\r\nNote that this is not fully comprehensive in that it excludes a lot of\r\ninternal tuning that is difficult to describe other than with \"we made\r\nthings faster\".",
            "commit_timestamp": 1686089489.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686125075.205007,
            "elapsed_time": 372.1259388923645,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "febebde72a24a662f83df12f2472932566cf2234",
            "commit_message": "Update performance.md (#948)\n\nWe haven't updated this document in a while and yet there was a fair\r\namount of performance work, some of which can be documented here.\r\n\r\nNote that this is not fully comprehensive in that it excludes a lot of\r\ninternal tuning that is difficult to describe other than with \"we made\r\nthings faster\".",
            "commit_timestamp": 1686089489.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686139405.772921,
            "elapsed_time": 324.59623622894287,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "febebde72a24a662f83df12f2472932566cf2234",
            "commit_message": "Update performance.md (#948)\n\nWe haven't updated this document in a while and yet there was a fair\r\namount of performance work, some of which can be documented here.\r\n\r\nNote that this is not fully comprehensive in that it excludes a lot of\r\ninternal tuning that is difficult to describe other than with \"we made\r\nthings faster\".",
            "commit_timestamp": 1686089489.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686153843.826703,
            "elapsed_time": 340.98695182800293,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "febebde72a24a662f83df12f2472932566cf2234",
            "commit_message": "Update performance.md (#948)\n\nWe haven't updated this document in a while and yet there was a fair\r\namount of performance work, some of which can be documented here.\r\n\r\nNote that this is not fully comprehensive in that it excludes a lot of\r\ninternal tuning that is difficult to describe other than with \"we made\r\nthings faster\".",
            "commit_timestamp": 1686089489.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686168264.977187,
            "elapsed_time": 331.83461904525757,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "febebde72a24a662f83df12f2472932566cf2234",
            "commit_message": "Update performance.md (#948)\n\nWe haven't updated this document in a while and yet there was a fair\r\namount of performance work, some of which can be documented here.\r\n\r\nNote that this is not fully comprehensive in that it excludes a lot of\r\ninternal tuning that is difficult to describe other than with \"we made\r\nthings faster\".",
            "commit_timestamp": 1686089489.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686182682.761073,
            "elapsed_time": 322.09219789505005,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "febebde72a24a662f83df12f2472932566cf2234",
            "commit_message": "Update performance.md (#948)\n\nWe haven't updated this document in a while and yet there was a fair\r\namount of performance work, some of which can be documented here.\r\n\r\nNote that this is not fully comprehensive in that it excludes a lot of\r\ninternal tuning that is difficult to describe other than with \"we made\r\nthings faster\".",
            "commit_timestamp": 1686089489.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686196983.872788,
            "elapsed_time": 372.36227774620056,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "febebde72a24a662f83df12f2472932566cf2234",
            "commit_message": "Update performance.md (#948)\n\nWe haven't updated this document in a while and yet there was a fair\r\namount of performance work, some of which can be documented here.\r\n\r\nNote that this is not fully comprehensive in that it excludes a lot of\r\ninternal tuning that is difficult to describe other than with \"we made\r\nthings faster\".",
            "commit_timestamp": 1686089489.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686211435.921855,
            "elapsed_time": 439.07805848121643,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "febebde72a24a662f83df12f2472932566cf2234",
            "commit_message": "Update performance.md (#948)\n\nWe haven't updated this document in a while and yet there was a fair\r\namount of performance work, some of which can be documented here.\r\n\r\nNote that this is not fully comprehensive in that it excludes a lot of\r\ninternal tuning that is difficult to describe other than with \"we made\r\nthings faster\".",
            "commit_timestamp": 1686089489.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686225797.048228,
            "elapsed_time": 318.43856549263,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "febebde72a24a662f83df12f2472932566cf2234",
            "commit_message": "Update performance.md (#948)\n\nWe haven't updated this document in a while and yet there was a fair\r\namount of performance work, some of which can be documented here.\r\n\r\nNote that this is not fully comprehensive in that it excludes a lot of\r\ninternal tuning that is difficult to describe other than with \"we made\r\nthings faster\".",
            "commit_timestamp": 1686089489.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686240249.646861,
            "elapsed_time": 333.5771300792694,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "febebde72a24a662f83df12f2472932566cf2234",
            "commit_message": "Update performance.md (#948)\n\nWe haven't updated this document in a while and yet there was a fair\r\namount of performance work, some of which can be documented here.\r\n\r\nNote that this is not fully comprehensive in that it excludes a lot of\r\ninternal tuning that is difficult to describe other than with \"we made\r\nthings faster\".",
            "commit_timestamp": 1686089489.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686254629.355418,
            "elapsed_time": 322.59891295433044,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "febebde72a24a662f83df12f2472932566cf2234",
            "commit_message": "Update performance.md (#948)\n\nWe haven't updated this document in a while and yet there was a fair\r\namount of performance work, some of which can be documented here.\r\n\r\nNote that this is not fully comprehensive in that it excludes a lot of\r\ninternal tuning that is difficult to describe other than with \"we made\r\nthings faster\".",
            "commit_timestamp": 1686089489.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686269057.159848,
            "elapsed_time": 400.1367082595825,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "febebde72a24a662f83df12f2472932566cf2234",
            "commit_message": "Update performance.md (#948)\n\nWe haven't updated this document in a while and yet there was a fair\r\namount of performance work, some of which can be documented here.\r\n\r\nNote that this is not fully comprehensive in that it excludes a lot of\r\ninternal tuning that is difficult to describe other than with \"we made\r\nthings faster\".",
            "commit_timestamp": 1686089489.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686297804.608849,
            "elapsed_time": 330.8919110298157,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "febebde72a24a662f83df12f2472932566cf2234",
            "commit_message": "Update performance.md (#948)\n\nWe haven't updated this document in a while and yet there was a fair\r\namount of performance work, some of which can be documented here.\r\n\r\nNote that this is not fully comprehensive in that it excludes a lot of\r\ninternal tuning that is difficult to describe other than with \"we made\r\nthings faster\".",
            "commit_timestamp": 1686089489.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686312187.020617,
            "elapsed_time": 344.99106645584106,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "febebde72a24a662f83df12f2472932566cf2234",
            "commit_message": "Update performance.md (#948)\n\nWe haven't updated this document in a while and yet there was a fair\r\namount of performance work, some of which can be documented here.\r\n\r\nNote that this is not fully comprehensive in that it excludes a lot of\r\ninternal tuning that is difficult to describe other than with \"we made\r\nthings faster\".",
            "commit_timestamp": 1686089489.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686326608.721979,
            "elapsed_time": 317.9257867336273,
            "x64": false,
            "actual_files_count": 379,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "febebde72a24a662f83df12f2472932566cf2234",
            "commit_message": "Update performance.md (#948)\n\nWe haven't updated this document in a while and yet there was a fair\r\namount of performance work, some of which can be documented here.\r\n\r\nNote that this is not fully comprehensive in that it excludes a lot of\r\ninternal tuning that is difficult to describe other than with \"we made\r\nthings faster\".",
            "commit_timestamp": 1686089489.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686341025.133792,
            "elapsed_time": 324.8986268043518,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3ecd3a82abe6682988112cd6eb7326a67ebbc47f",
            "commit_message": "Sync to upstream/release/580 (#951)\n\n* Added luau-compile executable target to build/test compilation without\r\nhaving full REPL included.\r\n\r\nIn our new typechecker:\r\n* Fixed the order in which constraints are checked to get more\r\ndeterministic errors in different environments\r\n* Fixed `isNumber`/`isString` checks to fix false positive errors in\r\nbinary comparisons\r\n* CannotCallNonFunction error is reported when calling an intersection\r\ntype of non-functions\r\n \r\nIn our native code generation (jit):\r\n* Outlined X64 return instruction code to improve code size\r\n* Improved performance of return instruction on A64\r\n* Added construction of a dominator tree for future optimizations\r\n",
            "commit_timestamp": 1686330480.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686355488.07483,
            "elapsed_time": 330.7705662250519,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3ecd3a82abe6682988112cd6eb7326a67ebbc47f",
            "commit_message": "Sync to upstream/release/580 (#951)\n\n* Added luau-compile executable target to build/test compilation without\r\nhaving full REPL included.\r\n\r\nIn our new typechecker:\r\n* Fixed the order in which constraints are checked to get more\r\ndeterministic errors in different environments\r\n* Fixed `isNumber`/`isString` checks to fix false positive errors in\r\nbinary comparisons\r\n* CannotCallNonFunction error is reported when calling an intersection\r\ntype of non-functions\r\n \r\nIn our native code generation (jit):\r\n* Outlined X64 return instruction code to improve code size\r\n* Improved performance of return instruction on A64\r\n* Added construction of a dominator tree for future optimizations\r\n",
            "commit_timestamp": 1686330480.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686369753.637817,
            "elapsed_time": 307.5099594593048,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3ecd3a82abe6682988112cd6eb7326a67ebbc47f",
            "commit_message": "Sync to upstream/release/580 (#951)\n\n* Added luau-compile executable target to build/test compilation without\r\nhaving full REPL included.\r\n\r\nIn our new typechecker:\r\n* Fixed the order in which constraints are checked to get more\r\ndeterministic errors in different environments\r\n* Fixed `isNumber`/`isString` checks to fix false positive errors in\r\nbinary comparisons\r\n* CannotCallNonFunction error is reported when calling an intersection\r\ntype of non-functions\r\n \r\nIn our native code generation (jit):\r\n* Outlined X64 return instruction code to improve code size\r\n* Improved performance of return instruction on A64\r\n* Added construction of a dominator tree for future optimizations\r\n",
            "commit_timestamp": 1686330480.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686384221.060935,
            "elapsed_time": 322.87150168418884,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3ecd3a82abe6682988112cd6eb7326a67ebbc47f",
            "commit_message": "Sync to upstream/release/580 (#951)\n\n* Added luau-compile executable target to build/test compilation without\r\nhaving full REPL included.\r\n\r\nIn our new typechecker:\r\n* Fixed the order in which constraints are checked to get more\r\ndeterministic errors in different environments\r\n* Fixed `isNumber`/`isString` checks to fix false positive errors in\r\nbinary comparisons\r\n* CannotCallNonFunction error is reported when calling an intersection\r\ntype of non-functions\r\n \r\nIn our native code generation (jit):\r\n* Outlined X64 return instruction code to improve code size\r\n* Improved performance of return instruction on A64\r\n* Added construction of a dominator tree for future optimizations\r\n",
            "commit_timestamp": 1686330480.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686398589.031247,
            "elapsed_time": 329.68443751335144,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3ecd3a82abe6682988112cd6eb7326a67ebbc47f",
            "commit_message": "Sync to upstream/release/580 (#951)\n\n* Added luau-compile executable target to build/test compilation without\r\nhaving full REPL included.\r\n\r\nIn our new typechecker:\r\n* Fixed the order in which constraints are checked to get more\r\ndeterministic errors in different environments\r\n* Fixed `isNumber`/`isString` checks to fix false positive errors in\r\nbinary comparisons\r\n* CannotCallNonFunction error is reported when calling an intersection\r\ntype of non-functions\r\n \r\nIn our native code generation (jit):\r\n* Outlined X64 return instruction code to improve code size\r\n* Improved performance of return instruction on A64\r\n* Added construction of a dominator tree for future optimizations\r\n",
            "commit_timestamp": 1686330480.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686413019.253958,
            "elapsed_time": 451.83982491493225,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3ecd3a82abe6682988112cd6eb7326a67ebbc47f",
            "commit_message": "Sync to upstream/release/580 (#951)\n\n* Added luau-compile executable target to build/test compilation without\r\nhaving full REPL included.\r\n\r\nIn our new typechecker:\r\n* Fixed the order in which constraints are checked to get more\r\ndeterministic errors in different environments\r\n* Fixed `isNumber`/`isString` checks to fix false positive errors in\r\nbinary comparisons\r\n* CannotCallNonFunction error is reported when calling an intersection\r\ntype of non-functions\r\n \r\nIn our native code generation (jit):\r\n* Outlined X64 return instruction code to improve code size\r\n* Improved performance of return instruction on A64\r\n* Added construction of a dominator tree for future optimizations\r\n",
            "commit_timestamp": 1686330480.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686427412.422621,
            "elapsed_time": 337.92467427253723,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3ecd3a82abe6682988112cd6eb7326a67ebbc47f",
            "commit_message": "Sync to upstream/release/580 (#951)\n\n* Added luau-compile executable target to build/test compilation without\r\nhaving full REPL included.\r\n\r\nIn our new typechecker:\r\n* Fixed the order in which constraints are checked to get more\r\ndeterministic errors in different environments\r\n* Fixed `isNumber`/`isString` checks to fix false positive errors in\r\nbinary comparisons\r\n* CannotCallNonFunction error is reported when calling an intersection\r\ntype of non-functions\r\n \r\nIn our native code generation (jit):\r\n* Outlined X64 return instruction code to improve code size\r\n* Improved performance of return instruction on A64\r\n* Added construction of a dominator tree for future optimizations\r\n",
            "commit_timestamp": 1686330480.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686441898.743422,
            "elapsed_time": 335.09061765670776,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3ecd3a82abe6682988112cd6eb7326a67ebbc47f",
            "commit_message": "Sync to upstream/release/580 (#951)\n\n* Added luau-compile executable target to build/test compilation without\r\nhaving full REPL included.\r\n\r\nIn our new typechecker:\r\n* Fixed the order in which constraints are checked to get more\r\ndeterministic errors in different environments\r\n* Fixed `isNumber`/`isString` checks to fix false positive errors in\r\nbinary comparisons\r\n* CannotCallNonFunction error is reported when calling an intersection\r\ntype of non-functions\r\n \r\nIn our native code generation (jit):\r\n* Outlined X64 return instruction code to improve code size\r\n* Improved performance of return instruction on A64\r\n* Added construction of a dominator tree for future optimizations\r\n",
            "commit_timestamp": 1686330480.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686456191.346944,
            "elapsed_time": 336.44535517692566,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3ecd3a82abe6682988112cd6eb7326a67ebbc47f",
            "commit_message": "Sync to upstream/release/580 (#951)\n\n* Added luau-compile executable target to build/test compilation without\r\nhaving full REPL included.\r\n\r\nIn our new typechecker:\r\n* Fixed the order in which constraints are checked to get more\r\ndeterministic errors in different environments\r\n* Fixed `isNumber`/`isString` checks to fix false positive errors in\r\nbinary comparisons\r\n* CannotCallNonFunction error is reported when calling an intersection\r\ntype of non-functions\r\n \r\nIn our native code generation (jit):\r\n* Outlined X64 return instruction code to improve code size\r\n* Improved performance of return instruction on A64\r\n* Added construction of a dominator tree for future optimizations\r\n",
            "commit_timestamp": 1686330480.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686470588.779683,
            "elapsed_time": 327.05315923690796,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3ecd3a82abe6682988112cd6eb7326a67ebbc47f",
            "commit_message": "Sync to upstream/release/580 (#951)\n\n* Added luau-compile executable target to build/test compilation without\r\nhaving full REPL included.\r\n\r\nIn our new typechecker:\r\n* Fixed the order in which constraints are checked to get more\r\ndeterministic errors in different environments\r\n* Fixed `isNumber`/`isString` checks to fix false positive errors in\r\nbinary comparisons\r\n* CannotCallNonFunction error is reported when calling an intersection\r\ntype of non-functions\r\n \r\nIn our native code generation (jit):\r\n* Outlined X64 return instruction code to improve code size\r\n* Improved performance of return instruction on A64\r\n* Added construction of a dominator tree for future optimizations\r\n",
            "commit_timestamp": 1686330480.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686484994.379998,
            "elapsed_time": 387.21630573272705,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3ecd3a82abe6682988112cd6eb7326a67ebbc47f",
            "commit_message": "Sync to upstream/release/580 (#951)\n\n* Added luau-compile executable target to build/test compilation without\r\nhaving full REPL included.\r\n\r\nIn our new typechecker:\r\n* Fixed the order in which constraints are checked to get more\r\ndeterministic errors in different environments\r\n* Fixed `isNumber`/`isString` checks to fix false positive errors in\r\nbinary comparisons\r\n* CannotCallNonFunction error is reported when calling an intersection\r\ntype of non-functions\r\n \r\nIn our native code generation (jit):\r\n* Outlined X64 return instruction code to improve code size\r\n* Improved performance of return instruction on A64\r\n* Added construction of a dominator tree for future optimizations\r\n",
            "commit_timestamp": 1686330480.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686499385.85933,
            "elapsed_time": 323.5862545967102,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3ecd3a82abe6682988112cd6eb7326a67ebbc47f",
            "commit_message": "Sync to upstream/release/580 (#951)\n\n* Added luau-compile executable target to build/test compilation without\r\nhaving full REPL included.\r\n\r\nIn our new typechecker:\r\n* Fixed the order in which constraints are checked to get more\r\ndeterministic errors in different environments\r\n* Fixed `isNumber`/`isString` checks to fix false positive errors in\r\nbinary comparisons\r\n* CannotCallNonFunction error is reported when calling an intersection\r\ntype of non-functions\r\n \r\nIn our native code generation (jit):\r\n* Outlined X64 return instruction code to improve code size\r\n* Improved performance of return instruction on A64\r\n* Added construction of a dominator tree for future optimizations\r\n",
            "commit_timestamp": 1686330480.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686513778.630282,
            "elapsed_time": 322.01534605026245,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3ecd3a82abe6682988112cd6eb7326a67ebbc47f",
            "commit_message": "Sync to upstream/release/580 (#951)\n\n* Added luau-compile executable target to build/test compilation without\r\nhaving full REPL included.\r\n\r\nIn our new typechecker:\r\n* Fixed the order in which constraints are checked to get more\r\ndeterministic errors in different environments\r\n* Fixed `isNumber`/`isString` checks to fix false positive errors in\r\nbinary comparisons\r\n* CannotCallNonFunction error is reported when calling an intersection\r\ntype of non-functions\r\n \r\nIn our native code generation (jit):\r\n* Outlined X64 return instruction code to improve code size\r\n* Improved performance of return instruction on A64\r\n* Added construction of a dominator tree for future optimizations\r\n",
            "commit_timestamp": 1686330480.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686528289.635743,
            "elapsed_time": 404.5423090457916,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3ecd3a82abe6682988112cd6eb7326a67ebbc47f",
            "commit_message": "Sync to upstream/release/580 (#951)\n\n* Added luau-compile executable target to build/test compilation without\r\nhaving full REPL included.\r\n\r\nIn our new typechecker:\r\n* Fixed the order in which constraints are checked to get more\r\ndeterministic errors in different environments\r\n* Fixed `isNumber`/`isString` checks to fix false positive errors in\r\nbinary comparisons\r\n* CannotCallNonFunction error is reported when calling an intersection\r\ntype of non-functions\r\n \r\nIn our native code generation (jit):\r\n* Outlined X64 return instruction code to improve code size\r\n* Improved performance of return instruction on A64\r\n* Added construction of a dominator tree for future optimizations\r\n",
            "commit_timestamp": 1686330480.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686542562.948021,
            "elapsed_time": 412.1423535346985,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3ecd3a82abe6682988112cd6eb7326a67ebbc47f",
            "commit_message": "Sync to upstream/release/580 (#951)\n\n* Added luau-compile executable target to build/test compilation without\r\nhaving full REPL included.\r\n\r\nIn our new typechecker:\r\n* Fixed the order in which constraints are checked to get more\r\ndeterministic errors in different environments\r\n* Fixed `isNumber`/`isString` checks to fix false positive errors in\r\nbinary comparisons\r\n* CannotCallNonFunction error is reported when calling an intersection\r\ntype of non-functions\r\n \r\nIn our native code generation (jit):\r\n* Outlined X64 return instruction code to improve code size\r\n* Improved performance of return instruction on A64\r\n* Added construction of a dominator tree for future optimizations\r\n",
            "commit_timestamp": 1686330480.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686557005.371889,
            "elapsed_time": 457.806209564209,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3ecd3a82abe6682988112cd6eb7326a67ebbc47f",
            "commit_message": "Sync to upstream/release/580 (#951)\n\n* Added luau-compile executable target to build/test compilation without\r\nhaving full REPL included.\r\n\r\nIn our new typechecker:\r\n* Fixed the order in which constraints are checked to get more\r\ndeterministic errors in different environments\r\n* Fixed `isNumber`/`isString` checks to fix false positive errors in\r\nbinary comparisons\r\n* CannotCallNonFunction error is reported when calling an intersection\r\ntype of non-functions\r\n \r\nIn our native code generation (jit):\r\n* Outlined X64 return instruction code to improve code size\r\n* Improved performance of return instruction on A64\r\n* Added construction of a dominator tree for future optimizations\r\n",
            "commit_timestamp": 1686330480.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686563137.613756,
            "elapsed_time": 320.2932527065277,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3ecd3a82abe6682988112cd6eb7326a67ebbc47f",
            "commit_message": "Sync to upstream/release/580 (#951)\n\n* Added luau-compile executable target to build/test compilation without\r\nhaving full REPL included.\r\n\r\nIn our new typechecker:\r\n* Fixed the order in which constraints are checked to get more\r\ndeterministic errors in different environments\r\n* Fixed `isNumber`/`isString` checks to fix false positive errors in\r\nbinary comparisons\r\n* CannotCallNonFunction error is reported when calling an intersection\r\ntype of non-functions\r\n \r\nIn our native code generation (jit):\r\n* Outlined X64 return instruction code to improve code size\r\n* Improved performance of return instruction on A64\r\n* Added construction of a dominator tree for future optimizations\r\n",
            "commit_timestamp": 1686330480.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686571419.747531,
            "elapsed_time": 377.6108121871948,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3ecd3a82abe6682988112cd6eb7326a67ebbc47f",
            "commit_message": "Sync to upstream/release/580 (#951)\n\n* Added luau-compile executable target to build/test compilation without\r\nhaving full REPL included.\r\n\r\nIn our new typechecker:\r\n* Fixed the order in which constraints are checked to get more\r\ndeterministic errors in different environments\r\n* Fixed `isNumber`/`isString` checks to fix false positive errors in\r\nbinary comparisons\r\n* CannotCallNonFunction error is reported when calling an intersection\r\ntype of non-functions\r\n \r\nIn our native code generation (jit):\r\n* Outlined X64 return instruction code to improve code size\r\n* Improved performance of return instruction on A64\r\n* Added construction of a dominator tree for future optimizations\r\n",
            "commit_timestamp": 1686330480.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686581257.532576,
            "elapsed_time": 407.00456070899963,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3ecd3a82abe6682988112cd6eb7326a67ebbc47f",
            "commit_message": "Sync to upstream/release/580 (#951)\n\n* Added luau-compile executable target to build/test compilation without\r\nhaving full REPL included.\r\n\r\nIn our new typechecker:\r\n* Fixed the order in which constraints are checked to get more\r\ndeterministic errors in different environments\r\n* Fixed `isNumber`/`isString` checks to fix false positive errors in\r\nbinary comparisons\r\n* CannotCallNonFunction error is reported when calling an intersection\r\ntype of non-functions\r\n \r\nIn our native code generation (jit):\r\n* Outlined X64 return instruction code to improve code size\r\n* Improved performance of return instruction on A64\r\n* Added construction of a dominator tree for future optimizations\r\n",
            "commit_timestamp": 1686330480.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686586830.935974,
            "elapsed_time": 337.12152099609375,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "ba65b0e9cd123a4ecd977ddfcebbde7ef13df6bd",
            "commit_message": "Build and use luau-compile in CI (#952)\n\n",
            "commit_timestamp": 1686584804.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686585780.71901,
            "elapsed_time": 326.3968813419342,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "ba65b0e9cd123a4ecd977ddfcebbde7ef13df6bd",
            "commit_message": "Build and use luau-compile in CI (#952)\n\n",
            "commit_timestamp": 1686584804.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686600280.463588,
            "elapsed_time": 362.8361051082611,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686629046.528239,
            "elapsed_time": 336.8566415309906,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686643438.827499,
            "elapsed_time": 437.0878074169159,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686657794.019922,
            "elapsed_time": 370.36595392227173,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686672194.130964,
            "elapsed_time": 438.9704601764679,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686686683.920588,
            "elapsed_time": 458.99394726753235,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686701094.601598,
            "elapsed_time": 359.779415845871,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686715428.604566,
            "elapsed_time": 337.37000155448914,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686729801.033,
            "elapsed_time": 418.3161654472351,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686744232.973226,
            "elapsed_time": 448.1115357875824,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686758576.687216,
            "elapsed_time": 318.2991478443146,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686773041.7819,
            "elapsed_time": 435.02403569221497,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686787492.707687,
            "elapsed_time": 343.36801314353943,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686801854.753399,
            "elapsed_time": 368.73941564559937,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686816246.916298,
            "elapsed_time": 407.5533437728882,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686830655.140363,
            "elapsed_time": 461.2060363292694,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686845015.511021,
            "elapsed_time": 337.67782068252563,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686859412.847874,
            "elapsed_time": 426.8252730369568,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686873888.896962,
            "elapsed_time": 329.8753228187561,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686888186.220066,
            "elapsed_time": 445.2139084339142,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686902584.286367,
            "elapsed_time": 462.32218980789185,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686917067.824998,
            "elapsed_time": 414.3037486076355,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686929428.657819,
            "elapsed_time": 356.2743582725525,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686931083.766284,
            "elapsed_time": 338.23242592811584,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686931368.012129,
            "elapsed_time": 457.5118296146393,
            "x64": false,
            "actual_files_count": 386,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bc0722471f6a41beb19e3147df1f501d15b93575",
            "commit_message": "Add support for ClassType indexer in definition files (#949)\n\n",
            "commit_timestamp": 1686600174.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686945757.967331,
            "elapsed_time": 394.76946902275085,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686960226.163334,
            "elapsed_time": 429.96464228630066,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686974588.326958,
            "elapsed_time": 436.22525095939636,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686994226.220514,
            "elapsed_time": 357.2032084465027,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686994396.427266,
            "elapsed_time": 339.9713845252991,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686989048.836754,
            "elapsed_time": 341.179621219635,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1686998840.826955,
            "elapsed_time": 400.0602011680603,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687003447.914109,
            "elapsed_time": 356.67238903045654,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687017750.502538,
            "elapsed_time": 396.18274331092834,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687032206.327597,
            "elapsed_time": 317.4444589614868,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687046675.299186,
            "elapsed_time": 332.4922790527344,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687061049.866535,
            "elapsed_time": 344.2400484085083,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687075357.82807,
            "elapsed_time": 413.09763050079346,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687089811.071582,
            "elapsed_time": 349.56198501586914,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687104194.949205,
            "elapsed_time": 321.67294931411743,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687110894.333832,
            "elapsed_time": 392.79823875427246,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687118551.512068,
            "elapsed_time": 379.8199269771576,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687133057.738613,
            "elapsed_time": 402.0873136520386,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687147406.641471,
            "elapsed_time": 340.87609100341797,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687161823.593133,
            "elapsed_time": 497.207804441452,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687176179.223818,
            "elapsed_time": 419.10264778137207,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687191892.064942,
            "elapsed_time": 364.3537549972534,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687190619.994228,
            "elapsed_time": 420.7070369720459,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687204955.028492,
            "elapsed_time": 378.5953872203827,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687219463.412487,
            "elapsed_time": 320.91917300224304,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687233821.073532,
            "elapsed_time": 331.48072481155396,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687248191.996762,
            "elapsed_time": 547.8709688186646,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687262695.765352,
            "elapsed_time": 401.85292387008667,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687291534.389418,
            "elapsed_time": 430.72086000442505,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687305891.946596,
            "elapsed_time": 416.3501880168915,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687320178.07325,
            "elapsed_time": 392.62170147895813,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687332148.365644,
            "elapsed_time": 346.87193870544434,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687334592.127479,
            "elapsed_time": 413.3692076206207,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687349038.541592,
            "elapsed_time": 339.3537724018097,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687363404.440107,
            "elapsed_time": 339.1302969455719,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687377799.679692,
            "elapsed_time": 374.8558859825134,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687392317.459112,
            "elapsed_time": 408.49924874305725,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687406610.081688,
            "elapsed_time": 325.1105623245239,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687420957.727409,
            "elapsed_time": 406.9168846607208,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687435464.881244,
            "elapsed_time": 336.2986967563629,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687449801.709196,
            "elapsed_time": 394.74807262420654,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687464230.216893,
            "elapsed_time": 443.2414481639862,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687478731.363923,
            "elapsed_time": 522.1560218334198,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687493006.001498,
            "elapsed_time": 395.4617886543274,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687507444.115298,
            "elapsed_time": 356.66181564331055,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687521787.289711,
            "elapsed_time": 386.583945274353,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687536200.611286,
            "elapsed_time": 384.81631994247437,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687550635.629876,
            "elapsed_time": 337.93853402137756,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687565130.116271,
            "elapsed_time": 393.94663286209106,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687579391.479023,
            "elapsed_time": 332.0976378917694,
            "x64": false,
            "actual_files_count": 388,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d458d240cdc07765cfe6bd81417faa3f642d0d75",
            "commit_message": "Sync to upstream/release/581 (#958)\n\n* Definition files can now ascribe indexers to class types.\r\n(https://github.com/Roblox/luau/pull/949)\r\n* Remove --compile support from the REPL. You can just use luau-compile\r\ninstead.\r\n* When an exception is thrown during parallel typechecking (usually an\r\nICE), we now gracefully stop typechecking and drain active workers\r\nbefore rethrowing the exception.\r\n\r\nNew solver\r\n\r\n* Include more source location information when we hit an internal\r\ncompiler error\r\n* Improve the logic that simplifies intersections of tables\r\n\r\nJIT\r\n\r\n* Save testable type annotations to bytecode\r\n* Improve block placement for linearized blocks\r\n* Add support for lea reg, [rip+offset] for labels\r\n* Unify X64 and A64 codegen for RETURN\r\n* Outline interrupt handlers for X64\r\n* Remove global rArgN in favor of build.abi\r\n* Change A64 INTERRUPT lowering to match X64\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1686936918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687593812.679763,
            "elapsed_time": 336.33571553230286,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687608255.102502,
            "elapsed_time": 425.2842893600464,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687622599.000843,
            "elapsed_time": 325.14634227752686,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687636994.480312,
            "elapsed_time": 436.7355673313141,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687651548.764813,
            "elapsed_time": 331.31711077690125,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687665764.614016,
            "elapsed_time": 407.66566586494446,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687680242.647052,
            "elapsed_time": 337.2350444793701,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687694676.363149,
            "elapsed_time": 329.3663098812103,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687703571.715073,
            "elapsed_time": 378.2274217605591,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687708978.386504,
            "elapsed_time": 329.3284571170807,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687723412.478412,
            "elapsed_time": 331.8381931781769,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687737917.141605,
            "elapsed_time": 333.46775341033936,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687752190.660916,
            "elapsed_time": 321.5133764743805,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687781040.071495,
            "elapsed_time": 462.1041235923767,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687795439.155552,
            "elapsed_time": 334.910813331604,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687809821.700879,
            "elapsed_time": 434.0001757144928,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687824295.870947,
            "elapsed_time": 321.93624234199524,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687838602.380983,
            "elapsed_time": 417.17414808273315,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687852988.626529,
            "elapsed_time": 393.0273275375366,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687867438.158425,
            "elapsed_time": 343.4811067581177,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687881772.12141,
            "elapsed_time": 326.5293996334076,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687896207.938894,
            "elapsed_time": 341.9297685623169,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687910716.475419,
            "elapsed_time": 334.9926190376282,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687925003.686901,
            "elapsed_time": 325.4360451698303,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687939439.878923,
            "elapsed_time": 338.53847074508667,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687953837.324348,
            "elapsed_time": 395.53588223457336,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687968240.375377,
            "elapsed_time": 358.84192156791687,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687982579.926428,
            "elapsed_time": 420.25090312957764,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1687997108.871065,
            "elapsed_time": 336.72984290122986,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688011377.169752,
            "elapsed_time": 318.51251459121704,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688025853.063166,
            "elapsed_time": 343.37717938423157,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688040242.746023,
            "elapsed_time": 409.61677289009094,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688054626.407488,
            "elapsed_time": 364.7112090587616,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688068929.160638,
            "elapsed_time": 361.2597188949585,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688083530.642822,
            "elapsed_time": 397.8589029312134,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688097751.676339,
            "elapsed_time": 305.1693871021271,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688112195.706343,
            "elapsed_time": 384.1861617565155,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688126563.826466,
            "elapsed_time": 381.66886162757874,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688140995.221788,
            "elapsed_time": 380.0087170600891,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688155417.387654,
            "elapsed_time": 390.9420509338379,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688169918.998415,
            "elapsed_time": 399.67108035087585,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688184207.054021,
            "elapsed_time": 324.4729359149933,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688198599.349427,
            "elapsed_time": 354.05696392059326,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688212999.069005,
            "elapsed_time": 325.3411364555359,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688227402.058743,
            "elapsed_time": 327.98636507987976,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688241788.437948,
            "elapsed_time": 495.50279116630554,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688256297.364483,
            "elapsed_time": 430.07735085487366,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688270604.525868,
            "elapsed_time": 359.7647044658661,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688284981.285992,
            "elapsed_time": 372.81313610076904,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688299368.496641,
            "elapsed_time": 385.334743976593,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688313783.107561,
            "elapsed_time": 315.3694546222687,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688328216.853579,
            "elapsed_time": 405.39843559265137,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688342641.132283,
            "elapsed_time": 414.8776504993439,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688357000.162149,
            "elapsed_time": 339.81003403663635,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688371403.749197,
            "elapsed_time": 330.46353816986084,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688385802.859345,
            "elapsed_time": 342.88787293434143,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688400220.040317,
            "elapsed_time": 345.7324607372284,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688414589.051161,
            "elapsed_time": 342.0348734855652,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688429095.179921,
            "elapsed_time": 404.9399080276489,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688443419.675338,
            "elapsed_time": 392.5020353794098,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688457837.678008,
            "elapsed_time": 427.86148834228516,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688472182.289674,
            "elapsed_time": 367.4132168292999,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688486594.733559,
            "elapsed_time": 328.56256461143494,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688500985.463024,
            "elapsed_time": 508.0770351886749,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688515448.889096,
            "elapsed_time": 404.1106495857239,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688529816.090005,
            "elapsed_time": 418.0176856517792,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688544182.202738,
            "elapsed_time": 424.89810276031494,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688558640.820189,
            "elapsed_time": 360.25595593452454,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688573026.918336,
            "elapsed_time": 337.6562223434448,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688587425.569682,
            "elapsed_time": 325.89268732070923,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76bea81a7b798b3324f97a72a2a8faac29089eec",
            "commit_message": "Sync to upstream/release/582 (#960)\n\n* Optimized operations like instantiation and module export for very\r\nlarge types\r\n\r\nIn our new typechecker:\r\n* Typechecking of function calls was rewritten to handle more cases\r\ncorrectly\r\n* Fixed a crash that can happen after self-referential type is exported\r\nfrom a module\r\n* Fixed a false positive error in string comparison\r\n* Added handling of `for...in` variable type annotations and fixed\r\nissues with the iterator call inside\r\n* Self-referential 'hasProp' and 'setProp' constraints are now handled\r\ncorrectly\r\n \r\nIn our native code generation (jit):\r\n* Added '--target' argument to luau-compile to test multiple\r\narchitectures different from host architecture\r\n* GC barrier tag check is skipped if type is already known to be\r\nGC-collectable\r\n* Added GET_TYPE/GET_TYPEOF instructions for type/typeof fast-calls\r\n* Improved code size of interrupt handlers on X64\r\n",
            "commit_timestamp": 1687587579.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688601901.748775,
            "elapsed_time": 337.74079275131226,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "a02eb78c96f695a4287e7dd1beaccab3642c35f3",
            "commit_message": "Fix indexing table intersections using `x[\"prop\"]` syntax (#971)\n\nRight now, you can index an intersection of tables fine when using\r\n`x.prop` syntax, but not when using `x[\"prop\"]` syntax.\r\nThis fixes it for the latter case\r\n\r\n```lua\r\ntype Foo = {\r\n\tBar: string,\r\n} & { Baz: number }\r\n\r\nlocal x: Foo = { Bar = \"1\", Baz = 2 }\r\nlocal y = x[\"Bar\"] -- TypeError: Expected type table, got '{| Bar: string |} & {| Baz: number |}' instead\r\n```\r\n\r\nPart of a fix to\r\nhttps://github.com/Roblox/luau/issues/533#issuecomment-1291779353",
            "commit_timestamp": 1688592771.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688616202.341133,
            "elapsed_time": 323.15740966796875,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "a02eb78c96f695a4287e7dd1beaccab3642c35f3",
            "commit_message": "Fix indexing table intersections using `x[\"prop\"]` syntax (#971)\n\nRight now, you can index an intersection of tables fine when using\r\n`x.prop` syntax, but not when using `x[\"prop\"]` syntax.\r\nThis fixes it for the latter case\r\n\r\n```lua\r\ntype Foo = {\r\n\tBar: string,\r\n} & { Baz: number }\r\n\r\nlocal x: Foo = { Bar = \"1\", Baz = 2 }\r\nlocal y = x[\"Bar\"] -- TypeError: Expected type table, got '{| Bar: string |} & {| Baz: number |}' instead\r\n```\r\n\r\nPart of a fix to\r\nhttps://github.com/Roblox/luau/issues/533#issuecomment-1291779353",
            "commit_timestamp": 1688592771.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688630666.112329,
            "elapsed_time": 399.41620683670044,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "a02eb78c96f695a4287e7dd1beaccab3642c35f3",
            "commit_message": "Fix indexing table intersections using `x[\"prop\"]` syntax (#971)\n\nRight now, you can index an intersection of tables fine when using\r\n`x.prop` syntax, but not when using `x[\"prop\"]` syntax.\r\nThis fixes it for the latter case\r\n\r\n```lua\r\ntype Foo = {\r\n\tBar: string,\r\n} & { Baz: number }\r\n\r\nlocal x: Foo = { Bar = \"1\", Baz = 2 }\r\nlocal y = x[\"Bar\"] -- TypeError: Expected type table, got '{| Bar: string |} & {| Baz: number |}' instead\r\n```\r\n\r\nPart of a fix to\r\nhttps://github.com/Roblox/luau/issues/533#issuecomment-1291779353",
            "commit_timestamp": 1688592771.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688645074.075116,
            "elapsed_time": 393.79333567619324,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "a02eb78c96f695a4287e7dd1beaccab3642c35f3",
            "commit_message": "Fix indexing table intersections using `x[\"prop\"]` syntax (#971)\n\nRight now, you can index an intersection of tables fine when using\r\n`x.prop` syntax, but not when using `x[\"prop\"]` syntax.\r\nThis fixes it for the latter case\r\n\r\n```lua\r\ntype Foo = {\r\n\tBar: string,\r\n} & { Baz: number }\r\n\r\nlocal x: Foo = { Bar = \"1\", Baz = 2 }\r\nlocal y = x[\"Bar\"] -- TypeError: Expected type table, got '{| Bar: string |} & {| Baz: number |}' instead\r\n```\r\n\r\nPart of a fix to\r\nhttps://github.com/Roblox/luau/issues/533#issuecomment-1291779353",
            "commit_timestamp": 1688592771.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688659438.760031,
            "elapsed_time": 409.7578401565552,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "a02eb78c96f695a4287e7dd1beaccab3642c35f3",
            "commit_message": "Fix indexing table intersections using `x[\"prop\"]` syntax (#971)\n\nRight now, you can index an intersection of tables fine when using\r\n`x.prop` syntax, but not when using `x[\"prop\"]` syntax.\r\nThis fixes it for the latter case\r\n\r\n```lua\r\ntype Foo = {\r\n\tBar: string,\r\n} & { Baz: number }\r\n\r\nlocal x: Foo = { Bar = \"1\", Baz = 2 }\r\nlocal y = x[\"Bar\"] -- TypeError: Expected type table, got '{| Bar: string |} & {| Baz: number |}' instead\r\n```\r\n\r\nPart of a fix to\r\nhttps://github.com/Roblox/luau/issues/533#issuecomment-1291779353",
            "commit_timestamp": 1688592771.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688673792.316849,
            "elapsed_time": 326.90550780296326,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "c98a9d7051770b0bb10a52caf48e34194c8753ea",
            "commit_message": "Add console output codepage for windows (#967)\n\nPreviously unicode codepoints would be incorrectly shown in windows\r\nterminals, such as with u2503(\u2503):\r\n```ps\r\n\u276f \"print('\\u{2503}')\" | luau.exe\r\n\u0393\u00f6\u00e2\r\n```\r\n\r\nThis change fixes the issue by setting the console's codepage on\r\nwindows, resulting in fixed behaviour:\r\n```ps\r\n\u276f \"print('\\u{2503}')\" | luau.exe\r\n\u2503\r\n```",
            "commit_timestamp": 1688673634.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688688306.151969,
            "elapsed_time": 506.6623332500458,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "c98a9d7051770b0bb10a52caf48e34194c8753ea",
            "commit_message": "Add console output codepage for windows (#967)\n\nPreviously unicode codepoints would be incorrectly shown in windows\r\nterminals, such as with u2503(\u2503):\r\n```ps\r\n\u276f \"print('\\u{2503}')\" | luau.exe\r\n\u0393\u00f6\u00e2\r\n```\r\n\r\nThis change fixes the issue by setting the console's codepage on\r\nwindows, resulting in fixed behaviour:\r\n```ps\r\n\u276f \"print('\\u{2503}')\" | luau.exe\r\n\u2503\r\n```",
            "commit_timestamp": 1688673634.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688702557.471205,
            "elapsed_time": 369.20246171951294,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "c98a9d7051770b0bb10a52caf48e34194c8753ea",
            "commit_message": "Add console output codepage for windows (#967)\n\nPreviously unicode codepoints would be incorrectly shown in windows\r\nterminals, such as with u2503(\u2503):\r\n```ps\r\n\u276f \"print('\\u{2503}')\" | luau.exe\r\n\u0393\u00f6\u00e2\r\n```\r\n\r\nThis change fixes the issue by setting the console's codepage on\r\nwindows, resulting in fixed behaviour:\r\n```ps\r\n\u276f \"print('\\u{2503}')\" | luau.exe\r\n\u2503\r\n```",
            "commit_timestamp": 1688673634.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688717004.868709,
            "elapsed_time": 338.53271746635437,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "c98a9d7051770b0bb10a52caf48e34194c8753ea",
            "commit_message": "Add console output codepage for windows (#967)\n\nPreviously unicode codepoints would be incorrectly shown in windows\r\nterminals, such as with u2503(\u2503):\r\n```ps\r\n\u276f \"print('\\u{2503}')\" | luau.exe\r\n\u0393\u00f6\u00e2\r\n```\r\n\r\nThis change fixes the issue by setting the console's codepage on\r\nwindows, resulting in fixed behaviour:\r\n```ps\r\n\u276f \"print('\\u{2503}')\" | luau.exe\r\n\u2503\r\n```",
            "commit_timestamp": 1688673634.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688731459.653355,
            "elapsed_time": 405.1388568878174,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "c98a9d7051770b0bb10a52caf48e34194c8753ea",
            "commit_message": "Add console output codepage for windows (#967)\n\nPreviously unicode codepoints would be incorrectly shown in windows\r\nterminals, such as with u2503(\u2503):\r\n```ps\r\n\u276f \"print('\\u{2503}')\" | luau.exe\r\n\u0393\u00f6\u00e2\r\n```\r\n\r\nThis change fixes the issue by setting the console's codepage on\r\nwindows, resulting in fixed behaviour:\r\n```ps\r\n\u276f \"print('\\u{2503}')\" | luau.exe\r\n\u2503\r\n```",
            "commit_timestamp": 1688673634.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688745820.325574,
            "elapsed_time": 532.198625087738,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "c98a9d7051770b0bb10a52caf48e34194c8753ea",
            "commit_message": "Add console output codepage for windows (#967)\n\nPreviously unicode codepoints would be incorrectly shown in windows\r\nterminals, such as with u2503(\u2503):\r\n```ps\r\n\u276f \"print('\\u{2503}')\" | luau.exe\r\n\u0393\u00f6\u00e2\r\n```\r\n\r\nThis change fixes the issue by setting the console's codepage on\r\nwindows, resulting in fixed behaviour:\r\n```ps\r\n\u276f \"print('\\u{2503}')\" | luau.exe\r\n\u2503\r\n```",
            "commit_timestamp": 1688673634.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688760258.898752,
            "elapsed_time": 351.97271823883057,
            "x64": false,
            "actual_files_count": 390,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "c98a9d7051770b0bb10a52caf48e34194c8753ea",
            "commit_message": "Add console output codepage for windows (#967)\n\nPreviously unicode codepoints would be incorrectly shown in windows\r\nterminals, such as with u2503(\u2503):\r\n```ps\r\n\u276f \"print('\\u{2503}')\" | luau.exe\r\n\u0393\u00f6\u00e2\r\n```\r\n\r\nThis change fixes the issue by setting the console's codepage on\r\nwindows, resulting in fixed behaviour:\r\n```ps\r\n\u276f \"print('\\u{2503}')\" | luau.exe\r\n\u2503\r\n```",
            "commit_timestamp": 1688673634.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688774697.350244,
            "elapsed_time": 447.1240441799164,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688789097.719606,
            "elapsed_time": 424.33665919303894,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688803400.491897,
            "elapsed_time": 350.4533417224884,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688817807.505094,
            "elapsed_time": 327.99771451950073,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688832224.328679,
            "elapsed_time": 352.06619787216187,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688846610.3532,
            "elapsed_time": 344.4741349220276,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688861083.446822,
            "elapsed_time": 408.110324382782,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688875396.953665,
            "elapsed_time": 466.4591679573059,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688889786.039556,
            "elapsed_time": 335.98959040641785,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688904166.16117,
            "elapsed_time": 399.78824758529663,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688918595.730498,
            "elapsed_time": 325.7844305038452,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688933020.360546,
            "elapsed_time": 334.6616759300232,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688947491.68804,
            "elapsed_time": 346.3072736263275,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688961825.651373,
            "elapsed_time": 326.35886454582214,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688976223.472067,
            "elapsed_time": 422.37589144706726,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1688990579.313732,
            "elapsed_time": 310.9664976596832,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689005062.84417,
            "elapsed_time": 398.7707166671753,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689019425.832801,
            "elapsed_time": 418.23988580703735,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689033924.3648,
            "elapsed_time": 334.66163778305054,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689048213.400414,
            "elapsed_time": 408.26551604270935,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689062637.32237,
            "elapsed_time": 404.77305340766907,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689077046.196264,
            "elapsed_time": 437.2091815471649,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689091362.294554,
            "elapsed_time": 363.26215410232544,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689105805.147145,
            "elapsed_time": 340.5774884223938,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689120275.951149,
            "elapsed_time": 310.64845180511475,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689134598.159137,
            "elapsed_time": 399.47673535346985,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689149004.584859,
            "elapsed_time": 338.3385498523712,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689163425.054424,
            "elapsed_time": 344.23896861076355,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689177875.561348,
            "elapsed_time": 324.5232894420624,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689192284.153749,
            "elapsed_time": 456.9290554523468,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689206725.146418,
            "elapsed_time": 393.56061720848083,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689220985.922695,
            "elapsed_time": 340.67483472824097,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689235393.885771,
            "elapsed_time": 337.21080112457275,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689249858.749958,
            "elapsed_time": 361.54649472236633,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689264227.176278,
            "elapsed_time": 547.0890085697174,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689278727.134223,
            "elapsed_time": 428.2908549308777,
            "x64": false,
            "actual_files_count": 393,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "e25de95445f2d635a125ab463426bb7fda017093",
            "commit_message": "Sync to upstream/release/583 (#974)\n\n* Fixed indexing table intersections using `x[\"prop\"]` syntax:\r\nhttps://github.com/Roblox/luau/pull/971\r\n* Add console output codepage for Windows:\r\nhttps://github.com/Roblox/luau/pull/967\r\n* Added `Frontend::parse` for a fast source graph preparation\r\n* luau_load should check GC\r\n* Work toward a type-diff system for nicer error messages\r\n\r\nNew Solver\r\n* Correctly suppress errors in more cases\r\n* Further improvements to typechecking of function calls and return\r\nstatements\r\n* Crash fixes\r\n* Propagate refinements drawn from the condition of a while loop into\r\nthe loop body\r\n\r\nJIT\r\n* Fix accidental bailout for math.frexp/modf/sign in A64\r\n* Work toward bringing type annotation info in\r\n* Do not propagate Luau IR constants of wrong type into load\r\ninstructions\r\n* CHECK_SAFEENV exits to VM on failure\r\n* Implement error handling in A64 reg allocator\r\n* Inline the string.len builtin\r\n* Do not enter native code of a function if arguments don\u2019t match\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1688760648.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": null,
            "timestamp": 1689489016.102591,
            "elapsed_time": 367.83154487609863,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689494134.146913,
            "elapsed_time": 392.44961428642273,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689500875.570266,
            "elapsed_time": 346.2812271118164,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689501847.4859,
            "elapsed_time": 380.4769377708435,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689494598.576077,
            "elapsed_time": 338.43746185302734,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689509018.21875,
            "elapsed_time": 334.17894220352173,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689523421.972622,
            "elapsed_time": 342.88970851898193,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689537798.767102,
            "elapsed_time": 345.03549551963806,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689554736.153331,
            "elapsed_time": 334.2902190685272,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689566951.201496,
            "elapsed_time": 421.9714767932892,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689581512.167177,
            "elapsed_time": 381.1174318790436,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689596114.587501,
            "elapsed_time": 319.6570506095886,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689610267.487183,
            "elapsed_time": 349.41458916664124,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689624581.248492,
            "elapsed_time": 326.96564650535583,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689642102.347618,
            "elapsed_time": 333.59288239479065,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689653375.854694,
            "elapsed_time": 336.2263021469116,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689667832.588535,
            "elapsed_time": 345.44358348846436,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689682390.581448,
            "elapsed_time": 308.518292427063,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689696613.203479,
            "elapsed_time": 317.62796688079834,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689710876.750511,
            "elapsed_time": 319.2603302001953,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689728748.59893,
            "elapsed_time": 335.2038793563843,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689740125.885471,
            "elapsed_time": 324.65947937965393,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689754189.989384,
            "elapsed_time": 317.6767179965973,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689768824.748093,
            "elapsed_time": 367.4965522289276,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689782990.124435,
            "elapsed_time": 349.74692821502686,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689797256.447049,
            "elapsed_time": 402.59005427360535,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689813524.898913,
            "elapsed_time": 330.4683003425598,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689826100.411821,
            "elapsed_time": 404.3193368911743,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689840647.461752,
            "elapsed_time": 332.135879278183,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689855267.868448,
            "elapsed_time": 385.8511612415314,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689869396.339282,
            "elapsed_time": 411.9810802936554,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689883736.274685,
            "elapsed_time": 347.9513306617737,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689899868.910802,
            "elapsed_time": 350.06979751586914,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689912543.4046,
            "elapsed_time": 328.57006669044495,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689927022.436719,
            "elapsed_time": 341.7740421295166,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689941587.834889,
            "elapsed_time": 419.7412838935852,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689955768.498386,
            "elapsed_time": 411.1312062740326,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "218159140c7d79ae745e646da721d12331f536f5",
            "commit_message": "Sync to upstream/release/584 (#977)\n\n* Added support for async typechecking cancellation using a token passed\r\nthrough frontend options\r\n* Added luaC_enumheap for building debug tools that need a graph of Luau\r\nheap\r\n\r\nIn our new typechecker:\r\n* Errors or now suppressed when checking property lookup of\r\nerror-suppressing unions\r\n\r\nIn our native code generation (jit):\r\n* Fixed unhandled value type in NOT_ANY lowering\r\n* Fast-call tag checks will exit to VM on failure, instead of relying on\r\na native fallback\r\n* Added vector type to the type information\r\n* Eliminated redundant direct jumps across dead blocks\r\n* Debugger APIs are now disabled for call frames executing natively\r\n* Implemented support for unwind registration on macOS 14\r\n",
            "commit_timestamp": 1689358133.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689970141.988749,
            "elapsed_time": 346.4812433719635,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "57368fbc58f4e3aa23814819f635891a0926b4d6",
            "commit_message": "HATRA 23 paper (#979)\n\nA one-page \"progress report\" paper.",
            "commit_timestamp": 1689969926.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689986220.35924,
            "elapsed_time": 350.23403239250183,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "57368fbc58f4e3aa23814819f635891a0926b4d6",
            "commit_message": "HATRA 23 paper (#979)\n\nA one-page \"progress report\" paper.",
            "commit_timestamp": 1689969926.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1689998929.679664,
            "elapsed_time": 337.27578926086426,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "57368fbc58f4e3aa23814819f635891a0926b4d6",
            "commit_message": "HATRA 23 paper (#979)\n\nA one-page \"progress report\" paper.",
            "commit_timestamp": 1689969926.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690013367.954261,
            "elapsed_time": 332.6118471622467,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "57368fbc58f4e3aa23814819f635891a0926b4d6",
            "commit_message": "HATRA 23 paper (#979)\n\nA one-page \"progress report\" paper.",
            "commit_timestamp": 1689969926.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690027903.581099,
            "elapsed_time": 338.60331678390503,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "57368fbc58f4e3aa23814819f635891a0926b4d6",
            "commit_message": "HATRA 23 paper (#979)\n\nA one-page \"progress report\" paper.",
            "commit_timestamp": 1689969926.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690042101.332469,
            "elapsed_time": 351.5591661930084,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "57368fbc58f4e3aa23814819f635891a0926b4d6",
            "commit_message": "HATRA 23 paper (#979)\n\nA one-page \"progress report\" paper.",
            "commit_timestamp": 1689969926.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690056397.508122,
            "elapsed_time": 324.5717432498932,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "57368fbc58f4e3aa23814819f635891a0926b4d6",
            "commit_message": "HATRA 23 paper (#979)\n\nA one-page \"progress report\" paper.",
            "commit_timestamp": 1689969926.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690072806.586443,
            "elapsed_time": 406.4048526287079,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "57368fbc58f4e3aa23814819f635891a0926b4d6",
            "commit_message": "HATRA 23 paper (#979)\n\nA one-page \"progress report\" paper.",
            "commit_timestamp": 1689969926.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690085346.127182,
            "elapsed_time": 339.7141971588135,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "57368fbc58f4e3aa23814819f635891a0926b4d6",
            "commit_message": "HATRA 23 paper (#979)\n\nA one-page \"progress report\" paper.",
            "commit_timestamp": 1689969926.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690099743.98435,
            "elapsed_time": 332.98829984664917,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "57368fbc58f4e3aa23814819f635891a0926b4d6",
            "commit_message": "HATRA 23 paper (#979)\n\nA one-page \"progress report\" paper.",
            "commit_timestamp": 1689969926.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690114307.263684,
            "elapsed_time": 408.1886866092682,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "57368fbc58f4e3aa23814819f635891a0926b4d6",
            "commit_message": "HATRA 23 paper (#979)\n\nA one-page \"progress report\" paper.",
            "commit_timestamp": 1689969926.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690128523.186012,
            "elapsed_time": 412.5335884094238,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "57368fbc58f4e3aa23814819f635891a0926b4d6",
            "commit_message": "HATRA 23 paper (#979)\n\nA one-page \"progress report\" paper.",
            "commit_timestamp": 1689969926.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690142830.700676,
            "elapsed_time": 380.3516249656677,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "57368fbc58f4e3aa23814819f635891a0926b4d6",
            "commit_message": "HATRA 23 paper (#979)\n\nA one-page \"progress report\" paper.",
            "commit_timestamp": 1689969926.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690159078.296438,
            "elapsed_time": 387.8790867328644,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "57368fbc58f4e3aa23814819f635891a0926b4d6",
            "commit_message": "HATRA 23 paper (#979)\n\nA one-page \"progress report\" paper.",
            "commit_timestamp": 1689969926.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690171780.014376,
            "elapsed_time": 381.15737533569336,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "57368fbc58f4e3aa23814819f635891a0926b4d6",
            "commit_message": "HATRA 23 paper (#979)\n\nA one-page \"progress report\" paper.",
            "commit_timestamp": 1689969926.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690186286.233158,
            "elapsed_time": 336.0728566646576,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "57368fbc58f4e3aa23814819f635891a0926b4d6",
            "commit_message": "HATRA 23 paper (#979)\n\nA one-page \"progress report\" paper.",
            "commit_timestamp": 1689969926.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690200850.368374,
            "elapsed_time": 413.3767509460449,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "57368fbc58f4e3aa23814819f635891a0926b4d6",
            "commit_message": "HATRA 23 paper (#979)\n\nA one-page \"progress report\" paper.",
            "commit_timestamp": 1689969926.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690214987.707128,
            "elapsed_time": 513.1923079490662,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "743afe6ec9c512c38c827ff3d9c18ccbcfb14cba",
            "commit_message": "README.md: Add Gentoo Linux to listed distributions (#976)\n\nGentoo recently added Luau to their official overlay (the term they use\r\nto describe their package repository) and it would only be appropriate\r\nto include that detail here.\r\n\r\nIt may as well also be the first distribution to *officially* package\r\nit, given the maintainer is one of Gentoo's own.\r\n\r\nSigned-off-by: Sebastian France <MagelessMayhem@protonmail.com>",
            "commit_timestamp": 1690208504.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690229226.755646,
            "elapsed_time": 420.1155729293823,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "743afe6ec9c512c38c827ff3d9c18ccbcfb14cba",
            "commit_message": "README.md: Add Gentoo Linux to listed distributions (#976)\n\nGentoo recently added Luau to their official overlay (the term they use\r\nto describe their package repository) and it would only be appropriate\r\nto include that detail here.\r\n\r\nIt may as well also be the first distribution to *officially* package\r\nit, given the maintainer is one of Gentoo's own.\r\n\r\nSigned-off-by: Sebastian France <MagelessMayhem@protonmail.com>",
            "commit_timestamp": 1690208504.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690245602.372669,
            "elapsed_time": 347.1689169406891,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "743afe6ec9c512c38c827ff3d9c18ccbcfb14cba",
            "commit_message": "README.md: Add Gentoo Linux to listed distributions (#976)\n\nGentoo recently added Luau to their official overlay (the term they use\r\nto describe their package repository) and it would only be appropriate\r\nto include that detail here.\r\n\r\nIt may as well also be the first distribution to *officially* package\r\nit, given the maintainer is one of Gentoo's own.\r\n\r\nSigned-off-by: Sebastian France <MagelessMayhem@protonmail.com>",
            "commit_timestamp": 1690208504.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690258165.433651,
            "elapsed_time": 347.59307312965393,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "743afe6ec9c512c38c827ff3d9c18ccbcfb14cba",
            "commit_message": "README.md: Add Gentoo Linux to listed distributions (#976)\n\nGentoo recently added Luau to their official overlay (the term they use\r\nto describe their package repository) and it would only be appropriate\r\nto include that detail here.\r\n\r\nIt may as well also be the first distribution to *officially* package\r\nit, given the maintainer is one of Gentoo's own.\r\n\r\nSigned-off-by: Sebastian France <MagelessMayhem@protonmail.com>",
            "commit_timestamp": 1690208504.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690272610.552581,
            "elapsed_time": 338.9734344482422,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "743afe6ec9c512c38c827ff3d9c18ccbcfb14cba",
            "commit_message": "README.md: Add Gentoo Linux to listed distributions (#976)\n\nGentoo recently added Luau to their official overlay (the term they use\r\nto describe their package repository) and it would only be appropriate\r\nto include that detail here.\r\n\r\nIt may as well also be the first distribution to *officially* package\r\nit, given the maintainer is one of Gentoo's own.\r\n\r\nSigned-off-by: Sebastian France <MagelessMayhem@protonmail.com>",
            "commit_timestamp": 1690208504.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690287208.744766,
            "elapsed_time": 404.0510082244873,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "743afe6ec9c512c38c827ff3d9c18ccbcfb14cba",
            "commit_message": "README.md: Add Gentoo Linux to listed distributions (#976)\n\nGentoo recently added Luau to their official overlay (the term they use\r\nto describe their package repository) and it would only be appropriate\r\nto include that detail here.\r\n\r\nIt may as well also be the first distribution to *officially* package\r\nit, given the maintainer is one of Gentoo's own.\r\n\r\nSigned-off-by: Sebastian France <MagelessMayhem@protonmail.com>",
            "commit_timestamp": 1690208504.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690301396.063877,
            "elapsed_time": 410.3330590724945,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "743afe6ec9c512c38c827ff3d9c18ccbcfb14cba",
            "commit_message": "README.md: Add Gentoo Linux to listed distributions (#976)\n\nGentoo recently added Luau to their official overlay (the term they use\r\nto describe their package repository) and it would only be appropriate\r\nto include that detail here.\r\n\r\nIt may as well also be the first distribution to *officially* package\r\nit, given the maintainer is one of Gentoo's own.\r\n\r\nSigned-off-by: Sebastian France <MagelessMayhem@protonmail.com>",
            "commit_timestamp": 1690208504.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690315767.139781,
            "elapsed_time": 356.21720266342163,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "743afe6ec9c512c38c827ff3d9c18ccbcfb14cba",
            "commit_message": "README.md: Add Gentoo Linux to listed distributions (#976)\n\nGentoo recently added Luau to their official overlay (the term they use\r\nto describe their package repository) and it would only be appropriate\r\nto include that detail here.\r\n\r\nIt may as well also be the first distribution to *officially* package\r\nit, given the maintainer is one of Gentoo's own.\r\n\r\nSigned-off-by: Sebastian France <MagelessMayhem@protonmail.com>",
            "commit_timestamp": 1690208504.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690332000.627404,
            "elapsed_time": 335.2047860622406,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "743afe6ec9c512c38c827ff3d9c18ccbcfb14cba",
            "commit_message": "README.md: Add Gentoo Linux to listed distributions (#976)\n\nGentoo recently added Luau to their official overlay (the term they use\r\nto describe their package repository) and it would only be appropriate\r\nto include that detail here.\r\n\r\nIt may as well also be the first distribution to *officially* package\r\nit, given the maintainer is one of Gentoo's own.\r\n\r\nSigned-off-by: Sebastian France <MagelessMayhem@protonmail.com>",
            "commit_timestamp": 1690208504.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690344473.235216,
            "elapsed_time": 309.3296592235565,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "743afe6ec9c512c38c827ff3d9c18ccbcfb14cba",
            "commit_message": "README.md: Add Gentoo Linux to listed distributions (#976)\n\nGentoo recently added Luau to their official overlay (the term they use\r\nto describe their package repository) and it would only be appropriate\r\nto include that detail here.\r\n\r\nIt may as well also be the first distribution to *officially* package\r\nit, given the maintainer is one of Gentoo's own.\r\n\r\nSigned-off-by: Sebastian France <MagelessMayhem@protonmail.com>",
            "commit_timestamp": 1690208504.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690359034.820096,
            "elapsed_time": 332.1803379058838,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "743afe6ec9c512c38c827ff3d9c18ccbcfb14cba",
            "commit_message": "README.md: Add Gentoo Linux to listed distributions (#976)\n\nGentoo recently added Luau to their official overlay (the term they use\r\nto describe their package repository) and it would only be appropriate\r\nto include that detail here.\r\n\r\nIt may as well also be the first distribution to *officially* package\r\nit, given the maintainer is one of Gentoo's own.\r\n\r\nSigned-off-by: Sebastian France <MagelessMayhem@protonmail.com>",
            "commit_timestamp": 1690208504.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690373537.99391,
            "elapsed_time": 364.3315734863281,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "743afe6ec9c512c38c827ff3d9c18ccbcfb14cba",
            "commit_message": "README.md: Add Gentoo Linux to listed distributions (#976)\n\nGentoo recently added Luau to their official overlay (the term they use\r\nto describe their package repository) and it would only be appropriate\r\nto include that detail here.\r\n\r\nIt may as well also be the first distribution to *officially* package\r\nit, given the maintainer is one of Gentoo's own.\r\n\r\nSigned-off-by: Sebastian France <MagelessMayhem@protonmail.com>",
            "commit_timestamp": 1690208504.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690387807.666092,
            "elapsed_time": 349.1621608734131,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "f80229c517fe7377a8f0ab9bc7a538c7c619107b",
            "commit_message": "docs: Document return value for table.remove (#987)\n\nFixes #984.",
            "commit_timestamp": 1690378943.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690402094.296228,
            "elapsed_time": 328.9073131084442,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "f80229c517fe7377a8f0ab9bc7a538c7c619107b",
            "commit_message": "docs: Document return value for table.remove (#987)\n\nFixes #984.",
            "commit_timestamp": 1690378943.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690418127.819294,
            "elapsed_time": 337.09039783477783,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "f80229c517fe7377a8f0ab9bc7a538c7c619107b",
            "commit_message": "docs: Document return value for table.remove (#987)\n\nFixes #984.",
            "commit_timestamp": 1690378943.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690430887.505894,
            "elapsed_time": 306.83729219436646,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "f80229c517fe7377a8f0ab9bc7a538c7c619107b",
            "commit_message": "docs: Document return value for table.remove (#987)\n\nFixes #984.",
            "commit_timestamp": 1690378943.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690445362.121877,
            "elapsed_time": 330.46055936813354,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "f80229c517fe7377a8f0ab9bc7a538c7c619107b",
            "commit_message": "docs: Document return value for table.remove (#987)\n\nFixes #984.",
            "commit_timestamp": 1690378943.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690459923.338621,
            "elapsed_time": 335.1545674800873,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "f80229c517fe7377a8f0ab9bc7a538c7c619107b",
            "commit_message": "docs: Document return value for table.remove (#987)\n\nFixes #984.",
            "commit_timestamp": 1690378943.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690474160.669818,
            "elapsed_time": 394.8699758052826,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "f80229c517fe7377a8f0ab9bc7a538c7c619107b",
            "commit_message": "docs: Document return value for table.remove (#987)\n\nFixes #984.",
            "commit_timestamp": 1690378943.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690488528.877024,
            "elapsed_time": 357.2067086696625,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "f80229c517fe7377a8f0ab9bc7a538c7c619107b",
            "commit_message": "docs: Document return value for table.remove (#987)\n\nFixes #984.",
            "commit_timestamp": 1690378943.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690504495.100596,
            "elapsed_time": 367.25817680358887,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "f80229c517fe7377a8f0ab9bc7a538c7c619107b",
            "commit_message": "docs: Document return value for table.remove (#987)\n\nFixes #984.",
            "commit_timestamp": 1690378943.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690517330.954857,
            "elapsed_time": 337.7407124042511,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "f80229c517fe7377a8f0ab9bc7a538c7c619107b",
            "commit_message": "docs: Document return value for table.remove (#987)\n\nFixes #984.",
            "commit_timestamp": 1690378943.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690531744.189465,
            "elapsed_time": 307.4710159301758,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "f80229c517fe7377a8f0ab9bc7a538c7c619107b",
            "commit_message": "docs: Document return value for table.remove (#987)\n\nFixes #984.",
            "commit_timestamp": 1690378943.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690546392.813295,
            "elapsed_time": 395.25767850875854,
            "x64": false,
            "actual_files_count": 394,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "f80229c517fe7377a8f0ab9bc7a538c7c619107b",
            "commit_message": "docs: Document return value for table.remove (#987)\n\nFixes #984.",
            "commit_timestamp": 1690378943.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690560576.277224,
            "elapsed_time": 426.03880167007446,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76f67e0733949bcdf0a83e81213e8cb8797ed632",
            "commit_message": "Sync to upstream/release/588 (#992)\n\nType checker/autocomplete:\r\n* `Luau::autocomplete` no longer performs typechecking internally, make\r\nsure to run `Frontend::check` before performing autocomplete requests\r\n* Autocomplete string suggestions without \"\" are now only suggested\r\ninside the \"\"\r\n* Autocomplete suggestions now include `function (anonymous autofilled)`\r\nkey with a full suggestion for the function expression (with arguments\r\nincluded) stored in `AutocompleteEntry::insertText`\r\n* `AutocompleteEntry::indexedWithSelf` is provided for function call\r\nsuggestions made with `:`\r\n* Cyclic modules now see each other type exports as `any` to prevent\r\nmemory use-after-free (similar to module return type)\r\n\r\nRuntime:\r\n* Updated inline/loop unroll cost model to better handle assignments\r\n(Fixes https://github.com/Roblox/luau/issues/978)\r\n* `math.noise` speed was improved by ~30%\r\n* `table.concat` speed was improved by ~5-7%\r\n* `tonumber` and `tostring` now have fastcall paths that execute ~1.5x\r\nand ~2.5x faster respectively (fixes #777)\r\n* Fixed crash in `luaL_typename` when index refers to a non-existing\r\nvalue\r\n* Fixed potential out of memory scenario when using `string.sub` or\r\n`string.char` in a loop\r\n* Fixed behavior of some fastcall builtins when called without arguments\r\nunder -O2 to match original functions\r\n* Support for native code execution in VM is now enabled by default\r\n(note: native code still has to be generated explicitly)\r\n* `Codegen::compile` now accepts `CodeGen_OnlyNativeModules` flag. When\r\nset, only modules that have a `--!native` hot-comment at the top will be\r\ncompiled to native code\r\n\r\nIn our new typechecker:\r\n* Generic type packs are no longer considered to be variadic during\r\nunification\r\n* Timeout and cancellation now works in new solver\r\n* Fixed false positive errors around 'table' and 'function' type\r\nrefinements\r\n* Table literals now use covariant unification rules. This is sound\r\nsince literal has no type specified and has no aliases\r\n* Fixed issues with blocked types escaping the constraint solver\r\n* Fixed more places where error messages that should've been suppressed\r\nwere still reported\r\n* Fixed errors when iterating over a top table type\r\n\r\nIn our native code generation (jit):\r\n* 'DebugLuauAbortingChecks' flag is now supported on A64\r\n* LOP_NEWCLOSURE has been translated to IR\r\n",
            "commit_timestamp": 1690557233.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690574889.76172,
            "elapsed_time": 351.8915967941284,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76f67e0733949bcdf0a83e81213e8cb8797ed632",
            "commit_message": "Sync to upstream/release/588 (#992)\n\nType checker/autocomplete:\r\n* `Luau::autocomplete` no longer performs typechecking internally, make\r\nsure to run `Frontend::check` before performing autocomplete requests\r\n* Autocomplete string suggestions without \"\" are now only suggested\r\ninside the \"\"\r\n* Autocomplete suggestions now include `function (anonymous autofilled)`\r\nkey with a full suggestion for the function expression (with arguments\r\nincluded) stored in `AutocompleteEntry::insertText`\r\n* `AutocompleteEntry::indexedWithSelf` is provided for function call\r\nsuggestions made with `:`\r\n* Cyclic modules now see each other type exports as `any` to prevent\r\nmemory use-after-free (similar to module return type)\r\n\r\nRuntime:\r\n* Updated inline/loop unroll cost model to better handle assignments\r\n(Fixes https://github.com/Roblox/luau/issues/978)\r\n* `math.noise` speed was improved by ~30%\r\n* `table.concat` speed was improved by ~5-7%\r\n* `tonumber` and `tostring` now have fastcall paths that execute ~1.5x\r\nand ~2.5x faster respectively (fixes #777)\r\n* Fixed crash in `luaL_typename` when index refers to a non-existing\r\nvalue\r\n* Fixed potential out of memory scenario when using `string.sub` or\r\n`string.char` in a loop\r\n* Fixed behavior of some fastcall builtins when called without arguments\r\nunder -O2 to match original functions\r\n* Support for native code execution in VM is now enabled by default\r\n(note: native code still has to be generated explicitly)\r\n* `Codegen::compile` now accepts `CodeGen_OnlyNativeModules` flag. When\r\nset, only modules that have a `--!native` hot-comment at the top will be\r\ncompiled to native code\r\n\r\nIn our new typechecker:\r\n* Generic type packs are no longer considered to be variadic during\r\nunification\r\n* Timeout and cancellation now works in new solver\r\n* Fixed false positive errors around 'table' and 'function' type\r\nrefinements\r\n* Table literals now use covariant unification rules. This is sound\r\nsince literal has no type specified and has no aliases\r\n* Fixed issues with blocked types escaping the constraint solver\r\n* Fixed more places where error messages that should've been suppressed\r\nwere still reported\r\n* Fixed errors when iterating over a top table type\r\n\r\nIn our native code generation (jit):\r\n* 'DebugLuauAbortingChecks' flag is now supported on A64\r\n* LOP_NEWCLOSURE has been translated to IR\r\n",
            "commit_timestamp": 1690557233.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690590886.53443,
            "elapsed_time": 326.8471710681915,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76f67e0733949bcdf0a83e81213e8cb8797ed632",
            "commit_message": "Sync to upstream/release/588 (#992)\n\nType checker/autocomplete:\r\n* `Luau::autocomplete` no longer performs typechecking internally, make\r\nsure to run `Frontend::check` before performing autocomplete requests\r\n* Autocomplete string suggestions without \"\" are now only suggested\r\ninside the \"\"\r\n* Autocomplete suggestions now include `function (anonymous autofilled)`\r\nkey with a full suggestion for the function expression (with arguments\r\nincluded) stored in `AutocompleteEntry::insertText`\r\n* `AutocompleteEntry::indexedWithSelf` is provided for function call\r\nsuggestions made with `:`\r\n* Cyclic modules now see each other type exports as `any` to prevent\r\nmemory use-after-free (similar to module return type)\r\n\r\nRuntime:\r\n* Updated inline/loop unroll cost model to better handle assignments\r\n(Fixes https://github.com/Roblox/luau/issues/978)\r\n* `math.noise` speed was improved by ~30%\r\n* `table.concat` speed was improved by ~5-7%\r\n* `tonumber` and `tostring` now have fastcall paths that execute ~1.5x\r\nand ~2.5x faster respectively (fixes #777)\r\n* Fixed crash in `luaL_typename` when index refers to a non-existing\r\nvalue\r\n* Fixed potential out of memory scenario when using `string.sub` or\r\n`string.char` in a loop\r\n* Fixed behavior of some fastcall builtins when called without arguments\r\nunder -O2 to match original functions\r\n* Support for native code execution in VM is now enabled by default\r\n(note: native code still has to be generated explicitly)\r\n* `Codegen::compile` now accepts `CodeGen_OnlyNativeModules` flag. When\r\nset, only modules that have a `--!native` hot-comment at the top will be\r\ncompiled to native code\r\n\r\nIn our new typechecker:\r\n* Generic type packs are no longer considered to be variadic during\r\nunification\r\n* Timeout and cancellation now works in new solver\r\n* Fixed false positive errors around 'table' and 'function' type\r\nrefinements\r\n* Table literals now use covariant unification rules. This is sound\r\nsince literal has no type specified and has no aliases\r\n* Fixed issues with blocked types escaping the constraint solver\r\n* Fixed more places where error messages that should've been suppressed\r\nwere still reported\r\n* Fixed errors when iterating over a top table type\r\n\r\nIn our native code generation (jit):\r\n* 'DebugLuauAbortingChecks' flag is now supported on A64\r\n* LOP_NEWCLOSURE has been translated to IR\r\n",
            "commit_timestamp": 1690557233.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690603723.695927,
            "elapsed_time": 337.2344925403595,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76f67e0733949bcdf0a83e81213e8cb8797ed632",
            "commit_message": "Sync to upstream/release/588 (#992)\n\nType checker/autocomplete:\r\n* `Luau::autocomplete` no longer performs typechecking internally, make\r\nsure to run `Frontend::check` before performing autocomplete requests\r\n* Autocomplete string suggestions without \"\" are now only suggested\r\ninside the \"\"\r\n* Autocomplete suggestions now include `function (anonymous autofilled)`\r\nkey with a full suggestion for the function expression (with arguments\r\nincluded) stored in `AutocompleteEntry::insertText`\r\n* `AutocompleteEntry::indexedWithSelf` is provided for function call\r\nsuggestions made with `:`\r\n* Cyclic modules now see each other type exports as `any` to prevent\r\nmemory use-after-free (similar to module return type)\r\n\r\nRuntime:\r\n* Updated inline/loop unroll cost model to better handle assignments\r\n(Fixes https://github.com/Roblox/luau/issues/978)\r\n* `math.noise` speed was improved by ~30%\r\n* `table.concat` speed was improved by ~5-7%\r\n* `tonumber` and `tostring` now have fastcall paths that execute ~1.5x\r\nand ~2.5x faster respectively (fixes #777)\r\n* Fixed crash in `luaL_typename` when index refers to a non-existing\r\nvalue\r\n* Fixed potential out of memory scenario when using `string.sub` or\r\n`string.char` in a loop\r\n* Fixed behavior of some fastcall builtins when called without arguments\r\nunder -O2 to match original functions\r\n* Support for native code execution in VM is now enabled by default\r\n(note: native code still has to be generated explicitly)\r\n* `Codegen::compile` now accepts `CodeGen_OnlyNativeModules` flag. When\r\nset, only modules that have a `--!native` hot-comment at the top will be\r\ncompiled to native code\r\n\r\nIn our new typechecker:\r\n* Generic type packs are no longer considered to be variadic during\r\nunification\r\n* Timeout and cancellation now works in new solver\r\n* Fixed false positive errors around 'table' and 'function' type\r\nrefinements\r\n* Table literals now use covariant unification rules. This is sound\r\nsince literal has no type specified and has no aliases\r\n* Fixed issues with blocked types escaping the constraint solver\r\n* Fixed more places where error messages that should've been suppressed\r\nwere still reported\r\n* Fixed errors when iterating over a top table type\r\n\r\nIn our native code generation (jit):\r\n* 'DebugLuauAbortingChecks' flag is now supported on A64\r\n* LOP_NEWCLOSURE has been translated to IR\r\n",
            "commit_timestamp": 1690557233.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690618186.956268,
            "elapsed_time": 415.31044602394104,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76f67e0733949bcdf0a83e81213e8cb8797ed632",
            "commit_message": "Sync to upstream/release/588 (#992)\n\nType checker/autocomplete:\r\n* `Luau::autocomplete` no longer performs typechecking internally, make\r\nsure to run `Frontend::check` before performing autocomplete requests\r\n* Autocomplete string suggestions without \"\" are now only suggested\r\ninside the \"\"\r\n* Autocomplete suggestions now include `function (anonymous autofilled)`\r\nkey with a full suggestion for the function expression (with arguments\r\nincluded) stored in `AutocompleteEntry::insertText`\r\n* `AutocompleteEntry::indexedWithSelf` is provided for function call\r\nsuggestions made with `:`\r\n* Cyclic modules now see each other type exports as `any` to prevent\r\nmemory use-after-free (similar to module return type)\r\n\r\nRuntime:\r\n* Updated inline/loop unroll cost model to better handle assignments\r\n(Fixes https://github.com/Roblox/luau/issues/978)\r\n* `math.noise` speed was improved by ~30%\r\n* `table.concat` speed was improved by ~5-7%\r\n* `tonumber` and `tostring` now have fastcall paths that execute ~1.5x\r\nand ~2.5x faster respectively (fixes #777)\r\n* Fixed crash in `luaL_typename` when index refers to a non-existing\r\nvalue\r\n* Fixed potential out of memory scenario when using `string.sub` or\r\n`string.char` in a loop\r\n* Fixed behavior of some fastcall builtins when called without arguments\r\nunder -O2 to match original functions\r\n* Support for native code execution in VM is now enabled by default\r\n(note: native code still has to be generated explicitly)\r\n* `Codegen::compile` now accepts `CodeGen_OnlyNativeModules` flag. When\r\nset, only modules that have a `--!native` hot-comment at the top will be\r\ncompiled to native code\r\n\r\nIn our new typechecker:\r\n* Generic type packs are no longer considered to be variadic during\r\nunification\r\n* Timeout and cancellation now works in new solver\r\n* Fixed false positive errors around 'table' and 'function' type\r\nrefinements\r\n* Table literals now use covariant unification rules. This is sound\r\nsince literal has no type specified and has no aliases\r\n* Fixed issues with blocked types escaping the constraint solver\r\n* Fixed more places where error messages that should've been suppressed\r\nwere still reported\r\n* Fixed errors when iterating over a top table type\r\n\r\nIn our native code generation (jit):\r\n* 'DebugLuauAbortingChecks' flag is now supported on A64\r\n* LOP_NEWCLOSURE has been translated to IR\r\n",
            "commit_timestamp": 1690557233.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690632749.267944,
            "elapsed_time": 339.3473126888275,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76f67e0733949bcdf0a83e81213e8cb8797ed632",
            "commit_message": "Sync to upstream/release/588 (#992)\n\nType checker/autocomplete:\r\n* `Luau::autocomplete` no longer performs typechecking internally, make\r\nsure to run `Frontend::check` before performing autocomplete requests\r\n* Autocomplete string suggestions without \"\" are now only suggested\r\ninside the \"\"\r\n* Autocomplete suggestions now include `function (anonymous autofilled)`\r\nkey with a full suggestion for the function expression (with arguments\r\nincluded) stored in `AutocompleteEntry::insertText`\r\n* `AutocompleteEntry::indexedWithSelf` is provided for function call\r\nsuggestions made with `:`\r\n* Cyclic modules now see each other type exports as `any` to prevent\r\nmemory use-after-free (similar to module return type)\r\n\r\nRuntime:\r\n* Updated inline/loop unroll cost model to better handle assignments\r\n(Fixes https://github.com/Roblox/luau/issues/978)\r\n* `math.noise` speed was improved by ~30%\r\n* `table.concat` speed was improved by ~5-7%\r\n* `tonumber` and `tostring` now have fastcall paths that execute ~1.5x\r\nand ~2.5x faster respectively (fixes #777)\r\n* Fixed crash in `luaL_typename` when index refers to a non-existing\r\nvalue\r\n* Fixed potential out of memory scenario when using `string.sub` or\r\n`string.char` in a loop\r\n* Fixed behavior of some fastcall builtins when called without arguments\r\nunder -O2 to match original functions\r\n* Support for native code execution in VM is now enabled by default\r\n(note: native code still has to be generated explicitly)\r\n* `Codegen::compile` now accepts `CodeGen_OnlyNativeModules` flag. When\r\nset, only modules that have a `--!native` hot-comment at the top will be\r\ncompiled to native code\r\n\r\nIn our new typechecker:\r\n* Generic type packs are no longer considered to be variadic during\r\nunification\r\n* Timeout and cancellation now works in new solver\r\n* Fixed false positive errors around 'table' and 'function' type\r\nrefinements\r\n* Table literals now use covariant unification rules. This is sound\r\nsince literal has no type specified and has no aliases\r\n* Fixed issues with blocked types escaping the constraint solver\r\n* Fixed more places where error messages that should've been suppressed\r\nwere still reported\r\n* Fixed errors when iterating over a top table type\r\n\r\nIn our native code generation (jit):\r\n* 'DebugLuauAbortingChecks' flag is now supported on A64\r\n* LOP_NEWCLOSURE has been translated to IR\r\n",
            "commit_timestamp": 1690557233.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690646893.470778,
            "elapsed_time": 334.8785037994385,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76f67e0733949bcdf0a83e81213e8cb8797ed632",
            "commit_message": "Sync to upstream/release/588 (#992)\n\nType checker/autocomplete:\r\n* `Luau::autocomplete` no longer performs typechecking internally, make\r\nsure to run `Frontend::check` before performing autocomplete requests\r\n* Autocomplete string suggestions without \"\" are now only suggested\r\ninside the \"\"\r\n* Autocomplete suggestions now include `function (anonymous autofilled)`\r\nkey with a full suggestion for the function expression (with arguments\r\nincluded) stored in `AutocompleteEntry::insertText`\r\n* `AutocompleteEntry::indexedWithSelf` is provided for function call\r\nsuggestions made with `:`\r\n* Cyclic modules now see each other type exports as `any` to prevent\r\nmemory use-after-free (similar to module return type)\r\n\r\nRuntime:\r\n* Updated inline/loop unroll cost model to better handle assignments\r\n(Fixes https://github.com/Roblox/luau/issues/978)\r\n* `math.noise` speed was improved by ~30%\r\n* `table.concat` speed was improved by ~5-7%\r\n* `tonumber` and `tostring` now have fastcall paths that execute ~1.5x\r\nand ~2.5x faster respectively (fixes #777)\r\n* Fixed crash in `luaL_typename` when index refers to a non-existing\r\nvalue\r\n* Fixed potential out of memory scenario when using `string.sub` or\r\n`string.char` in a loop\r\n* Fixed behavior of some fastcall builtins when called without arguments\r\nunder -O2 to match original functions\r\n* Support for native code execution in VM is now enabled by default\r\n(note: native code still has to be generated explicitly)\r\n* `Codegen::compile` now accepts `CodeGen_OnlyNativeModules` flag. When\r\nset, only modules that have a `--!native` hot-comment at the top will be\r\ncompiled to native code\r\n\r\nIn our new typechecker:\r\n* Generic type packs are no longer considered to be variadic during\r\nunification\r\n* Timeout and cancellation now works in new solver\r\n* Fixed false positive errors around 'table' and 'function' type\r\nrefinements\r\n* Table literals now use covariant unification rules. This is sound\r\nsince literal has no type specified and has no aliases\r\n* Fixed issues with blocked types escaping the constraint solver\r\n* Fixed more places where error messages that should've been suppressed\r\nwere still reported\r\n* Fixed errors when iterating over a top table type\r\n\r\nIn our native code generation (jit):\r\n* 'DebugLuauAbortingChecks' flag is now supported on A64\r\n* LOP_NEWCLOSURE has been translated to IR\r\n",
            "commit_timestamp": 1690557233.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690661186.169792,
            "elapsed_time": 379.8908841609955,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76f67e0733949bcdf0a83e81213e8cb8797ed632",
            "commit_message": "Sync to upstream/release/588 (#992)\n\nType checker/autocomplete:\r\n* `Luau::autocomplete` no longer performs typechecking internally, make\r\nsure to run `Frontend::check` before performing autocomplete requests\r\n* Autocomplete string suggestions without \"\" are now only suggested\r\ninside the \"\"\r\n* Autocomplete suggestions now include `function (anonymous autofilled)`\r\nkey with a full suggestion for the function expression (with arguments\r\nincluded) stored in `AutocompleteEntry::insertText`\r\n* `AutocompleteEntry::indexedWithSelf` is provided for function call\r\nsuggestions made with `:`\r\n* Cyclic modules now see each other type exports as `any` to prevent\r\nmemory use-after-free (similar to module return type)\r\n\r\nRuntime:\r\n* Updated inline/loop unroll cost model to better handle assignments\r\n(Fixes https://github.com/Roblox/luau/issues/978)\r\n* `math.noise` speed was improved by ~30%\r\n* `table.concat` speed was improved by ~5-7%\r\n* `tonumber` and `tostring` now have fastcall paths that execute ~1.5x\r\nand ~2.5x faster respectively (fixes #777)\r\n* Fixed crash in `luaL_typename` when index refers to a non-existing\r\nvalue\r\n* Fixed potential out of memory scenario when using `string.sub` or\r\n`string.char` in a loop\r\n* Fixed behavior of some fastcall builtins when called without arguments\r\nunder -O2 to match original functions\r\n* Support for native code execution in VM is now enabled by default\r\n(note: native code still has to be generated explicitly)\r\n* `Codegen::compile` now accepts `CodeGen_OnlyNativeModules` flag. When\r\nset, only modules that have a `--!native` hot-comment at the top will be\r\ncompiled to native code\r\n\r\nIn our new typechecker:\r\n* Generic type packs are no longer considered to be variadic during\r\nunification\r\n* Timeout and cancellation now works in new solver\r\n* Fixed false positive errors around 'table' and 'function' type\r\nrefinements\r\n* Table literals now use covariant unification rules. This is sound\r\nsince literal has no type specified and has no aliases\r\n* Fixed issues with blocked types escaping the constraint solver\r\n* Fixed more places where error messages that should've been suppressed\r\nwere still reported\r\n* Fixed errors when iterating over a top table type\r\n\r\nIn our native code generation (jit):\r\n* 'DebugLuauAbortingChecks' flag is now supported on A64\r\n* LOP_NEWCLOSURE has been translated to IR\r\n",
            "commit_timestamp": 1690557233.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690677531.835314,
            "elapsed_time": 335.0959777832031,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76f67e0733949bcdf0a83e81213e8cb8797ed632",
            "commit_message": "Sync to upstream/release/588 (#992)\n\nType checker/autocomplete:\r\n* `Luau::autocomplete` no longer performs typechecking internally, make\r\nsure to run `Frontend::check` before performing autocomplete requests\r\n* Autocomplete string suggestions without \"\" are now only suggested\r\ninside the \"\"\r\n* Autocomplete suggestions now include `function (anonymous autofilled)`\r\nkey with a full suggestion for the function expression (with arguments\r\nincluded) stored in `AutocompleteEntry::insertText`\r\n* `AutocompleteEntry::indexedWithSelf` is provided for function call\r\nsuggestions made with `:`\r\n* Cyclic modules now see each other type exports as `any` to prevent\r\nmemory use-after-free (similar to module return type)\r\n\r\nRuntime:\r\n* Updated inline/loop unroll cost model to better handle assignments\r\n(Fixes https://github.com/Roblox/luau/issues/978)\r\n* `math.noise` speed was improved by ~30%\r\n* `table.concat` speed was improved by ~5-7%\r\n* `tonumber` and `tostring` now have fastcall paths that execute ~1.5x\r\nand ~2.5x faster respectively (fixes #777)\r\n* Fixed crash in `luaL_typename` when index refers to a non-existing\r\nvalue\r\n* Fixed potential out of memory scenario when using `string.sub` or\r\n`string.char` in a loop\r\n* Fixed behavior of some fastcall builtins when called without arguments\r\nunder -O2 to match original functions\r\n* Support for native code execution in VM is now enabled by default\r\n(note: native code still has to be generated explicitly)\r\n* `Codegen::compile` now accepts `CodeGen_OnlyNativeModules` flag. When\r\nset, only modules that have a `--!native` hot-comment at the top will be\r\ncompiled to native code\r\n\r\nIn our new typechecker:\r\n* Generic type packs are no longer considered to be variadic during\r\nunification\r\n* Timeout and cancellation now works in new solver\r\n* Fixed false positive errors around 'table' and 'function' type\r\nrefinements\r\n* Table literals now use covariant unification rules. This is sound\r\nsince literal has no type specified and has no aliases\r\n* Fixed issues with blocked types escaping the constraint solver\r\n* Fixed more places where error messages that should've been suppressed\r\nwere still reported\r\n* Fixed errors when iterating over a top table type\r\n\r\nIn our native code generation (jit):\r\n* 'DebugLuauAbortingChecks' flag is now supported on A64\r\n* LOP_NEWCLOSURE has been translated to IR\r\n",
            "commit_timestamp": 1690557233.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690690127.845312,
            "elapsed_time": 350.67891907691956,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76f67e0733949bcdf0a83e81213e8cb8797ed632",
            "commit_message": "Sync to upstream/release/588 (#992)\n\nType checker/autocomplete:\r\n* `Luau::autocomplete` no longer performs typechecking internally, make\r\nsure to run `Frontend::check` before performing autocomplete requests\r\n* Autocomplete string suggestions without \"\" are now only suggested\r\ninside the \"\"\r\n* Autocomplete suggestions now include `function (anonymous autofilled)`\r\nkey with a full suggestion for the function expression (with arguments\r\nincluded) stored in `AutocompleteEntry::insertText`\r\n* `AutocompleteEntry::indexedWithSelf` is provided for function call\r\nsuggestions made with `:`\r\n* Cyclic modules now see each other type exports as `any` to prevent\r\nmemory use-after-free (similar to module return type)\r\n\r\nRuntime:\r\n* Updated inline/loop unroll cost model to better handle assignments\r\n(Fixes https://github.com/Roblox/luau/issues/978)\r\n* `math.noise` speed was improved by ~30%\r\n* `table.concat` speed was improved by ~5-7%\r\n* `tonumber` and `tostring` now have fastcall paths that execute ~1.5x\r\nand ~2.5x faster respectively (fixes #777)\r\n* Fixed crash in `luaL_typename` when index refers to a non-existing\r\nvalue\r\n* Fixed potential out of memory scenario when using `string.sub` or\r\n`string.char` in a loop\r\n* Fixed behavior of some fastcall builtins when called without arguments\r\nunder -O2 to match original functions\r\n* Support for native code execution in VM is now enabled by default\r\n(note: native code still has to be generated explicitly)\r\n* `Codegen::compile` now accepts `CodeGen_OnlyNativeModules` flag. When\r\nset, only modules that have a `--!native` hot-comment at the top will be\r\ncompiled to native code\r\n\r\nIn our new typechecker:\r\n* Generic type packs are no longer considered to be variadic during\r\nunification\r\n* Timeout and cancellation now works in new solver\r\n* Fixed false positive errors around 'table' and 'function' type\r\nrefinements\r\n* Table literals now use covariant unification rules. This is sound\r\nsince literal has no type specified and has no aliases\r\n* Fixed issues with blocked types escaping the constraint solver\r\n* Fixed more places where error messages that should've been suppressed\r\nwere still reported\r\n* Fixed errors when iterating over a top table type\r\n\r\nIn our native code generation (jit):\r\n* 'DebugLuauAbortingChecks' flag is now supported on A64\r\n* LOP_NEWCLOSURE has been translated to IR\r\n",
            "commit_timestamp": 1690557233.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690704523.369378,
            "elapsed_time": 321.83039927482605,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76f67e0733949bcdf0a83e81213e8cb8797ed632",
            "commit_message": "Sync to upstream/release/588 (#992)\n\nType checker/autocomplete:\r\n* `Luau::autocomplete` no longer performs typechecking internally, make\r\nsure to run `Frontend::check` before performing autocomplete requests\r\n* Autocomplete string suggestions without \"\" are now only suggested\r\ninside the \"\"\r\n* Autocomplete suggestions now include `function (anonymous autofilled)`\r\nkey with a full suggestion for the function expression (with arguments\r\nincluded) stored in `AutocompleteEntry::insertText`\r\n* `AutocompleteEntry::indexedWithSelf` is provided for function call\r\nsuggestions made with `:`\r\n* Cyclic modules now see each other type exports as `any` to prevent\r\nmemory use-after-free (similar to module return type)\r\n\r\nRuntime:\r\n* Updated inline/loop unroll cost model to better handle assignments\r\n(Fixes https://github.com/Roblox/luau/issues/978)\r\n* `math.noise` speed was improved by ~30%\r\n* `table.concat` speed was improved by ~5-7%\r\n* `tonumber` and `tostring` now have fastcall paths that execute ~1.5x\r\nand ~2.5x faster respectively (fixes #777)\r\n* Fixed crash in `luaL_typename` when index refers to a non-existing\r\nvalue\r\n* Fixed potential out of memory scenario when using `string.sub` or\r\n`string.char` in a loop\r\n* Fixed behavior of some fastcall builtins when called without arguments\r\nunder -O2 to match original functions\r\n* Support for native code execution in VM is now enabled by default\r\n(note: native code still has to be generated explicitly)\r\n* `Codegen::compile` now accepts `CodeGen_OnlyNativeModules` flag. When\r\nset, only modules that have a `--!native` hot-comment at the top will be\r\ncompiled to native code\r\n\r\nIn our new typechecker:\r\n* Generic type packs are no longer considered to be variadic during\r\nunification\r\n* Timeout and cancellation now works in new solver\r\n* Fixed false positive errors around 'table' and 'function' type\r\nrefinements\r\n* Table literals now use covariant unification rules. This is sound\r\nsince literal has no type specified and has no aliases\r\n* Fixed issues with blocked types escaping the constraint solver\r\n* Fixed more places where error messages that should've been suppressed\r\nwere still reported\r\n* Fixed errors when iterating over a top table type\r\n\r\nIn our native code generation (jit):\r\n* 'DebugLuauAbortingChecks' flag is now supported on A64\r\n* LOP_NEWCLOSURE has been translated to IR\r\n",
            "commit_timestamp": 1690557233.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690719138.768579,
            "elapsed_time": 328.0204679965973,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76f67e0733949bcdf0a83e81213e8cb8797ed632",
            "commit_message": "Sync to upstream/release/588 (#992)\n\nType checker/autocomplete:\r\n* `Luau::autocomplete` no longer performs typechecking internally, make\r\nsure to run `Frontend::check` before performing autocomplete requests\r\n* Autocomplete string suggestions without \"\" are now only suggested\r\ninside the \"\"\r\n* Autocomplete suggestions now include `function (anonymous autofilled)`\r\nkey with a full suggestion for the function expression (with arguments\r\nincluded) stored in `AutocompleteEntry::insertText`\r\n* `AutocompleteEntry::indexedWithSelf` is provided for function call\r\nsuggestions made with `:`\r\n* Cyclic modules now see each other type exports as `any` to prevent\r\nmemory use-after-free (similar to module return type)\r\n\r\nRuntime:\r\n* Updated inline/loop unroll cost model to better handle assignments\r\n(Fixes https://github.com/Roblox/luau/issues/978)\r\n* `math.noise` speed was improved by ~30%\r\n* `table.concat` speed was improved by ~5-7%\r\n* `tonumber` and `tostring` now have fastcall paths that execute ~1.5x\r\nand ~2.5x faster respectively (fixes #777)\r\n* Fixed crash in `luaL_typename` when index refers to a non-existing\r\nvalue\r\n* Fixed potential out of memory scenario when using `string.sub` or\r\n`string.char` in a loop\r\n* Fixed behavior of some fastcall builtins when called without arguments\r\nunder -O2 to match original functions\r\n* Support for native code execution in VM is now enabled by default\r\n(note: native code still has to be generated explicitly)\r\n* `Codegen::compile` now accepts `CodeGen_OnlyNativeModules` flag. When\r\nset, only modules that have a `--!native` hot-comment at the top will be\r\ncompiled to native code\r\n\r\nIn our new typechecker:\r\n* Generic type packs are no longer considered to be variadic during\r\nunification\r\n* Timeout and cancellation now works in new solver\r\n* Fixed false positive errors around 'table' and 'function' type\r\nrefinements\r\n* Table literals now use covariant unification rules. This is sound\r\nsince literal has no type specified and has no aliases\r\n* Fixed issues with blocked types escaping the constraint solver\r\n* Fixed more places where error messages that should've been suppressed\r\nwere still reported\r\n* Fixed errors when iterating over a top table type\r\n\r\nIn our native code generation (jit):\r\n* 'DebugLuauAbortingChecks' flag is now supported on A64\r\n* LOP_NEWCLOSURE has been translated to IR\r\n",
            "commit_timestamp": 1690557233.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690733271.762323,
            "elapsed_time": 439.7233281135559,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76f67e0733949bcdf0a83e81213e8cb8797ed632",
            "commit_message": "Sync to upstream/release/588 (#992)\n\nType checker/autocomplete:\r\n* `Luau::autocomplete` no longer performs typechecking internally, make\r\nsure to run `Frontend::check` before performing autocomplete requests\r\n* Autocomplete string suggestions without \"\" are now only suggested\r\ninside the \"\"\r\n* Autocomplete suggestions now include `function (anonymous autofilled)`\r\nkey with a full suggestion for the function expression (with arguments\r\nincluded) stored in `AutocompleteEntry::insertText`\r\n* `AutocompleteEntry::indexedWithSelf` is provided for function call\r\nsuggestions made with `:`\r\n* Cyclic modules now see each other type exports as `any` to prevent\r\nmemory use-after-free (similar to module return type)\r\n\r\nRuntime:\r\n* Updated inline/loop unroll cost model to better handle assignments\r\n(Fixes https://github.com/Roblox/luau/issues/978)\r\n* `math.noise` speed was improved by ~30%\r\n* `table.concat` speed was improved by ~5-7%\r\n* `tonumber` and `tostring` now have fastcall paths that execute ~1.5x\r\nand ~2.5x faster respectively (fixes #777)\r\n* Fixed crash in `luaL_typename` when index refers to a non-existing\r\nvalue\r\n* Fixed potential out of memory scenario when using `string.sub` or\r\n`string.char` in a loop\r\n* Fixed behavior of some fastcall builtins when called without arguments\r\nunder -O2 to match original functions\r\n* Support for native code execution in VM is now enabled by default\r\n(note: native code still has to be generated explicitly)\r\n* `Codegen::compile` now accepts `CodeGen_OnlyNativeModules` flag. When\r\nset, only modules that have a `--!native` hot-comment at the top will be\r\ncompiled to native code\r\n\r\nIn our new typechecker:\r\n* Generic type packs are no longer considered to be variadic during\r\nunification\r\n* Timeout and cancellation now works in new solver\r\n* Fixed false positive errors around 'table' and 'function' type\r\nrefinements\r\n* Table literals now use covariant unification rules. This is sound\r\nsince literal has no type specified and has no aliases\r\n* Fixed issues with blocked types escaping the constraint solver\r\n* Fixed more places where error messages that should've been suppressed\r\nwere still reported\r\n* Fixed errors when iterating over a top table type\r\n\r\nIn our native code generation (jit):\r\n* 'DebugLuauAbortingChecks' flag is now supported on A64\r\n* LOP_NEWCLOSURE has been translated to IR\r\n",
            "commit_timestamp": 1690557233.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690747586.572345,
            "elapsed_time": 345.2012541294098,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76f67e0733949bcdf0a83e81213e8cb8797ed632",
            "commit_message": "Sync to upstream/release/588 (#992)\n\nType checker/autocomplete:\r\n* `Luau::autocomplete` no longer performs typechecking internally, make\r\nsure to run `Frontend::check` before performing autocomplete requests\r\n* Autocomplete string suggestions without \"\" are now only suggested\r\ninside the \"\"\r\n* Autocomplete suggestions now include `function (anonymous autofilled)`\r\nkey with a full suggestion for the function expression (with arguments\r\nincluded) stored in `AutocompleteEntry::insertText`\r\n* `AutocompleteEntry::indexedWithSelf` is provided for function call\r\nsuggestions made with `:`\r\n* Cyclic modules now see each other type exports as `any` to prevent\r\nmemory use-after-free (similar to module return type)\r\n\r\nRuntime:\r\n* Updated inline/loop unroll cost model to better handle assignments\r\n(Fixes https://github.com/Roblox/luau/issues/978)\r\n* `math.noise` speed was improved by ~30%\r\n* `table.concat` speed was improved by ~5-7%\r\n* `tonumber` and `tostring` now have fastcall paths that execute ~1.5x\r\nand ~2.5x faster respectively (fixes #777)\r\n* Fixed crash in `luaL_typename` when index refers to a non-existing\r\nvalue\r\n* Fixed potential out of memory scenario when using `string.sub` or\r\n`string.char` in a loop\r\n* Fixed behavior of some fastcall builtins when called without arguments\r\nunder -O2 to match original functions\r\n* Support for native code execution in VM is now enabled by default\r\n(note: native code still has to be generated explicitly)\r\n* `Codegen::compile` now accepts `CodeGen_OnlyNativeModules` flag. When\r\nset, only modules that have a `--!native` hot-comment at the top will be\r\ncompiled to native code\r\n\r\nIn our new typechecker:\r\n* Generic type packs are no longer considered to be variadic during\r\nunification\r\n* Timeout and cancellation now works in new solver\r\n* Fixed false positive errors around 'table' and 'function' type\r\nrefinements\r\n* Table literals now use covariant unification rules. This is sound\r\nsince literal has no type specified and has no aliases\r\n* Fixed issues with blocked types escaping the constraint solver\r\n* Fixed more places where error messages that should've been suppressed\r\nwere still reported\r\n* Fixed errors when iterating over a top table type\r\n\r\nIn our native code generation (jit):\r\n* 'DebugLuauAbortingChecks' flag is now supported on A64\r\n* LOP_NEWCLOSURE has been translated to IR\r\n",
            "commit_timestamp": 1690557233.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690763864.958618,
            "elapsed_time": 400.21787905693054,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76f67e0733949bcdf0a83e81213e8cb8797ed632",
            "commit_message": "Sync to upstream/release/588 (#992)\n\nType checker/autocomplete:\r\n* `Luau::autocomplete` no longer performs typechecking internally, make\r\nsure to run `Frontend::check` before performing autocomplete requests\r\n* Autocomplete string suggestions without \"\" are now only suggested\r\ninside the \"\"\r\n* Autocomplete suggestions now include `function (anonymous autofilled)`\r\nkey with a full suggestion for the function expression (with arguments\r\nincluded) stored in `AutocompleteEntry::insertText`\r\n* `AutocompleteEntry::indexedWithSelf` is provided for function call\r\nsuggestions made with `:`\r\n* Cyclic modules now see each other type exports as `any` to prevent\r\nmemory use-after-free (similar to module return type)\r\n\r\nRuntime:\r\n* Updated inline/loop unroll cost model to better handle assignments\r\n(Fixes https://github.com/Roblox/luau/issues/978)\r\n* `math.noise` speed was improved by ~30%\r\n* `table.concat` speed was improved by ~5-7%\r\n* `tonumber` and `tostring` now have fastcall paths that execute ~1.5x\r\nand ~2.5x faster respectively (fixes #777)\r\n* Fixed crash in `luaL_typename` when index refers to a non-existing\r\nvalue\r\n* Fixed potential out of memory scenario when using `string.sub` or\r\n`string.char` in a loop\r\n* Fixed behavior of some fastcall builtins when called without arguments\r\nunder -O2 to match original functions\r\n* Support for native code execution in VM is now enabled by default\r\n(note: native code still has to be generated explicitly)\r\n* `Codegen::compile` now accepts `CodeGen_OnlyNativeModules` flag. When\r\nset, only modules that have a `--!native` hot-comment at the top will be\r\ncompiled to native code\r\n\r\nIn our new typechecker:\r\n* Generic type packs are no longer considered to be variadic during\r\nunification\r\n* Timeout and cancellation now works in new solver\r\n* Fixed false positive errors around 'table' and 'function' type\r\nrefinements\r\n* Table literals now use covariant unification rules. This is sound\r\nsince literal has no type specified and has no aliases\r\n* Fixed issues with blocked types escaping the constraint solver\r\n* Fixed more places where error messages that should've been suppressed\r\nwere still reported\r\n* Fixed errors when iterating over a top table type\r\n\r\nIn our native code generation (jit):\r\n* 'DebugLuauAbortingChecks' flag is now supported on A64\r\n* LOP_NEWCLOSURE has been translated to IR\r\n",
            "commit_timestamp": 1690557233.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690776230.583478,
            "elapsed_time": 340.00162982940674,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76f67e0733949bcdf0a83e81213e8cb8797ed632",
            "commit_message": "Sync to upstream/release/588 (#992)\n\nType checker/autocomplete:\r\n* `Luau::autocomplete` no longer performs typechecking internally, make\r\nsure to run `Frontend::check` before performing autocomplete requests\r\n* Autocomplete string suggestions without \"\" are now only suggested\r\ninside the \"\"\r\n* Autocomplete suggestions now include `function (anonymous autofilled)`\r\nkey with a full suggestion for the function expression (with arguments\r\nincluded) stored in `AutocompleteEntry::insertText`\r\n* `AutocompleteEntry::indexedWithSelf` is provided for function call\r\nsuggestions made with `:`\r\n* Cyclic modules now see each other type exports as `any` to prevent\r\nmemory use-after-free (similar to module return type)\r\n\r\nRuntime:\r\n* Updated inline/loop unroll cost model to better handle assignments\r\n(Fixes https://github.com/Roblox/luau/issues/978)\r\n* `math.noise` speed was improved by ~30%\r\n* `table.concat` speed was improved by ~5-7%\r\n* `tonumber` and `tostring` now have fastcall paths that execute ~1.5x\r\nand ~2.5x faster respectively (fixes #777)\r\n* Fixed crash in `luaL_typename` when index refers to a non-existing\r\nvalue\r\n* Fixed potential out of memory scenario when using `string.sub` or\r\n`string.char` in a loop\r\n* Fixed behavior of some fastcall builtins when called without arguments\r\nunder -O2 to match original functions\r\n* Support for native code execution in VM is now enabled by default\r\n(note: native code still has to be generated explicitly)\r\n* `Codegen::compile` now accepts `CodeGen_OnlyNativeModules` flag. When\r\nset, only modules that have a `--!native` hot-comment at the top will be\r\ncompiled to native code\r\n\r\nIn our new typechecker:\r\n* Generic type packs are no longer considered to be variadic during\r\nunification\r\n* Timeout and cancellation now works in new solver\r\n* Fixed false positive errors around 'table' and 'function' type\r\nrefinements\r\n* Table literals now use covariant unification rules. This is sound\r\nsince literal has no type specified and has no aliases\r\n* Fixed issues with blocked types escaping the constraint solver\r\n* Fixed more places where error messages that should've been suppressed\r\nwere still reported\r\n* Fixed errors when iterating over a top table type\r\n\r\nIn our native code generation (jit):\r\n* 'DebugLuauAbortingChecks' flag is now supported on A64\r\n* LOP_NEWCLOSURE has been translated to IR\r\n",
            "commit_timestamp": 1690557233.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690790641.022121,
            "elapsed_time": 328.7110867500305,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76f67e0733949bcdf0a83e81213e8cb8797ed632",
            "commit_message": "Sync to upstream/release/588 (#992)\n\nType checker/autocomplete:\r\n* `Luau::autocomplete` no longer performs typechecking internally, make\r\nsure to run `Frontend::check` before performing autocomplete requests\r\n* Autocomplete string suggestions without \"\" are now only suggested\r\ninside the \"\"\r\n* Autocomplete suggestions now include `function (anonymous autofilled)`\r\nkey with a full suggestion for the function expression (with arguments\r\nincluded) stored in `AutocompleteEntry::insertText`\r\n* `AutocompleteEntry::indexedWithSelf` is provided for function call\r\nsuggestions made with `:`\r\n* Cyclic modules now see each other type exports as `any` to prevent\r\nmemory use-after-free (similar to module return type)\r\n\r\nRuntime:\r\n* Updated inline/loop unroll cost model to better handle assignments\r\n(Fixes https://github.com/Roblox/luau/issues/978)\r\n* `math.noise` speed was improved by ~30%\r\n* `table.concat` speed was improved by ~5-7%\r\n* `tonumber` and `tostring` now have fastcall paths that execute ~1.5x\r\nand ~2.5x faster respectively (fixes #777)\r\n* Fixed crash in `luaL_typename` when index refers to a non-existing\r\nvalue\r\n* Fixed potential out of memory scenario when using `string.sub` or\r\n`string.char` in a loop\r\n* Fixed behavior of some fastcall builtins when called without arguments\r\nunder -O2 to match original functions\r\n* Support for native code execution in VM is now enabled by default\r\n(note: native code still has to be generated explicitly)\r\n* `Codegen::compile` now accepts `CodeGen_OnlyNativeModules` flag. When\r\nset, only modules that have a `--!native` hot-comment at the top will be\r\ncompiled to native code\r\n\r\nIn our new typechecker:\r\n* Generic type packs are no longer considered to be variadic during\r\nunification\r\n* Timeout and cancellation now works in new solver\r\n* Fixed false positive errors around 'table' and 'function' type\r\nrefinements\r\n* Table literals now use covariant unification rules. This is sound\r\nsince literal has no type specified and has no aliases\r\n* Fixed issues with blocked types escaping the constraint solver\r\n* Fixed more places where error messages that should've been suppressed\r\nwere still reported\r\n* Fixed errors when iterating over a top table type\r\n\r\nIn our native code generation (jit):\r\n* 'DebugLuauAbortingChecks' flag is now supported on A64\r\n* LOP_NEWCLOSURE has been translated to IR\r\n",
            "commit_timestamp": 1690557233.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690805029.123546,
            "elapsed_time": 398.50222396850586,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76f67e0733949bcdf0a83e81213e8cb8797ed632",
            "commit_message": "Sync to upstream/release/588 (#992)\n\nType checker/autocomplete:\r\n* `Luau::autocomplete` no longer performs typechecking internally, make\r\nsure to run `Frontend::check` before performing autocomplete requests\r\n* Autocomplete string suggestions without \"\" are now only suggested\r\ninside the \"\"\r\n* Autocomplete suggestions now include `function (anonymous autofilled)`\r\nkey with a full suggestion for the function expression (with arguments\r\nincluded) stored in `AutocompleteEntry::insertText`\r\n* `AutocompleteEntry::indexedWithSelf` is provided for function call\r\nsuggestions made with `:`\r\n* Cyclic modules now see each other type exports as `any` to prevent\r\nmemory use-after-free (similar to module return type)\r\n\r\nRuntime:\r\n* Updated inline/loop unroll cost model to better handle assignments\r\n(Fixes https://github.com/Roblox/luau/issues/978)\r\n* `math.noise` speed was improved by ~30%\r\n* `table.concat` speed was improved by ~5-7%\r\n* `tonumber` and `tostring` now have fastcall paths that execute ~1.5x\r\nand ~2.5x faster respectively (fixes #777)\r\n* Fixed crash in `luaL_typename` when index refers to a non-existing\r\nvalue\r\n* Fixed potential out of memory scenario when using `string.sub` or\r\n`string.char` in a loop\r\n* Fixed behavior of some fastcall builtins when called without arguments\r\nunder -O2 to match original functions\r\n* Support for native code execution in VM is now enabled by default\r\n(note: native code still has to be generated explicitly)\r\n* `Codegen::compile` now accepts `CodeGen_OnlyNativeModules` flag. When\r\nset, only modules that have a `--!native` hot-comment at the top will be\r\ncompiled to native code\r\n\r\nIn our new typechecker:\r\n* Generic type packs are no longer considered to be variadic during\r\nunification\r\n* Timeout and cancellation now works in new solver\r\n* Fixed false positive errors around 'table' and 'function' type\r\nrefinements\r\n* Table literals now use covariant unification rules. This is sound\r\nsince literal has no type specified and has no aliases\r\n* Fixed issues with blocked types escaping the constraint solver\r\n* Fixed more places where error messages that should've been suppressed\r\nwere still reported\r\n* Fixed errors when iterating over a top table type\r\n\r\nIn our native code generation (jit):\r\n* 'DebugLuauAbortingChecks' flag is now supported on A64\r\n* LOP_NEWCLOSURE has been translated to IR\r\n",
            "commit_timestamp": 1690557233.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690819493.691778,
            "elapsed_time": 415.1456997394562,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "76f67e0733949bcdf0a83e81213e8cb8797ed632",
            "commit_message": "Sync to upstream/release/588 (#992)\n\nType checker/autocomplete:\r\n* `Luau::autocomplete` no longer performs typechecking internally, make\r\nsure to run `Frontend::check` before performing autocomplete requests\r\n* Autocomplete string suggestions without \"\" are now only suggested\r\ninside the \"\"\r\n* Autocomplete suggestions now include `function (anonymous autofilled)`\r\nkey with a full suggestion for the function expression (with arguments\r\nincluded) stored in `AutocompleteEntry::insertText`\r\n* `AutocompleteEntry::indexedWithSelf` is provided for function call\r\nsuggestions made with `:`\r\n* Cyclic modules now see each other type exports as `any` to prevent\r\nmemory use-after-free (similar to module return type)\r\n\r\nRuntime:\r\n* Updated inline/loop unroll cost model to better handle assignments\r\n(Fixes https://github.com/Roblox/luau/issues/978)\r\n* `math.noise` speed was improved by ~30%\r\n* `table.concat` speed was improved by ~5-7%\r\n* `tonumber` and `tostring` now have fastcall paths that execute ~1.5x\r\nand ~2.5x faster respectively (fixes #777)\r\n* Fixed crash in `luaL_typename` when index refers to a non-existing\r\nvalue\r\n* Fixed potential out of memory scenario when using `string.sub` or\r\n`string.char` in a loop\r\n* Fixed behavior of some fastcall builtins when called without arguments\r\nunder -O2 to match original functions\r\n* Support for native code execution in VM is now enabled by default\r\n(note: native code still has to be generated explicitly)\r\n* `Codegen::compile` now accepts `CodeGen_OnlyNativeModules` flag. When\r\nset, only modules that have a `--!native` hot-comment at the top will be\r\ncompiled to native code\r\n\r\nIn our new typechecker:\r\n* Generic type packs are no longer considered to be variadic during\r\nunification\r\n* Timeout and cancellation now works in new solver\r\n* Fixed false positive errors around 'table' and 'function' type\r\nrefinements\r\n* Table literals now use covariant unification rules. This is sound\r\nsince literal has no type specified and has no aliases\r\n* Fixed issues with blocked types escaping the constraint solver\r\n* Fixed more places where error messages that should've been suppressed\r\nwere still reported\r\n* Fixed errors when iterating over a top table type\r\n\r\nIn our native code generation (jit):\r\n* 'DebugLuauAbortingChecks' flag is now supported on A64\r\n* LOP_NEWCLOSURE has been translated to IR\r\n",
            "commit_timestamp": 1690557233.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690833779.793075,
            "elapsed_time": 332.0698730945587,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "a08c3409b8ca0ac335f1ffd0f200f1be372859fa",
            "commit_message": "Luau Recap: July 2023 (#993)\n\nIf this does make it to the Roblox forum, I think I will cut intro about\r\nnew type solver and JIT.\r\n\r\n\r\n[Rendered](https://github.com/vegorov-rbx/luau/blob/post-recap-july-2023/docs/_posts/2023-07-28-luau-recap-july-2023.md)\r\n\r\n\r\n[Preview](https://vegorov-rbx.github.io/luau/2023/07/28/luau-recap-july-2023.html)",
            "commit_timestamp": 1690833744.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690848289.463772,
            "elapsed_time": 324.93140292167664,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "a08c3409b8ca0ac335f1ffd0f200f1be372859fa",
            "commit_message": "Luau Recap: July 2023 (#993)\n\nIf this does make it to the Roblox forum, I think I will cut intro about\r\nnew type solver and JIT.\r\n\r\n\r\n[Rendered](https://github.com/vegorov-rbx/luau/blob/post-recap-july-2023/docs/_posts/2023-07-28-luau-recap-july-2023.md)\r\n\r\n\r\n[Preview](https://vegorov-rbx.github.io/luau/2023/07/28/luau-recap-july-2023.html)",
            "commit_timestamp": 1690833744.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690862635.668097,
            "elapsed_time": 352.2234869003296,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "a08c3409b8ca0ac335f1ffd0f200f1be372859fa",
            "commit_message": "Luau Recap: July 2023 (#993)\n\nIf this does make it to the Roblox forum, I think I will cut intro about\r\nnew type solver and JIT.\r\n\r\n\r\n[Rendered](https://github.com/vegorov-rbx/luau/blob/post-recap-july-2023/docs/_posts/2023-07-28-luau-recap-july-2023.md)\r\n\r\n\r\n[Preview](https://vegorov-rbx.github.io/luau/2023/07/28/luau-recap-july-2023.html)",
            "commit_timestamp": 1690833744.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690877030.621899,
            "elapsed_time": 341.1891224384308,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "a08c3409b8ca0ac335f1ffd0f200f1be372859fa",
            "commit_message": "Luau Recap: July 2023 (#993)\n\nIf this does make it to the Roblox forum, I think I will cut intro about\r\nnew type solver and JIT.\r\n\r\n\r\n[Rendered](https://github.com/vegorov-rbx/luau/blob/post-recap-july-2023/docs/_posts/2023-07-28-luau-recap-july-2023.md)\r\n\r\n\r\n[Preview](https://vegorov-rbx.github.io/luau/2023/07/28/luau-recap-july-2023.html)",
            "commit_timestamp": 1690833744.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690891368.794238,
            "elapsed_time": 389.2531795501709,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "a08c3409b8ca0ac335f1ffd0f200f1be372859fa",
            "commit_message": "Luau Recap: July 2023 (#993)\n\nIf this does make it to the Roblox forum, I think I will cut intro about\r\nnew type solver and JIT.\r\n\r\n\r\n[Rendered](https://github.com/vegorov-rbx/luau/blob/post-recap-july-2023/docs/_posts/2023-07-28-luau-recap-july-2023.md)\r\n\r\n\r\n[Preview](https://vegorov-rbx.github.io/luau/2023/07/28/luau-recap-july-2023.html)",
            "commit_timestamp": 1690833744.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690905828.401142,
            "elapsed_time": 386.6347961425781,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "a08c3409b8ca0ac335f1ffd0f200f1be372859fa",
            "commit_message": "Luau Recap: July 2023 (#993)\n\nIf this does make it to the Roblox forum, I think I will cut intro about\r\nnew type solver and JIT.\r\n\r\n\r\n[Rendered](https://github.com/vegorov-rbx/luau/blob/post-recap-july-2023/docs/_posts/2023-07-28-luau-recap-july-2023.md)\r\n\r\n\r\n[Preview](https://vegorov-rbx.github.io/luau/2023/07/28/luau-recap-july-2023.html)",
            "commit_timestamp": 1690833744.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690920209.239885,
            "elapsed_time": 393.7178146839142,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "8b510d3dbb40b98fdce935cf1e7eb1e0367243b2",
            "commit_message": "Add dark theme (#991)\n\nFixes #333 \r\n\r\n\r\n![image](https://github.com/Roblox/luau/assets/120410318/539fec9f-3ad1-49cd-ba2f-a47b6c1ee42c)\r\n\r\n![image](https://github.com/Roblox/luau/assets/120410318/981981c6-2fbe-46ae-99b1-a1fc2c647a6a)\r\n\r\n---------\r\n\r\nCo-authored-by: Someone-dQw4w9WgXcQ <dcheunggb@outlook.com>",
            "commit_timestamp": 1690906442.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690934678.203356,
            "elapsed_time": 321.5592222213745,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "8b510d3dbb40b98fdce935cf1e7eb1e0367243b2",
            "commit_message": "Add dark theme (#991)\n\nFixes #333 \r\n\r\n\r\n![image](https://github.com/Roblox/luau/assets/120410318/539fec9f-3ad1-49cd-ba2f-a47b6c1ee42c)\r\n\r\n![image](https://github.com/Roblox/luau/assets/120410318/981981c6-2fbe-46ae-99b1-a1fc2c647a6a)\r\n\r\n---------\r\n\r\nCo-authored-by: Someone-dQw4w9WgXcQ <dcheunggb@outlook.com>",
            "commit_timestamp": 1690906442.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690949005.108278,
            "elapsed_time": 392.62904024124146,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "8b510d3dbb40b98fdce935cf1e7eb1e0367243b2",
            "commit_message": "Add dark theme (#991)\n\nFixes #333 \r\n\r\n\r\n![image](https://github.com/Roblox/luau/assets/120410318/539fec9f-3ad1-49cd-ba2f-a47b6c1ee42c)\r\n\r\n![image](https://github.com/Roblox/luau/assets/120410318/981981c6-2fbe-46ae-99b1-a1fc2c647a6a)\r\n\r\n---------\r\n\r\nCo-authored-by: Someone-dQw4w9WgXcQ <dcheunggb@outlook.com>",
            "commit_timestamp": 1690906442.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690963355.564606,
            "elapsed_time": 364.934513092041,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "8b510d3dbb40b98fdce935cf1e7eb1e0367243b2",
            "commit_message": "Add dark theme (#991)\n\nFixes #333 \r\n\r\n\r\n![image](https://github.com/Roblox/luau/assets/120410318/539fec9f-3ad1-49cd-ba2f-a47b6c1ee42c)\r\n\r\n![image](https://github.com/Roblox/luau/assets/120410318/981981c6-2fbe-46ae-99b1-a1fc2c647a6a)\r\n\r\n---------\r\n\r\nCo-authored-by: Someone-dQw4w9WgXcQ <dcheunggb@outlook.com>",
            "commit_timestamp": 1690906442.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690977928.796296,
            "elapsed_time": 388.2222957611084,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "8b510d3dbb40b98fdce935cf1e7eb1e0367243b2",
            "commit_message": "Add dark theme (#991)\n\nFixes #333 \r\n\r\n\r\n![image](https://github.com/Roblox/luau/assets/120410318/539fec9f-3ad1-49cd-ba2f-a47b6c1ee42c)\r\n\r\n![image](https://github.com/Roblox/luau/assets/120410318/981981c6-2fbe-46ae-99b1-a1fc2c647a6a)\r\n\r\n---------\r\n\r\nCo-authored-by: Someone-dQw4w9WgXcQ <dcheunggb@outlook.com>",
            "commit_timestamp": 1690906442.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1690992502.429168,
            "elapsed_time": 448.08313751220703,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "8b510d3dbb40b98fdce935cf1e7eb1e0367243b2",
            "commit_message": "Add dark theme (#991)\n\nFixes #333 \r\n\r\n\r\n![image](https://github.com/Roblox/luau/assets/120410318/539fec9f-3ad1-49cd-ba2f-a47b6c1ee42c)\r\n\r\n![image](https://github.com/Roblox/luau/assets/120410318/981981c6-2fbe-46ae-99b1-a1fc2c647a6a)\r\n\r\n---------\r\n\r\nCo-authored-by: Someone-dQw4w9WgXcQ <dcheunggb@outlook.com>",
            "commit_timestamp": 1690906442.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691006594.542288,
            "elapsed_time": 328.1011543273926,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "8b510d3dbb40b98fdce935cf1e7eb1e0367243b2",
            "commit_message": "Add dark theme (#991)\n\nFixes #333 \r\n\r\n\r\n![image](https://github.com/Roblox/luau/assets/120410318/539fec9f-3ad1-49cd-ba2f-a47b6c1ee42c)\r\n\r\n![image](https://github.com/Roblox/luau/assets/120410318/981981c6-2fbe-46ae-99b1-a1fc2c647a6a)\r\n\r\n---------\r\n\r\nCo-authored-by: Someone-dQw4w9WgXcQ <dcheunggb@outlook.com>",
            "commit_timestamp": 1690906442.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691021091.347728,
            "elapsed_time": 411.7160367965698,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "fff897a75ffeedddc3810d2827e24ad0cdc2cde7",
            "commit_message": "Fix some EBNF cases in grammar.md (#999)\n\n",
            "commit_timestamp": 1691007657.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691035392.442796,
            "elapsed_time": 336.8029737472534,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "fff897a75ffeedddc3810d2827e24ad0cdc2cde7",
            "commit_message": "Fix some EBNF cases in grammar.md (#999)\n\n",
            "commit_timestamp": 1691007657.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691049826.683285,
            "elapsed_time": 338.07761454582214,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "fff897a75ffeedddc3810d2827e24ad0cdc2cde7",
            "commit_message": "Fix some EBNF cases in grammar.md (#999)\n\n",
            "commit_timestamp": 1691007657.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691064205.360911,
            "elapsed_time": 314.88140654563904,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "fff897a75ffeedddc3810d2827e24ad0cdc2cde7",
            "commit_message": "Fix some EBNF cases in grammar.md (#999)\n\n",
            "commit_timestamp": 1691007657.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691078604.512244,
            "elapsed_time": 351.8384029865265,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "fff897a75ffeedddc3810d2827e24ad0cdc2cde7",
            "commit_message": "Fix some EBNF cases in grammar.md (#999)\n\n",
            "commit_timestamp": 1691007657.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691093014.991284,
            "elapsed_time": 357.7460196018219,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "fff897a75ffeedddc3810d2827e24ad0cdc2cde7",
            "commit_message": "Fix some EBNF cases in grammar.md (#999)\n\n",
            "commit_timestamp": 1691007657.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691107551.929377,
            "elapsed_time": 350.0893225669861,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "fff897a75ffeedddc3810d2827e24ad0cdc2cde7",
            "commit_message": "Fix some EBNF cases in grammar.md (#999)\n\n",
            "commit_timestamp": 1691007657.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691121799.51707,
            "elapsed_time": 340.24991822242737,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "fff897a75ffeedddc3810d2827e24ad0cdc2cde7",
            "commit_message": "Fix some EBNF cases in grammar.md (#999)\n\n",
            "commit_timestamp": 1691007657.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691136220.670803,
            "elapsed_time": 346.63196325302124,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "fff897a75ffeedddc3810d2827e24ad0cdc2cde7",
            "commit_message": "Fix some EBNF cases in grammar.md (#999)\n\n",
            "commit_timestamp": 1691007657.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691150635.161224,
            "elapsed_time": 362.8773989677429,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "fff897a75ffeedddc3810d2827e24ad0cdc2cde7",
            "commit_message": "Fix some EBNF cases in grammar.md (#999)\n\n",
            "commit_timestamp": 1691007657.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691164978.574564,
            "elapsed_time": 323.0900411605835,
            "x64": false,
            "actual_files_count": 395,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "fff897a75ffeedddc3810d2827e24ad0cdc2cde7",
            "commit_message": "Fix some EBNF cases in grammar.md (#999)\n\n",
            "commit_timestamp": 1691007657.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691179419.065691,
            "elapsed_time": 353.21459221839905,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "0b2755f964d9fa6b322ad77660e6e3d50fe7101f",
            "commit_message": "Sync to upstream/release/589 (#1000)\n\n* Progress toward a diffing algorithm for types. We hope that this will\r\nbe useful for writing clearer error messages.\r\n* Add a missing recursion limiter in `Unifier::tryUnifyTables`. This was\r\ncausing a crash in certain situations.\r\n* Luau heap graph enumeration improvements:\r\n    * Weak references are not reported\r\n    * Added tag as a fallback name of non-string table links\r\n* Included top Luau function information in thread name to understand\r\nwhere thread might be suspended\r\n* Constant folding for `math.pi` and `math.huge` at -O2\r\n* Optimize `string.format` and `%*`\r\n* This change makes string interpolation 1.5x-2x faster depending on the\r\nnumber and type of formatted components, assuming a few are using\r\nprimitive types, and reduces associated GC pressure.\r\n\r\nNew type checker:\r\n\r\n* Initial work toward tracking the upper and lower bounds of types\r\naccurately.\r\n\r\nNative code generation (JIT):\r\n\r\n* Add IrCmd::CHECK_TRUTHY for improved assert fast-calls\r\n* Do not compute type map for modules without types\r\n* Capture metatable+readonly state for NEW_TABLE IR instructions\r\n* Replace JUMP_CMP_ANY with CMP_ANY and existing JUMP_EQ_INT\r\n* Add support for exits to VM with reentry lock in VmExit\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1691176734.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691193880.322619,
            "elapsed_time": 341.8806052207947,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "0b2755f964d9fa6b322ad77660e6e3d50fe7101f",
            "commit_message": "Sync to upstream/release/589 (#1000)\n\n* Progress toward a diffing algorithm for types. We hope that this will\r\nbe useful for writing clearer error messages.\r\n* Add a missing recursion limiter in `Unifier::tryUnifyTables`. This was\r\ncausing a crash in certain situations.\r\n* Luau heap graph enumeration improvements:\r\n    * Weak references are not reported\r\n    * Added tag as a fallback name of non-string table links\r\n* Included top Luau function information in thread name to understand\r\nwhere thread might be suspended\r\n* Constant folding for `math.pi` and `math.huge` at -O2\r\n* Optimize `string.format` and `%*`\r\n* This change makes string interpolation 1.5x-2x faster depending on the\r\nnumber and type of formatted components, assuming a few are using\r\nprimitive types, and reduces associated GC pressure.\r\n\r\nNew type checker:\r\n\r\n* Initial work toward tracking the upper and lower bounds of types\r\naccurately.\r\n\r\nNative code generation (JIT):\r\n\r\n* Add IrCmd::CHECK_TRUTHY for improved assert fast-calls\r\n* Do not compute type map for modules without types\r\n* Capture metatable+readonly state for NEW_TABLE IR instructions\r\n* Replace JUMP_CMP_ANY with CMP_ANY and existing JUMP_EQ_INT\r\n* Add support for exits to VM with reentry lock in VmExit\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1691176734.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691208264.909057,
            "elapsed_time": 350.20373153686523,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "0b2755f964d9fa6b322ad77660e6e3d50fe7101f",
            "commit_message": "Sync to upstream/release/589 (#1000)\n\n* Progress toward a diffing algorithm for types. We hope that this will\r\nbe useful for writing clearer error messages.\r\n* Add a missing recursion limiter in `Unifier::tryUnifyTables`. This was\r\ncausing a crash in certain situations.\r\n* Luau heap graph enumeration improvements:\r\n    * Weak references are not reported\r\n    * Added tag as a fallback name of non-string table links\r\n* Included top Luau function information in thread name to understand\r\nwhere thread might be suspended\r\n* Constant folding for `math.pi` and `math.huge` at -O2\r\n* Optimize `string.format` and `%*`\r\n* This change makes string interpolation 1.5x-2x faster depending on the\r\nnumber and type of formatted components, assuming a few are using\r\nprimitive types, and reduces associated GC pressure.\r\n\r\nNew type checker:\r\n\r\n* Initial work toward tracking the upper and lower bounds of types\r\naccurately.\r\n\r\nNative code generation (JIT):\r\n\r\n* Add IrCmd::CHECK_TRUTHY for improved assert fast-calls\r\n* Do not compute type map for modules without types\r\n* Capture metatable+readonly state for NEW_TABLE IR instructions\r\n* Replace JUMP_CMP_ANY with CMP_ANY and existing JUMP_EQ_INT\r\n* Add support for exits to VM with reentry lock in VmExit\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1691176734.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691222585.044831,
            "elapsed_time": 339.5891511440277,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "0b2755f964d9fa6b322ad77660e6e3d50fe7101f",
            "commit_message": "Sync to upstream/release/589 (#1000)\n\n* Progress toward a diffing algorithm for types. We hope that this will\r\nbe useful for writing clearer error messages.\r\n* Add a missing recursion limiter in `Unifier::tryUnifyTables`. This was\r\ncausing a crash in certain situations.\r\n* Luau heap graph enumeration improvements:\r\n    * Weak references are not reported\r\n    * Added tag as a fallback name of non-string table links\r\n* Included top Luau function information in thread name to understand\r\nwhere thread might be suspended\r\n* Constant folding for `math.pi` and `math.huge` at -O2\r\n* Optimize `string.format` and `%*`\r\n* This change makes string interpolation 1.5x-2x faster depending on the\r\nnumber and type of formatted components, assuming a few are using\r\nprimitive types, and reduces associated GC pressure.\r\n\r\nNew type checker:\r\n\r\n* Initial work toward tracking the upper and lower bounds of types\r\naccurately.\r\n\r\nNative code generation (JIT):\r\n\r\n* Add IrCmd::CHECK_TRUTHY for improved assert fast-calls\r\n* Do not compute type map for modules without types\r\n* Capture metatable+readonly state for NEW_TABLE IR instructions\r\n* Replace JUMP_CMP_ANY with CMP_ANY and existing JUMP_EQ_INT\r\n* Add support for exits to VM with reentry lock in VmExit\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1691176734.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691237039.016907,
            "elapsed_time": 333.4636404514313,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "0b2755f964d9fa6b322ad77660e6e3d50fe7101f",
            "commit_message": "Sync to upstream/release/589 (#1000)\n\n* Progress toward a diffing algorithm for types. We hope that this will\r\nbe useful for writing clearer error messages.\r\n* Add a missing recursion limiter in `Unifier::tryUnifyTables`. This was\r\ncausing a crash in certain situations.\r\n* Luau heap graph enumeration improvements:\r\n    * Weak references are not reported\r\n    * Added tag as a fallback name of non-string table links\r\n* Included top Luau function information in thread name to understand\r\nwhere thread might be suspended\r\n* Constant folding for `math.pi` and `math.huge` at -O2\r\n* Optimize `string.format` and `%*`\r\n* This change makes string interpolation 1.5x-2x faster depending on the\r\nnumber and type of formatted components, assuming a few are using\r\nprimitive types, and reduces associated GC pressure.\r\n\r\nNew type checker:\r\n\r\n* Initial work toward tracking the upper and lower bounds of types\r\naccurately.\r\n\r\nNative code generation (JIT):\r\n\r\n* Add IrCmd::CHECK_TRUTHY for improved assert fast-calls\r\n* Do not compute type map for modules without types\r\n* Capture metatable+readonly state for NEW_TABLE IR instructions\r\n* Replace JUMP_CMP_ANY with CMP_ANY and existing JUMP_EQ_INT\r\n* Add support for exits to VM with reentry lock in VmExit\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1691176734.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691251392.230387,
            "elapsed_time": 332.5445771217346,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "0b2755f964d9fa6b322ad77660e6e3d50fe7101f",
            "commit_message": "Sync to upstream/release/589 (#1000)\n\n* Progress toward a diffing algorithm for types. We hope that this will\r\nbe useful for writing clearer error messages.\r\n* Add a missing recursion limiter in `Unifier::tryUnifyTables`. This was\r\ncausing a crash in certain situations.\r\n* Luau heap graph enumeration improvements:\r\n    * Weak references are not reported\r\n    * Added tag as a fallback name of non-string table links\r\n* Included top Luau function information in thread name to understand\r\nwhere thread might be suspended\r\n* Constant folding for `math.pi` and `math.huge` at -O2\r\n* Optimize `string.format` and `%*`\r\n* This change makes string interpolation 1.5x-2x faster depending on the\r\nnumber and type of formatted components, assuming a few are using\r\nprimitive types, and reduces associated GC pressure.\r\n\r\nNew type checker:\r\n\r\n* Initial work toward tracking the upper and lower bounds of types\r\naccurately.\r\n\r\nNative code generation (JIT):\r\n\r\n* Add IrCmd::CHECK_TRUTHY for improved assert fast-calls\r\n* Do not compute type map for modules without types\r\n* Capture metatable+readonly state for NEW_TABLE IR instructions\r\n* Replace JUMP_CMP_ANY with CMP_ANY and existing JUMP_EQ_INT\r\n* Add support for exits to VM with reentry lock in VmExit\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1691176734.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691265762.309252,
            "elapsed_time": 404.42543601989746,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "0b2755f964d9fa6b322ad77660e6e3d50fe7101f",
            "commit_message": "Sync to upstream/release/589 (#1000)\n\n* Progress toward a diffing algorithm for types. We hope that this will\r\nbe useful for writing clearer error messages.\r\n* Add a missing recursion limiter in `Unifier::tryUnifyTables`. This was\r\ncausing a crash in certain situations.\r\n* Luau heap graph enumeration improvements:\r\n    * Weak references are not reported\r\n    * Added tag as a fallback name of non-string table links\r\n* Included top Luau function information in thread name to understand\r\nwhere thread might be suspended\r\n* Constant folding for `math.pi` and `math.huge` at -O2\r\n* Optimize `string.format` and `%*`\r\n* This change makes string interpolation 1.5x-2x faster depending on the\r\nnumber and type of formatted components, assuming a few are using\r\nprimitive types, and reduces associated GC pressure.\r\n\r\nNew type checker:\r\n\r\n* Initial work toward tracking the upper and lower bounds of types\r\naccurately.\r\n\r\nNative code generation (JIT):\r\n\r\n* Add IrCmd::CHECK_TRUTHY for improved assert fast-calls\r\n* Do not compute type map for modules without types\r\n* Capture metatable+readonly state for NEW_TABLE IR instructions\r\n* Replace JUMP_CMP_ANY with CMP_ANY and existing JUMP_EQ_INT\r\n* Add support for exits to VM with reentry lock in VmExit\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1691176734.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691280240.648317,
            "elapsed_time": 353.93892788887024,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "0b2755f964d9fa6b322ad77660e6e3d50fe7101f",
            "commit_message": "Sync to upstream/release/589 (#1000)\n\n* Progress toward a diffing algorithm for types. We hope that this will\r\nbe useful for writing clearer error messages.\r\n* Add a missing recursion limiter in `Unifier::tryUnifyTables`. This was\r\ncausing a crash in certain situations.\r\n* Luau heap graph enumeration improvements:\r\n    * Weak references are not reported\r\n    * Added tag as a fallback name of non-string table links\r\n* Included top Luau function information in thread name to understand\r\nwhere thread might be suspended\r\n* Constant folding for `math.pi` and `math.huge` at -O2\r\n* Optimize `string.format` and `%*`\r\n* This change makes string interpolation 1.5x-2x faster depending on the\r\nnumber and type of formatted components, assuming a few are using\r\nprimitive types, and reduces associated GC pressure.\r\n\r\nNew type checker:\r\n\r\n* Initial work toward tracking the upper and lower bounds of types\r\naccurately.\r\n\r\nNative code generation (JIT):\r\n\r\n* Add IrCmd::CHECK_TRUTHY for improved assert fast-calls\r\n* Do not compute type map for modules without types\r\n* Capture metatable+readonly state for NEW_TABLE IR instructions\r\n* Replace JUMP_CMP_ANY with CMP_ANY and existing JUMP_EQ_INT\r\n* Add support for exits to VM with reentry lock in VmExit\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1691176734.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691294555.139544,
            "elapsed_time": 375.16052627563477,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "0b2755f964d9fa6b322ad77660e6e3d50fe7101f",
            "commit_message": "Sync to upstream/release/589 (#1000)\n\n* Progress toward a diffing algorithm for types. We hope that this will\r\nbe useful for writing clearer error messages.\r\n* Add a missing recursion limiter in `Unifier::tryUnifyTables`. This was\r\ncausing a crash in certain situations.\r\n* Luau heap graph enumeration improvements:\r\n    * Weak references are not reported\r\n    * Added tag as a fallback name of non-string table links\r\n* Included top Luau function information in thread name to understand\r\nwhere thread might be suspended\r\n* Constant folding for `math.pi` and `math.huge` at -O2\r\n* Optimize `string.format` and `%*`\r\n* This change makes string interpolation 1.5x-2x faster depending on the\r\nnumber and type of formatted components, assuming a few are using\r\nprimitive types, and reduces associated GC pressure.\r\n\r\nNew type checker:\r\n\r\n* Initial work toward tracking the upper and lower bounds of types\r\naccurately.\r\n\r\nNative code generation (JIT):\r\n\r\n* Add IrCmd::CHECK_TRUTHY for improved assert fast-calls\r\n* Do not compute type map for modules without types\r\n* Capture metatable+readonly state for NEW_TABLE IR instructions\r\n* Replace JUMP_CMP_ANY with CMP_ANY and existing JUMP_EQ_INT\r\n* Add support for exits to VM with reentry lock in VmExit\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1691176734.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691309034.403357,
            "elapsed_time": 335.07081389427185,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "0b2755f964d9fa6b322ad77660e6e3d50fe7101f",
            "commit_message": "Sync to upstream/release/589 (#1000)\n\n* Progress toward a diffing algorithm for types. We hope that this will\r\nbe useful for writing clearer error messages.\r\n* Add a missing recursion limiter in `Unifier::tryUnifyTables`. This was\r\ncausing a crash in certain situations.\r\n* Luau heap graph enumeration improvements:\r\n    * Weak references are not reported\r\n    * Added tag as a fallback name of non-string table links\r\n* Included top Luau function information in thread name to understand\r\nwhere thread might be suspended\r\n* Constant folding for `math.pi` and `math.huge` at -O2\r\n* Optimize `string.format` and `%*`\r\n* This change makes string interpolation 1.5x-2x faster depending on the\r\nnumber and type of formatted components, assuming a few are using\r\nprimitive types, and reduces associated GC pressure.\r\n\r\nNew type checker:\r\n\r\n* Initial work toward tracking the upper and lower bounds of types\r\naccurately.\r\n\r\nNative code generation (JIT):\r\n\r\n* Add IrCmd::CHECK_TRUTHY for improved assert fast-calls\r\n* Do not compute type map for modules without types\r\n* Capture metatable+readonly state for NEW_TABLE IR instructions\r\n* Replace JUMP_CMP_ANY with CMP_ANY and existing JUMP_EQ_INT\r\n* Add support for exits to VM with reentry lock in VmExit\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1691176734.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691323415.838395,
            "elapsed_time": 334.12397170066833,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "0b2755f964d9fa6b322ad77660e6e3d50fe7101f",
            "commit_message": "Sync to upstream/release/589 (#1000)\n\n* Progress toward a diffing algorithm for types. We hope that this will\r\nbe useful for writing clearer error messages.\r\n* Add a missing recursion limiter in `Unifier::tryUnifyTables`. This was\r\ncausing a crash in certain situations.\r\n* Luau heap graph enumeration improvements:\r\n    * Weak references are not reported\r\n    * Added tag as a fallback name of non-string table links\r\n* Included top Luau function information in thread name to understand\r\nwhere thread might be suspended\r\n* Constant folding for `math.pi` and `math.huge` at -O2\r\n* Optimize `string.format` and `%*`\r\n* This change makes string interpolation 1.5x-2x faster depending on the\r\nnumber and type of formatted components, assuming a few are using\r\nprimitive types, and reduces associated GC pressure.\r\n\r\nNew type checker:\r\n\r\n* Initial work toward tracking the upper and lower bounds of types\r\naccurately.\r\n\r\nNative code generation (JIT):\r\n\r\n* Add IrCmd::CHECK_TRUTHY for improved assert fast-calls\r\n* Do not compute type map for modules without types\r\n* Capture metatable+readonly state for NEW_TABLE IR instructions\r\n* Replace JUMP_CMP_ANY with CMP_ANY and existing JUMP_EQ_INT\r\n* Add support for exits to VM with reentry lock in VmExit\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1691176734.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691337775.598366,
            "elapsed_time": 436.75583934783936,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "0b2755f964d9fa6b322ad77660e6e3d50fe7101f",
            "commit_message": "Sync to upstream/release/589 (#1000)\n\n* Progress toward a diffing algorithm for types. We hope that this will\r\nbe useful for writing clearer error messages.\r\n* Add a missing recursion limiter in `Unifier::tryUnifyTables`. This was\r\ncausing a crash in certain situations.\r\n* Luau heap graph enumeration improvements:\r\n    * Weak references are not reported\r\n    * Added tag as a fallback name of non-string table links\r\n* Included top Luau function information in thread name to understand\r\nwhere thread might be suspended\r\n* Constant folding for `math.pi` and `math.huge` at -O2\r\n* Optimize `string.format` and `%*`\r\n* This change makes string interpolation 1.5x-2x faster depending on the\r\nnumber and type of formatted components, assuming a few are using\r\nprimitive types, and reduces associated GC pressure.\r\n\r\nNew type checker:\r\n\r\n* Initial work toward tracking the upper and lower bounds of types\r\naccurately.\r\n\r\nNative code generation (JIT):\r\n\r\n* Add IrCmd::CHECK_TRUTHY for improved assert fast-calls\r\n* Do not compute type map for modules without types\r\n* Capture metatable+readonly state for NEW_TABLE IR instructions\r\n* Replace JUMP_CMP_ANY with CMP_ANY and existing JUMP_EQ_INT\r\n* Add support for exits to VM with reentry lock in VmExit\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1691176734.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691352185.802786,
            "elapsed_time": 341.9654338359833,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "0b2755f964d9fa6b322ad77660e6e3d50fe7101f",
            "commit_message": "Sync to upstream/release/589 (#1000)\n\n* Progress toward a diffing algorithm for types. We hope that this will\r\nbe useful for writing clearer error messages.\r\n* Add a missing recursion limiter in `Unifier::tryUnifyTables`. This was\r\ncausing a crash in certain situations.\r\n* Luau heap graph enumeration improvements:\r\n    * Weak references are not reported\r\n    * Added tag as a fallback name of non-string table links\r\n* Included top Luau function information in thread name to understand\r\nwhere thread might be suspended\r\n* Constant folding for `math.pi` and `math.huge` at -O2\r\n* Optimize `string.format` and `%*`\r\n* This change makes string interpolation 1.5x-2x faster depending on the\r\nnumber and type of formatted components, assuming a few are using\r\nprimitive types, and reduces associated GC pressure.\r\n\r\nNew type checker:\r\n\r\n* Initial work toward tracking the upper and lower bounds of types\r\naccurately.\r\n\r\nNative code generation (JIT):\r\n\r\n* Add IrCmd::CHECK_TRUTHY for improved assert fast-calls\r\n* Do not compute type map for modules without types\r\n* Capture metatable+readonly state for NEW_TABLE IR instructions\r\n* Replace JUMP_CMP_ANY with CMP_ANY and existing JUMP_EQ_INT\r\n* Add support for exits to VM with reentry lock in VmExit\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1691176734.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691366685.002796,
            "elapsed_time": 334.013147354126,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "0b2755f964d9fa6b322ad77660e6e3d50fe7101f",
            "commit_message": "Sync to upstream/release/589 (#1000)\n\n* Progress toward a diffing algorithm for types. We hope that this will\r\nbe useful for writing clearer error messages.\r\n* Add a missing recursion limiter in `Unifier::tryUnifyTables`. This was\r\ncausing a crash in certain situations.\r\n* Luau heap graph enumeration improvements:\r\n    * Weak references are not reported\r\n    * Added tag as a fallback name of non-string table links\r\n* Included top Luau function information in thread name to understand\r\nwhere thread might be suspended\r\n* Constant folding for `math.pi` and `math.huge` at -O2\r\n* Optimize `string.format` and `%*`\r\n* This change makes string interpolation 1.5x-2x faster depending on the\r\nnumber and type of formatted components, assuming a few are using\r\nprimitive types, and reduces associated GC pressure.\r\n\r\nNew type checker:\r\n\r\n* Initial work toward tracking the upper and lower bounds of types\r\naccurately.\r\n\r\nNative code generation (JIT):\r\n\r\n* Add IrCmd::CHECK_TRUTHY for improved assert fast-calls\r\n* Do not compute type map for modules without types\r\n* Capture metatable+readonly state for NEW_TABLE IR instructions\r\n* Replace JUMP_CMP_ANY with CMP_ANY and existing JUMP_EQ_INT\r\n* Add support for exits to VM with reentry lock in VmExit\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1691176734.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691381016.333594,
            "elapsed_time": 339.453777551651,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "0b2755f964d9fa6b322ad77660e6e3d50fe7101f",
            "commit_message": "Sync to upstream/release/589 (#1000)\n\n* Progress toward a diffing algorithm for types. We hope that this will\r\nbe useful for writing clearer error messages.\r\n* Add a missing recursion limiter in `Unifier::tryUnifyTables`. This was\r\ncausing a crash in certain situations.\r\n* Luau heap graph enumeration improvements:\r\n    * Weak references are not reported\r\n    * Added tag as a fallback name of non-string table links\r\n* Included top Luau function information in thread name to understand\r\nwhere thread might be suspended\r\n* Constant folding for `math.pi` and `math.huge` at -O2\r\n* Optimize `string.format` and `%*`\r\n* This change makes string interpolation 1.5x-2x faster depending on the\r\nnumber and type of formatted components, assuming a few are using\r\nprimitive types, and reduces associated GC pressure.\r\n\r\nNew type checker:\r\n\r\n* Initial work toward tracking the upper and lower bounds of types\r\naccurately.\r\n\r\nNative code generation (JIT):\r\n\r\n* Add IrCmd::CHECK_TRUTHY for improved assert fast-calls\r\n* Do not compute type map for modules without types\r\n* Capture metatable+readonly state for NEW_TABLE IR instructions\r\n* Replace JUMP_CMP_ANY with CMP_ANY and existing JUMP_EQ_INT\r\n* Add support for exits to VM with reentry lock in VmExit\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1691176734.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691395430.190134,
            "elapsed_time": 348.42132329940796,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "0b2755f964d9fa6b322ad77660e6e3d50fe7101f",
            "commit_message": "Sync to upstream/release/589 (#1000)\n\n* Progress toward a diffing algorithm for types. We hope that this will\r\nbe useful for writing clearer error messages.\r\n* Add a missing recursion limiter in `Unifier::tryUnifyTables`. This was\r\ncausing a crash in certain situations.\r\n* Luau heap graph enumeration improvements:\r\n    * Weak references are not reported\r\n    * Added tag as a fallback name of non-string table links\r\n* Included top Luau function information in thread name to understand\r\nwhere thread might be suspended\r\n* Constant folding for `math.pi` and `math.huge` at -O2\r\n* Optimize `string.format` and `%*`\r\n* This change makes string interpolation 1.5x-2x faster depending on the\r\nnumber and type of formatted components, assuming a few are using\r\nprimitive types, and reduces associated GC pressure.\r\n\r\nNew type checker:\r\n\r\n* Initial work toward tracking the upper and lower bounds of types\r\naccurately.\r\n\r\nNative code generation (JIT):\r\n\r\n* Add IrCmd::CHECK_TRUTHY for improved assert fast-calls\r\n* Do not compute type map for modules without types\r\n* Capture metatable+readonly state for NEW_TABLE IR instructions\r\n* Replace JUMP_CMP_ANY with CMP_ANY and existing JUMP_EQ_INT\r\n* Add support for exits to VM with reentry lock in VmExit\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1691176734.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691409831.657996,
            "elapsed_time": 409.1246280670166,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "0b2755f964d9fa6b322ad77660e6e3d50fe7101f",
            "commit_message": "Sync to upstream/release/589 (#1000)\n\n* Progress toward a diffing algorithm for types. We hope that this will\r\nbe useful for writing clearer error messages.\r\n* Add a missing recursion limiter in `Unifier::tryUnifyTables`. This was\r\ncausing a crash in certain situations.\r\n* Luau heap graph enumeration improvements:\r\n    * Weak references are not reported\r\n    * Added tag as a fallback name of non-string table links\r\n* Included top Luau function information in thread name to understand\r\nwhere thread might be suspended\r\n* Constant folding for `math.pi` and `math.huge` at -O2\r\n* Optimize `string.format` and `%*`\r\n* This change makes string interpolation 1.5x-2x faster depending on the\r\nnumber and type of formatted components, assuming a few are using\r\nprimitive types, and reduces associated GC pressure.\r\n\r\nNew type checker:\r\n\r\n* Initial work toward tracking the upper and lower bounds of types\r\naccurately.\r\n\r\nNative code generation (JIT):\r\n\r\n* Add IrCmd::CHECK_TRUTHY for improved assert fast-calls\r\n* Do not compute type map for modules without types\r\n* Capture metatable+readonly state for NEW_TABLE IR instructions\r\n* Replace JUMP_CMP_ANY with CMP_ANY and existing JUMP_EQ_INT\r\n* Add support for exits to VM with reentry lock in VmExit\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1691176734.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691424203.500979,
            "elapsed_time": 395.7085988521576,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "0b2755f964d9fa6b322ad77660e6e3d50fe7101f",
            "commit_message": "Sync to upstream/release/589 (#1000)\n\n* Progress toward a diffing algorithm for types. We hope that this will\r\nbe useful for writing clearer error messages.\r\n* Add a missing recursion limiter in `Unifier::tryUnifyTables`. This was\r\ncausing a crash in certain situations.\r\n* Luau heap graph enumeration improvements:\r\n    * Weak references are not reported\r\n    * Added tag as a fallback name of non-string table links\r\n* Included top Luau function information in thread name to understand\r\nwhere thread might be suspended\r\n* Constant folding for `math.pi` and `math.huge` at -O2\r\n* Optimize `string.format` and `%*`\r\n* This change makes string interpolation 1.5x-2x faster depending on the\r\nnumber and type of formatted components, assuming a few are using\r\nprimitive types, and reduces associated GC pressure.\r\n\r\nNew type checker:\r\n\r\n* Initial work toward tracking the upper and lower bounds of types\r\naccurately.\r\n\r\nNative code generation (JIT):\r\n\r\n* Add IrCmd::CHECK_TRUTHY for improved assert fast-calls\r\n* Do not compute type map for modules without types\r\n* Capture metatable+readonly state for NEW_TABLE IR instructions\r\n* Replace JUMP_CMP_ANY with CMP_ANY and existing JUMP_EQ_INT\r\n* Add support for exits to VM with reentry lock in VmExit\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1691176734.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691438588.520257,
            "elapsed_time": 341.5106565952301,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "0b2755f964d9fa6b322ad77660e6e3d50fe7101f",
            "commit_message": "Sync to upstream/release/589 (#1000)\n\n* Progress toward a diffing algorithm for types. We hope that this will\r\nbe useful for writing clearer error messages.\r\n* Add a missing recursion limiter in `Unifier::tryUnifyTables`. This was\r\ncausing a crash in certain situations.\r\n* Luau heap graph enumeration improvements:\r\n    * Weak references are not reported\r\n    * Added tag as a fallback name of non-string table links\r\n* Included top Luau function information in thread name to understand\r\nwhere thread might be suspended\r\n* Constant folding for `math.pi` and `math.huge` at -O2\r\n* Optimize `string.format` and `%*`\r\n* This change makes string interpolation 1.5x-2x faster depending on the\r\nnumber and type of formatted components, assuming a few are using\r\nprimitive types, and reduces associated GC pressure.\r\n\r\nNew type checker:\r\n\r\n* Initial work toward tracking the upper and lower bounds of types\r\naccurately.\r\n\r\nNative code generation (JIT):\r\n\r\n* Add IrCmd::CHECK_TRUTHY for improved assert fast-calls\r\n* Do not compute type map for modules without types\r\n* Capture metatable+readonly state for NEW_TABLE IR instructions\r\n* Replace JUMP_CMP_ANY with CMP_ANY and existing JUMP_EQ_INT\r\n* Add support for exits to VM with reentry lock in VmExit\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1691176734.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691453062.954575,
            "elapsed_time": 343.85414028167725,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3f478bb439852df9fc772fe41194e1f6bd6e3fdf",
            "commit_message": "Add luau-compile to .gitignore (#995)\n\n",
            "commit_timestamp": 1691450776.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691467412.029937,
            "elapsed_time": 339.16576051712036,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3f478bb439852df9fc772fe41194e1f6bd6e3fdf",
            "commit_message": "Add luau-compile to .gitignore (#995)\n\n",
            "commit_timestamp": 1691450776.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691481814.842315,
            "elapsed_time": 356.0110909938812,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3f478bb439852df9fc772fe41194e1f6bd6e3fdf",
            "commit_message": "Add luau-compile to .gitignore (#995)\n\n",
            "commit_timestamp": 1691450776.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691496228.016476,
            "elapsed_time": 365.76046919822693,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3f478bb439852df9fc772fe41194e1f6bd6e3fdf",
            "commit_message": "Add luau-compile to .gitignore (#995)\n\n",
            "commit_timestamp": 1691450776.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691510652.568178,
            "elapsed_time": 433.01406240463257,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3f478bb439852df9fc772fe41194e1f6bd6e3fdf",
            "commit_message": "Add luau-compile to .gitignore (#995)\n\n",
            "commit_timestamp": 1691450776.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691525051.680143,
            "elapsed_time": 414.3597993850708,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bd229816c0a82a8590395416c81c333087f541fd",
            "commit_message": "Remove old benchmark-dev workflows\n\nNobody is maintaining this and we haven't really used it and are\nunlikely to start due to a high degree of noise and lack of dedicated\nmachines for this setup. Callgrind has worked for us well enough, with\nadditional profiling performed locally by engineers - this is not\nperfect but it doesn't look like we have a path to making this better.\n",
            "commit_timestamp": 1691522110.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691539530.783166,
            "elapsed_time": 345.00882482528687,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bd229816c0a82a8590395416c81c333087f541fd",
            "commit_message": "Remove old benchmark-dev workflows\n\nNobody is maintaining this and we haven't really used it and are\nunlikely to start due to a high degree of noise and lack of dedicated\nmachines for this setup. Callgrind has worked for us well enough, with\nadditional profiling performed locally by engineers - this is not\nperfect but it doesn't look like we have a path to making this better.\n",
            "commit_timestamp": 1691522110.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691553771.552156,
            "elapsed_time": 333.7482635974884,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bd229816c0a82a8590395416c81c333087f541fd",
            "commit_message": "Remove old benchmark-dev workflows\n\nNobody is maintaining this and we haven't really used it and are\nunlikely to start due to a high degree of noise and lack of dedicated\nmachines for this setup. Callgrind has worked for us well enough, with\nadditional profiling performed locally by engineers - this is not\nperfect but it doesn't look like we have a path to making this better.\n",
            "commit_timestamp": 1691522110.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691568208.15426,
            "elapsed_time": 474.2730152606964,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bd229816c0a82a8590395416c81c333087f541fd",
            "commit_message": "Remove old benchmark-dev workflows\n\nNobody is maintaining this and we haven't really used it and are\nunlikely to start due to a high degree of noise and lack of dedicated\nmachines for this setup. Callgrind has worked for us well enough, with\nadditional profiling performed locally by engineers - this is not\nperfect but it doesn't look like we have a path to making this better.\n",
            "commit_timestamp": 1691522110.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691582737.449058,
            "elapsed_time": 350.03858947753906,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bd229816c0a82a8590395416c81c333087f541fd",
            "commit_message": "Remove old benchmark-dev workflows\n\nNobody is maintaining this and we haven't really used it and are\nunlikely to start due to a high degree of noise and lack of dedicated\nmachines for this setup. Callgrind has worked for us well enough, with\nadditional profiling performed locally by engineers - this is not\nperfect but it doesn't look like we have a path to making this better.\n",
            "commit_timestamp": 1691522110.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691597049.41577,
            "elapsed_time": 412.115793466568,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bd229816c0a82a8590395416c81c333087f541fd",
            "commit_message": "Remove old benchmark-dev workflows\n\nNobody is maintaining this and we haven't really used it and are\nunlikely to start due to a high degree of noise and lack of dedicated\nmachines for this setup. Callgrind has worked for us well enough, with\nadditional profiling performed locally by engineers - this is not\nperfect but it doesn't look like we have a path to making this better.\n",
            "commit_timestamp": 1691522110.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691611398.857153,
            "elapsed_time": 411.63467168807983,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bd229816c0a82a8590395416c81c333087f541fd",
            "commit_message": "Remove old benchmark-dev workflows\n\nNobody is maintaining this and we haven't really used it and are\nunlikely to start due to a high degree of noise and lack of dedicated\nmachines for this setup. Callgrind has worked for us well enough, with\nadditional profiling performed locally by engineers - this is not\nperfect but it doesn't look like we have a path to making this better.\n",
            "commit_timestamp": 1691522110.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691625898.732008,
            "elapsed_time": 361.29017210006714,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bd229816c0a82a8590395416c81c333087f541fd",
            "commit_message": "Remove old benchmark-dev workflows\n\nNobody is maintaining this and we haven't really used it and are\nunlikely to start due to a high degree of noise and lack of dedicated\nmachines for this setup. Callgrind has worked for us well enough, with\nadditional profiling performed locally by engineers - this is not\nperfect but it doesn't look like we have a path to making this better.\n",
            "commit_timestamp": 1691522110.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691640194.087326,
            "elapsed_time": 342.9812479019165,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bd229816c0a82a8590395416c81c333087f541fd",
            "commit_message": "Remove old benchmark-dev workflows\n\nNobody is maintaining this and we haven't really used it and are\nunlikely to start due to a high degree of noise and lack of dedicated\nmachines for this setup. Callgrind has worked for us well enough, with\nadditional profiling performed locally by engineers - this is not\nperfect but it doesn't look like we have a path to making this better.\n",
            "commit_timestamp": 1691522110.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691654622.844957,
            "elapsed_time": 355.33060121536255,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bd229816c0a82a8590395416c81c333087f541fd",
            "commit_message": "Remove old benchmark-dev workflows\n\nNobody is maintaining this and we haven't really used it and are\nunlikely to start due to a high degree of noise and lack of dedicated\nmachines for this setup. Callgrind has worked for us well enough, with\nadditional profiling performed locally by engineers - this is not\nperfect but it doesn't look like we have a path to making this better.\n",
            "commit_timestamp": 1691522110.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691669066.135216,
            "elapsed_time": 352.81367540359497,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bd229816c0a82a8590395416c81c333087f541fd",
            "commit_message": "Remove old benchmark-dev workflows\n\nNobody is maintaining this and we haven't really used it and are\nunlikely to start due to a high degree of noise and lack of dedicated\nmachines for this setup. Callgrind has worked for us well enough, with\nadditional profiling performed locally by engineers - this is not\nperfect but it doesn't look like we have a path to making this better.\n",
            "commit_timestamp": 1691522110.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691683414.871309,
            "elapsed_time": 388.35158610343933,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bd229816c0a82a8590395416c81c333087f541fd",
            "commit_message": "Remove old benchmark-dev workflows\n\nNobody is maintaining this and we haven't really used it and are\nunlikely to start due to a high degree of noise and lack of dedicated\nmachines for this setup. Callgrind has worked for us well enough, with\nadditional profiling performed locally by engineers - this is not\nperfect but it doesn't look like we have a path to making this better.\n",
            "commit_timestamp": 1691522110.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691697841.398505,
            "elapsed_time": 367.9874475002289,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bd229816c0a82a8590395416c81c333087f541fd",
            "commit_message": "Remove old benchmark-dev workflows\n\nNobody is maintaining this and we haven't really used it and are\nunlikely to start due to a high degree of noise and lack of dedicated\nmachines for this setup. Callgrind has worked for us well enough, with\nadditional profiling performed locally by engineers - this is not\nperfect but it doesn't look like we have a path to making this better.\n",
            "commit_timestamp": 1691522110.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691712305.205836,
            "elapsed_time": 415.90595865249634,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bd229816c0a82a8590395416c81c333087f541fd",
            "commit_message": "Remove old benchmark-dev workflows\n\nNobody is maintaining this and we haven't really used it and are\nunlikely to start due to a high degree of noise and lack of dedicated\nmachines for this setup. Callgrind has worked for us well enough, with\nadditional profiling performed locally by engineers - this is not\nperfect but it doesn't look like we have a path to making this better.\n",
            "commit_timestamp": 1691522110.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691726646.19839,
            "elapsed_time": 339.05114006996155,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bd229816c0a82a8590395416c81c333087f541fd",
            "commit_message": "Remove old benchmark-dev workflows\n\nNobody is maintaining this and we haven't really used it and are\nunlikely to start due to a high degree of noise and lack of dedicated\nmachines for this setup. Callgrind has worked for us well enough, with\nadditional profiling performed locally by engineers - this is not\nperfect but it doesn't look like we have a path to making this better.\n",
            "commit_timestamp": 1691522110.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691741004.291922,
            "elapsed_time": 344.1730365753174,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bd229816c0a82a8590395416c81c333087f541fd",
            "commit_message": "Remove old benchmark-dev workflows\n\nNobody is maintaining this and we haven't really used it and are\nunlikely to start due to a high degree of noise and lack of dedicated\nmachines for this setup. Callgrind has worked for us well enough, with\nadditional profiling performed locally by engineers - this is not\nperfect but it doesn't look like we have a path to making this better.\n",
            "commit_timestamp": 1691522110.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691755425.618379,
            "elapsed_time": 351.07562494277954,
            "x64": false,
            "actual_files_count": 398,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "bd229816c0a82a8590395416c81c333087f541fd",
            "commit_message": "Remove old benchmark-dev workflows\n\nNobody is maintaining this and we haven't really used it and are\nunlikely to start due to a high degree of noise and lack of dedicated\nmachines for this setup. Callgrind has worked for us well enough, with\nadditional profiling performed locally by engineers - this is not\nperfect but it doesn't look like we have a path to making this better.\n",
            "commit_timestamp": 1691522110.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691769815.736681,
            "elapsed_time": 417.9103264808655,
            "x64": false,
            "actual_files_count": 400,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d98256bb80ddef75154bdb2d31c0bab7d5aa5683",
            "commit_message": "Sync to upstream/release/590 (#1008)\n\n* Better indentation in multi-line type mismatch error messages\r\n* Error message clone can no longer cause a stack overflow (when\r\ntypechecking with retainFullTypeGraphs set to false); fixes\r\nhttps://github.com/Roblox/luau/issues/975\r\n* `string.format` with %s is now ~2x faster on strings smaller than 100\r\ncharacters\r\n\r\nNative code generation:\r\n* All VM side exits will block return to the native execution of the\r\ncurrent function to preserve correctness\r\n* Fixed executable page allocation on Apple platforms when using\r\nhardened runtime\r\n* Added statistics for code generation (no. of functions compiler,\r\nmemory used for different areas)\r\n* Fixed issue with function entry type checks performed more that once\r\nin some functions\r\n",
            "commit_timestamp": 1691764957.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691784165.943389,
            "elapsed_time": 322.0255403518677,
            "x64": false,
            "actual_files_count": 400,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d98256bb80ddef75154bdb2d31c0bab7d5aa5683",
            "commit_message": "Sync to upstream/release/590 (#1008)\n\n* Better indentation in multi-line type mismatch error messages\r\n* Error message clone can no longer cause a stack overflow (when\r\ntypechecking with retainFullTypeGraphs set to false); fixes\r\nhttps://github.com/Roblox/luau/issues/975\r\n* `string.format` with %s is now ~2x faster on strings smaller than 100\r\ncharacters\r\n\r\nNative code generation:\r\n* All VM side exits will block return to the native execution of the\r\ncurrent function to preserve correctness\r\n* Fixed executable page allocation on Apple platforms when using\r\nhardened runtime\r\n* Added statistics for code generation (no. of functions compiler,\r\nmemory used for different areas)\r\n* Fixed issue with function entry type checks performed more that once\r\nin some functions\r\n",
            "commit_timestamp": 1691764957.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691798728.00049,
            "elapsed_time": 342.47181010246277,
            "x64": false,
            "actual_files_count": 400,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d98256bb80ddef75154bdb2d31c0bab7d5aa5683",
            "commit_message": "Sync to upstream/release/590 (#1008)\n\n* Better indentation in multi-line type mismatch error messages\r\n* Error message clone can no longer cause a stack overflow (when\r\ntypechecking with retainFullTypeGraphs set to false); fixes\r\nhttps://github.com/Roblox/luau/issues/975\r\n* `string.format` with %s is now ~2x faster on strings smaller than 100\r\ncharacters\r\n\r\nNative code generation:\r\n* All VM side exits will block return to the native execution of the\r\ncurrent function to preserve correctness\r\n* Fixed executable page allocation on Apple platforms when using\r\nhardened runtime\r\n* Added statistics for code generation (no. of functions compiler,\r\nmemory used for different areas)\r\n* Fixed issue with function entry type checks performed more that once\r\nin some functions\r\n",
            "commit_timestamp": 1691764957.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691812983.289633,
            "elapsed_time": 329.13985657691956,
            "x64": false,
            "actual_files_count": 400,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d98256bb80ddef75154bdb2d31c0bab7d5aa5683",
            "commit_message": "Sync to upstream/release/590 (#1008)\n\n* Better indentation in multi-line type mismatch error messages\r\n* Error message clone can no longer cause a stack overflow (when\r\ntypechecking with retainFullTypeGraphs set to false); fixes\r\nhttps://github.com/Roblox/luau/issues/975\r\n* `string.format` with %s is now ~2x faster on strings smaller than 100\r\ncharacters\r\n\r\nNative code generation:\r\n* All VM side exits will block return to the native execution of the\r\ncurrent function to preserve correctness\r\n* Fixed executable page allocation on Apple platforms when using\r\nhardened runtime\r\n* Added statistics for code generation (no. of functions compiler,\r\nmemory used for different areas)\r\n* Fixed issue with function entry type checks performed more that once\r\nin some functions\r\n",
            "commit_timestamp": 1691764957.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691827365.281535,
            "elapsed_time": 427.7481231689453,
            "x64": false,
            "actual_files_count": 400,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d98256bb80ddef75154bdb2d31c0bab7d5aa5683",
            "commit_message": "Sync to upstream/release/590 (#1008)\n\n* Better indentation in multi-line type mismatch error messages\r\n* Error message clone can no longer cause a stack overflow (when\r\ntypechecking with retainFullTypeGraphs set to false); fixes\r\nhttps://github.com/Roblox/luau/issues/975\r\n* `string.format` with %s is now ~2x faster on strings smaller than 100\r\ncharacters\r\n\r\nNative code generation:\r\n* All VM side exits will block return to the native execution of the\r\ncurrent function to preserve correctness\r\n* Fixed executable page allocation on Apple platforms when using\r\nhardened runtime\r\n* Added statistics for code generation (no. of functions compiler,\r\nmemory used for different areas)\r\n* Fixed issue with function entry type checks performed more that once\r\nin some functions\r\n",
            "commit_timestamp": 1691764957.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691841802.920717,
            "elapsed_time": 317.366774559021,
            "x64": false,
            "actual_files_count": 400,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d98256bb80ddef75154bdb2d31c0bab7d5aa5683",
            "commit_message": "Sync to upstream/release/590 (#1008)\n\n* Better indentation in multi-line type mismatch error messages\r\n* Error message clone can no longer cause a stack overflow (when\r\ntypechecking with retainFullTypeGraphs set to false); fixes\r\nhttps://github.com/Roblox/luau/issues/975\r\n* `string.format` with %s is now ~2x faster on strings smaller than 100\r\ncharacters\r\n\r\nNative code generation:\r\n* All VM side exits will block return to the native execution of the\r\ncurrent function to preserve correctness\r\n* Fixed executable page allocation on Apple platforms when using\r\nhardened runtime\r\n* Added statistics for code generation (no. of functions compiler,\r\nmemory used for different areas)\r\n* Fixed issue with function entry type checks performed more that once\r\nin some functions\r\n",
            "commit_timestamp": 1691764957.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691856237.569495,
            "elapsed_time": 349.8023817539215,
            "x64": false,
            "actual_files_count": 400,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d98256bb80ddef75154bdb2d31c0bab7d5aa5683",
            "commit_message": "Sync to upstream/release/590 (#1008)\n\n* Better indentation in multi-line type mismatch error messages\r\n* Error message clone can no longer cause a stack overflow (when\r\ntypechecking with retainFullTypeGraphs set to false); fixes\r\nhttps://github.com/Roblox/luau/issues/975\r\n* `string.format` with %s is now ~2x faster on strings smaller than 100\r\ncharacters\r\n\r\nNative code generation:\r\n* All VM side exits will block return to the native execution of the\r\ncurrent function to preserve correctness\r\n* Fixed executable page allocation on Apple platforms when using\r\nhardened runtime\r\n* Added statistics for code generation (no. of functions compiler,\r\nmemory used for different areas)\r\n* Fixed issue with function entry type checks performed more that once\r\nin some functions\r\n",
            "commit_timestamp": 1691764957.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1691870559.970986,
            "elapsed_time": 366.20705676078796,
            "x64": false,
            "actual_files_count": 400,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d98256bb80ddef75154bdb2d31c0bab7d5aa5683",
            "commit_message": "Sync to upstream/release/590 (#1008)\n\n* Better indentation in multi-line type mismatch error messages\r\n* Error message clone can no longer cause a stack overflow (when\r\ntypechecking with retainFullTypeGraphs set to false); fixes\r\nhttps://github.com/Roblox/luau/issues/975\r\n* `string.format` with %s is now ~2x faster on strings smaller than 100\r\ncharacters\r\n\r\nNative code generation:\r\n* All VM side exits will block return to the native execution of the\r\ncurrent function to preserve correctness\r\n* Fixed executable page allocation on Apple platforms when using\r\nhardened runtime\r\n* Added statistics for code generation (no. of functions compiler,\r\nmemory used for different areas)\r\n* Fixed issue with function entry type checks performed more that once\r\nin some functions\r\n",
            "commit_timestamp": 1691764957.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695376530.043729,
            "elapsed_time": 345.2145335674286,
            "x64": false,
            "actual_files_count": 412,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d00e93c82c0ad156afa8cf0c100c2becfe83b808",
            "commit_message": "Support Control Flow type Refinements for \"break\" and \"continue\" statements (#1004)\n\nFixes: https://github.com/Roblox/luau/issues/913\r\n\r\nThis PR adds support for type refinements around guard clauses that use\r\n`break` and `continue` statements inside a loop, similar to how guard\r\nclauses with `return` is supported.\r\n\r\nI had some free time today, so I figure I'd give a shot at a na\u00efve fix\r\nfor this at the very least.\r\n\r\n---\r\n\r\n## Resulting Change:\r\n\r\nLuau now supports type refinements within loops where a `continue` or\r\n`break` guard clause was used.\r\nFor example:\r\n```lua\r\nfor _, object in objects :: {{value: string?}} do\r\n    if not object.value then\r\n        continue\r\n    end\r\n    local x: string = object.value -- OK; Used to emit \"Type 'string?' could not be converted into 'string'\"\r\nend\r\n```\r\n\r\n---------\r\n\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>",
            "commit_timestamp": 1695335322.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695389853.003366,
            "elapsed_time": 360.5621032714844,
            "x64": false,
            "actual_files_count": 412,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d00e93c82c0ad156afa8cf0c100c2becfe83b808",
            "commit_message": "Support Control Flow type Refinements for \"break\" and \"continue\" statements (#1004)\n\nFixes: https://github.com/Roblox/luau/issues/913\r\n\r\nThis PR adds support for type refinements around guard clauses that use\r\n`break` and `continue` statements inside a loop, similar to how guard\r\nclauses with `return` is supported.\r\n\r\nI had some free time today, so I figure I'd give a shot at a na\u00efve fix\r\nfor this at the very least.\r\n\r\n---\r\n\r\n## Resulting Change:\r\n\r\nLuau now supports type refinements within loops where a `continue` or\r\n`break` guard clause was used.\r\nFor example:\r\n```lua\r\nfor _, object in objects :: {{value: string?}} do\r\n    if not object.value then\r\n        continue\r\n    end\r\n    local x: string = object.value -- OK; Used to emit \"Type 'string?' could not be converted into 'string'\"\r\nend\r\n```\r\n\r\n---------\r\n\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>",
            "commit_timestamp": 1695335322.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695384212.702647,
            "elapsed_time": 343.9852361679077,
            "x64": false,
            "actual_files_count": 412,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d00e93c82c0ad156afa8cf0c100c2becfe83b808",
            "commit_message": "Support Control Flow type Refinements for \"break\" and \"continue\" statements (#1004)\n\nFixes: https://github.com/Roblox/luau/issues/913\r\n\r\nThis PR adds support for type refinements around guard clauses that use\r\n`break` and `continue` statements inside a loop, similar to how guard\r\nclauses with `return` is supported.\r\n\r\nI had some free time today, so I figure I'd give a shot at a na\u00efve fix\r\nfor this at the very least.\r\n\r\n---\r\n\r\n## Resulting Change:\r\n\r\nLuau now supports type refinements within loops where a `continue` or\r\n`break` guard clause was used.\r\nFor example:\r\n```lua\r\nfor _, object in objects :: {{value: string?}} do\r\n    if not object.value then\r\n        continue\r\n    end\r\n    local x: string = object.value -- OK; Used to emit \"Type 'string?' could not be converted into 'string'\"\r\nend\r\n```\r\n\r\n---------\r\n\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>",
            "commit_timestamp": 1695335322.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695398551.973643,
            "elapsed_time": 371.58698201179504,
            "x64": false,
            "actual_files_count": 412,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "d00e93c82c0ad156afa8cf0c100c2becfe83b808",
            "commit_message": "Support Control Flow type Refinements for \"break\" and \"continue\" statements (#1004)\n\nFixes: https://github.com/Roblox/luau/issues/913\r\n\r\nThis PR adds support for type refinements around guard clauses that use\r\n`break` and `continue` statements inside a loop, similar to how guard\r\nclauses with `return` is supported.\r\n\r\nI had some free time today, so I figure I'd give a shot at a na\u00efve fix\r\nfor this at the very least.\r\n\r\n---\r\n\r\n## Resulting Change:\r\n\r\nLuau now supports type refinements within loops where a `continue` or\r\n`break` guard clause was used.\r\nFor example:\r\n```lua\r\nfor _, object in objects :: {{value: string?}} do\r\n    if not object.value then\r\n        continue\r\n    end\r\n    local x: string = object.value -- OK; Used to emit \"Type 'string?' could not be converted into 'string'\"\r\nend\r\n```\r\n\r\n---------\r\n\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>",
            "commit_timestamp": 1695335322.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695413013.83585,
            "elapsed_time": 366.365439414978,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695427463.385632,
            "elapsed_time": 327.89313650131226,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695441755.770904,
            "elapsed_time": 394.4037375450134,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695456186.702707,
            "elapsed_time": 372.0755863189697,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695470602.289353,
            "elapsed_time": 343.4643144607544,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695484993.142518,
            "elapsed_time": 343.2223198413849,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695499417.284309,
            "elapsed_time": 393.7272787094116,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695513894.839642,
            "elapsed_time": 355.3512716293335,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695528222.311798,
            "elapsed_time": 346.2027232646942,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695542609.119692,
            "elapsed_time": 335.73479771614075,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695557001.270911,
            "elapsed_time": 349.62179136276245,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695571408.175904,
            "elapsed_time": 429.2354984283447,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695585793.807497,
            "elapsed_time": 349.8072259426117,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695600289.58916,
            "elapsed_time": 348.627112865448,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695614639.541642,
            "elapsed_time": 368.6068813800812,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695629005.789795,
            "elapsed_time": 464.81471967697144,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695643472.675172,
            "elapsed_time": 361.56790924072266,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695657814.086212,
            "elapsed_time": 410.39067912101746,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695672278.72035,
            "elapsed_time": 450.89859080314636,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695686709.024291,
            "elapsed_time": 363.7115566730499,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695701050.760141,
            "elapsed_time": 353.23589158058167,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695715410.841106,
            "elapsed_time": 331.75125193595886,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695729915.59508,
            "elapsed_time": 435.38709712028503,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695744269.824267,
            "elapsed_time": 373.3945109844208,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695758618.151454,
            "elapsed_time": 463.00284075737,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695773091.323301,
            "elapsed_time": 428.4890601634979,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695787436.399138,
            "elapsed_time": 366.3426356315613,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695801795.950772,
            "elapsed_time": 328.51705527305603,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695816226.817508,
            "elapsed_time": 433.42033433914185,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695830617.697035,
            "elapsed_time": 349.24867939949036,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695845047.572545,
            "elapsed_time": 423.08592319488525,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695859452.304974,
            "elapsed_time": 426.8054037094116,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695873857.512994,
            "elapsed_time": 338.995507478714,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695888250.06336,
            "elapsed_time": 424.37781858444214,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695902695.102454,
            "elapsed_time": 437.5560908317566,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695917100.422823,
            "elapsed_time": 460.4798033237457,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695931416.168225,
            "elapsed_time": 402.7620267868042,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695945917.292224,
            "elapsed_time": 357.21293783187866,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695960290.263009,
            "elapsed_time": 331.5511112213135,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695974635.23455,
            "elapsed_time": 348.2129395008087,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1695989022.392797,
            "elapsed_time": 440.25128388404846,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696003395.791004,
            "elapsed_time": 437.3737561702728,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696017807.358704,
            "elapsed_time": 467.64249324798584,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696032305.418578,
            "elapsed_time": 357.6126003265381,
            "x64": false,
            "actual_files_count": 413,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "16fbfe912c2583f47abc10fc8e183ac913d4817e",
            "commit_message": "Sync to upstream/release/596 (#1050)\n\n- Cleaned up `FFlag::FixFindBindingAtFunctionName`,\r\n`FFlag::LuauNormalizeBlockedTypes`, `FFlag::LuauPCallDebuggerFix`\r\n- Added support for break and continue into control flow analysis\r\n- The old type unification engine will now report a more fine-grained\r\nerror at times, indicating that type normalization in particular failed\r\n\r\n# New Type Solver\r\n\r\n- Refactor of Unifier2, the new unification implementation for Luau\r\n- Completed MVP of new unification implementation\r\n- Dramatically simplified overload selection logic\r\n- Type family reduction can now apply sooner to free types that have\r\nbeen solved\r\n- Subtyping now supports table indexers\r\n- Generalization now replaces bad generics with unknown\r\n\r\n# Native Code Generation\r\n\r\n- Reduce stack spills caused by FINDUPVAL and STORE_TAG\r\n- Improve Generate SHL/SHR/SAR/rotates with immediate operands in X64\r\n- Removed redundant case re-check in table lookup fallback\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1695409935.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696046600.857551,
            "elapsed_time": 360.43644094467163,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1d0b449181a41c00efc255a9a255616b843986b9",
            "commit_message": "Sync to upstream/release/597 (#1054)\n\n# New Type Solver\r\n\r\n- Implement bidirectional type inference for higher order functions so\r\nthat we can provide a more precise type improving the autocomplete's\r\nhuman factors.\r\n- We seal all tables, so we changed the stringification to make it a\r\nlittle lighter on users.\r\n- Fixed a case of array-out-of-bound access.\r\n- Type families no longer depends on `TxnLog` and `Unifier`.\r\n- Type refinements now waits until the free types are sufficiently\r\nsolved.\r\n\r\n# Native Code Generation\r\n\r\n- Remove cached slot lookup for `executeSETTABLEKS` function because it\r\nis a fallback in the event of a cache miss, making the cached slot\r\nlookup redundant.\r\n- Optimized repeated array lookups, e.g. `a[3]` in `a[3] = a[3] / 2` is\r\ndone once.\r\n\r\n# Misc\r\n\r\n- On some platforms, it is necessary to use `gmtime_s` with the\r\narguments reversed to get the current time. You can now define\r\n`DOCTEST_CONFIG_USE_GMTIME_S` to build and run unit tests on those\r\nplatforms.\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>",
            "commit_timestamp": 1696036385.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696061022.099325,
            "elapsed_time": 336.6147916316986,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1d0b449181a41c00efc255a9a255616b843986b9",
            "commit_message": "Sync to upstream/release/597 (#1054)\n\n# New Type Solver\r\n\r\n- Implement bidirectional type inference for higher order functions so\r\nthat we can provide a more precise type improving the autocomplete's\r\nhuman factors.\r\n- We seal all tables, so we changed the stringification to make it a\r\nlittle lighter on users.\r\n- Fixed a case of array-out-of-bound access.\r\n- Type families no longer depends on `TxnLog` and `Unifier`.\r\n- Type refinements now waits until the free types are sufficiently\r\nsolved.\r\n\r\n# Native Code Generation\r\n\r\n- Remove cached slot lookup for `executeSETTABLEKS` function because it\r\nis a fallback in the event of a cache miss, making the cached slot\r\nlookup redundant.\r\n- Optimized repeated array lookups, e.g. `a[3]` in `a[3] = a[3] / 2` is\r\ndone once.\r\n\r\n# Misc\r\n\r\n- On some platforms, it is necessary to use `gmtime_s` with the\r\narguments reversed to get the current time. You can now define\r\n`DOCTEST_CONFIG_USE_GMTIME_S` to build and run unit tests on those\r\nplatforms.\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>",
            "commit_timestamp": 1696036385.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696075411.156587,
            "elapsed_time": 416.7078812122345,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1d0b449181a41c00efc255a9a255616b843986b9",
            "commit_message": "Sync to upstream/release/597 (#1054)\n\n# New Type Solver\r\n\r\n- Implement bidirectional type inference for higher order functions so\r\nthat we can provide a more precise type improving the autocomplete's\r\nhuman factors.\r\n- We seal all tables, so we changed the stringification to make it a\r\nlittle lighter on users.\r\n- Fixed a case of array-out-of-bound access.\r\n- Type families no longer depends on `TxnLog` and `Unifier`.\r\n- Type refinements now waits until the free types are sufficiently\r\nsolved.\r\n\r\n# Native Code Generation\r\n\r\n- Remove cached slot lookup for `executeSETTABLEKS` function because it\r\nis a fallback in the event of a cache miss, making the cached slot\r\nlookup redundant.\r\n- Optimized repeated array lookups, e.g. `a[3]` in `a[3] = a[3] / 2` is\r\ndone once.\r\n\r\n# Misc\r\n\r\n- On some platforms, it is necessary to use `gmtime_s` with the\r\narguments reversed to get the current time. You can now define\r\n`DOCTEST_CONFIG_USE_GMTIME_S` to build and run unit tests on those\r\nplatforms.\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>",
            "commit_timestamp": 1696036385.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696089791.623599,
            "elapsed_time": 347.6707682609558,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1d0b449181a41c00efc255a9a255616b843986b9",
            "commit_message": "Sync to upstream/release/597 (#1054)\n\n# New Type Solver\r\n\r\n- Implement bidirectional type inference for higher order functions so\r\nthat we can provide a more precise type improving the autocomplete's\r\nhuman factors.\r\n- We seal all tables, so we changed the stringification to make it a\r\nlittle lighter on users.\r\n- Fixed a case of array-out-of-bound access.\r\n- Type families no longer depends on `TxnLog` and `Unifier`.\r\n- Type refinements now waits until the free types are sufficiently\r\nsolved.\r\n\r\n# Native Code Generation\r\n\r\n- Remove cached slot lookup for `executeSETTABLEKS` function because it\r\nis a fallback in the event of a cache miss, making the cached slot\r\nlookup redundant.\r\n- Optimized repeated array lookups, e.g. `a[3]` in `a[3] = a[3] / 2` is\r\ndone once.\r\n\r\n# Misc\r\n\r\n- On some platforms, it is necessary to use `gmtime_s` with the\r\narguments reversed to get the current time. You can now define\r\n`DOCTEST_CONFIG_USE_GMTIME_S` to build and run unit tests on those\r\nplatforms.\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>",
            "commit_timestamp": 1696036385.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696104244.185406,
            "elapsed_time": 364.64079093933105,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1d0b449181a41c00efc255a9a255616b843986b9",
            "commit_message": "Sync to upstream/release/597 (#1054)\n\n# New Type Solver\r\n\r\n- Implement bidirectional type inference for higher order functions so\r\nthat we can provide a more precise type improving the autocomplete's\r\nhuman factors.\r\n- We seal all tables, so we changed the stringification to make it a\r\nlittle lighter on users.\r\n- Fixed a case of array-out-of-bound access.\r\n- Type families no longer depends on `TxnLog` and `Unifier`.\r\n- Type refinements now waits until the free types are sufficiently\r\nsolved.\r\n\r\n# Native Code Generation\r\n\r\n- Remove cached slot lookup for `executeSETTABLEKS` function because it\r\nis a fallback in the event of a cache miss, making the cached slot\r\nlookup redundant.\r\n- Optimized repeated array lookups, e.g. `a[3]` in `a[3] = a[3] / 2` is\r\ndone once.\r\n\r\n# Misc\r\n\r\n- On some platforms, it is necessary to use `gmtime_s` with the\r\narguments reversed to get the current time. You can now define\r\n`DOCTEST_CONFIG_USE_GMTIME_S` to build and run unit tests on those\r\nplatforms.\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>",
            "commit_timestamp": 1696036385.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696118677.605004,
            "elapsed_time": 426.19588589668274,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1d0b449181a41c00efc255a9a255616b843986b9",
            "commit_message": "Sync to upstream/release/597 (#1054)\n\n# New Type Solver\r\n\r\n- Implement bidirectional type inference for higher order functions so\r\nthat we can provide a more precise type improving the autocomplete's\r\nhuman factors.\r\n- We seal all tables, so we changed the stringification to make it a\r\nlittle lighter on users.\r\n- Fixed a case of array-out-of-bound access.\r\n- Type families no longer depends on `TxnLog` and `Unifier`.\r\n- Type refinements now waits until the free types are sufficiently\r\nsolved.\r\n\r\n# Native Code Generation\r\n\r\n- Remove cached slot lookup for `executeSETTABLEKS` function because it\r\nis a fallback in the event of a cache miss, making the cached slot\r\nlookup redundant.\r\n- Optimized repeated array lookups, e.g. `a[3]` in `a[3] = a[3] / 2` is\r\ndone once.\r\n\r\n# Misc\r\n\r\n- On some platforms, it is necessary to use `gmtime_s` with the\r\narguments reversed to get the current time. You can now define\r\n`DOCTEST_CONFIG_USE_GMTIME_S` to build and run unit tests on those\r\nplatforms.\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>",
            "commit_timestamp": 1696036385.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696132999.74334,
            "elapsed_time": 354.695369720459,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1d0b449181a41c00efc255a9a255616b843986b9",
            "commit_message": "Sync to upstream/release/597 (#1054)\n\n# New Type Solver\r\n\r\n- Implement bidirectional type inference for higher order functions so\r\nthat we can provide a more precise type improving the autocomplete's\r\nhuman factors.\r\n- We seal all tables, so we changed the stringification to make it a\r\nlittle lighter on users.\r\n- Fixed a case of array-out-of-bound access.\r\n- Type families no longer depends on `TxnLog` and `Unifier`.\r\n- Type refinements now waits until the free types are sufficiently\r\nsolved.\r\n\r\n# Native Code Generation\r\n\r\n- Remove cached slot lookup for `executeSETTABLEKS` function because it\r\nis a fallback in the event of a cache miss, making the cached slot\r\nlookup redundant.\r\n- Optimized repeated array lookups, e.g. `a[3]` in `a[3] = a[3] / 2` is\r\ndone once.\r\n\r\n# Misc\r\n\r\n- On some platforms, it is necessary to use `gmtime_s` with the\r\narguments reversed to get the current time. You can now define\r\n`DOCTEST_CONFIG_USE_GMTIME_S` to build and run unit tests on those\r\nplatforms.\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>",
            "commit_timestamp": 1696036385.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696147431.551406,
            "elapsed_time": 351.48406410217285,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1d0b449181a41c00efc255a9a255616b843986b9",
            "commit_message": "Sync to upstream/release/597 (#1054)\n\n# New Type Solver\r\n\r\n- Implement bidirectional type inference for higher order functions so\r\nthat we can provide a more precise type improving the autocomplete's\r\nhuman factors.\r\n- We seal all tables, so we changed the stringification to make it a\r\nlittle lighter on users.\r\n- Fixed a case of array-out-of-bound access.\r\n- Type families no longer depends on `TxnLog` and `Unifier`.\r\n- Type refinements now waits until the free types are sufficiently\r\nsolved.\r\n\r\n# Native Code Generation\r\n\r\n- Remove cached slot lookup for `executeSETTABLEKS` function because it\r\nis a fallback in the event of a cache miss, making the cached slot\r\nlookup redundant.\r\n- Optimized repeated array lookups, e.g. `a[3]` in `a[3] = a[3] / 2` is\r\ndone once.\r\n\r\n# Misc\r\n\r\n- On some platforms, it is necessary to use `gmtime_s` with the\r\narguments reversed to get the current time. You can now define\r\n`DOCTEST_CONFIG_USE_GMTIME_S` to build and run unit tests on those\r\nplatforms.\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>",
            "commit_timestamp": 1696036385.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696161857.134571,
            "elapsed_time": 420.7069163322449,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1d0b449181a41c00efc255a9a255616b843986b9",
            "commit_message": "Sync to upstream/release/597 (#1054)\n\n# New Type Solver\r\n\r\n- Implement bidirectional type inference for higher order functions so\r\nthat we can provide a more precise type improving the autocomplete's\r\nhuman factors.\r\n- We seal all tables, so we changed the stringification to make it a\r\nlittle lighter on users.\r\n- Fixed a case of array-out-of-bound access.\r\n- Type families no longer depends on `TxnLog` and `Unifier`.\r\n- Type refinements now waits until the free types are sufficiently\r\nsolved.\r\n\r\n# Native Code Generation\r\n\r\n- Remove cached slot lookup for `executeSETTABLEKS` function because it\r\nis a fallback in the event of a cache miss, making the cached slot\r\nlookup redundant.\r\n- Optimized repeated array lookups, e.g. `a[3]` in `a[3] = a[3] / 2` is\r\ndone once.\r\n\r\n# Misc\r\n\r\n- On some platforms, it is necessary to use `gmtime_s` with the\r\narguments reversed to get the current time. You can now define\r\n`DOCTEST_CONFIG_USE_GMTIME_S` to build and run unit tests on those\r\nplatforms.\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>",
            "commit_timestamp": 1696036385.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696176200.691306,
            "elapsed_time": 338.18793630599976,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1d0b449181a41c00efc255a9a255616b843986b9",
            "commit_message": "Sync to upstream/release/597 (#1054)\n\n# New Type Solver\r\n\r\n- Implement bidirectional type inference for higher order functions so\r\nthat we can provide a more precise type improving the autocomplete's\r\nhuman factors.\r\n- We seal all tables, so we changed the stringification to make it a\r\nlittle lighter on users.\r\n- Fixed a case of array-out-of-bound access.\r\n- Type families no longer depends on `TxnLog` and `Unifier`.\r\n- Type refinements now waits until the free types are sufficiently\r\nsolved.\r\n\r\n# Native Code Generation\r\n\r\n- Remove cached slot lookup for `executeSETTABLEKS` function because it\r\nis a fallback in the event of a cache miss, making the cached slot\r\nlookup redundant.\r\n- Optimized repeated array lookups, e.g. `a[3]` in `a[3] = a[3] / 2` is\r\ndone once.\r\n\r\n# Misc\r\n\r\n- On some platforms, it is necessary to use `gmtime_s` with the\r\narguments reversed to get the current time. You can now define\r\n`DOCTEST_CONFIG_USE_GMTIME_S` to build and run unit tests on those\r\nplatforms.\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>",
            "commit_timestamp": 1696036385.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696190637.555059,
            "elapsed_time": 359.1159451007843,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1d0b449181a41c00efc255a9a255616b843986b9",
            "commit_message": "Sync to upstream/release/597 (#1054)\n\n# New Type Solver\r\n\r\n- Implement bidirectional type inference for higher order functions so\r\nthat we can provide a more precise type improving the autocomplete's\r\nhuman factors.\r\n- We seal all tables, so we changed the stringification to make it a\r\nlittle lighter on users.\r\n- Fixed a case of array-out-of-bound access.\r\n- Type families no longer depends on `TxnLog` and `Unifier`.\r\n- Type refinements now waits until the free types are sufficiently\r\nsolved.\r\n\r\n# Native Code Generation\r\n\r\n- Remove cached slot lookup for `executeSETTABLEKS` function because it\r\nis a fallback in the event of a cache miss, making the cached slot\r\nlookup redundant.\r\n- Optimized repeated array lookups, e.g. `a[3]` in `a[3] = a[3] / 2` is\r\ndone once.\r\n\r\n# Misc\r\n\r\n- On some platforms, it is necessary to use `gmtime_s` with the\r\narguments reversed to get the current time. You can now define\r\n`DOCTEST_CONFIG_USE_GMTIME_S` to build and run unit tests on those\r\nplatforms.\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>",
            "commit_timestamp": 1696036385.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696205107.420434,
            "elapsed_time": 372.30626583099365,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1d0b449181a41c00efc255a9a255616b843986b9",
            "commit_message": "Sync to upstream/release/597 (#1054)\n\n# New Type Solver\r\n\r\n- Implement bidirectional type inference for higher order functions so\r\nthat we can provide a more precise type improving the autocomplete's\r\nhuman factors.\r\n- We seal all tables, so we changed the stringification to make it a\r\nlittle lighter on users.\r\n- Fixed a case of array-out-of-bound access.\r\n- Type families no longer depends on `TxnLog` and `Unifier`.\r\n- Type refinements now waits until the free types are sufficiently\r\nsolved.\r\n\r\n# Native Code Generation\r\n\r\n- Remove cached slot lookup for `executeSETTABLEKS` function because it\r\nis a fallback in the event of a cache miss, making the cached slot\r\nlookup redundant.\r\n- Optimized repeated array lookups, e.g. `a[3]` in `a[3] = a[3] / 2` is\r\ndone once.\r\n\r\n# Misc\r\n\r\n- On some platforms, it is necessary to use `gmtime_s` with the\r\narguments reversed to get the current time. You can now define\r\n`DOCTEST_CONFIG_USE_GMTIME_S` to build and run unit tests on those\r\nplatforms.\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>",
            "commit_timestamp": 1696036385.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696219428.95672,
            "elapsed_time": 342.56040358543396,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1d0b449181a41c00efc255a9a255616b843986b9",
            "commit_message": "Sync to upstream/release/597 (#1054)\n\n# New Type Solver\r\n\r\n- Implement bidirectional type inference for higher order functions so\r\nthat we can provide a more precise type improving the autocomplete's\r\nhuman factors.\r\n- We seal all tables, so we changed the stringification to make it a\r\nlittle lighter on users.\r\n- Fixed a case of array-out-of-bound access.\r\n- Type families no longer depends on `TxnLog` and `Unifier`.\r\n- Type refinements now waits until the free types are sufficiently\r\nsolved.\r\n\r\n# Native Code Generation\r\n\r\n- Remove cached slot lookup for `executeSETTABLEKS` function because it\r\nis a fallback in the event of a cache miss, making the cached slot\r\nlookup redundant.\r\n- Optimized repeated array lookups, e.g. `a[3]` in `a[3] = a[3] / 2` is\r\ndone once.\r\n\r\n# Misc\r\n\r\n- On some platforms, it is necessary to use `gmtime_s` with the\r\narguments reversed to get the current time. You can now define\r\n`DOCTEST_CONFIG_USE_GMTIME_S` to build and run unit tests on those\r\nplatforms.\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>",
            "commit_timestamp": 1696036385.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696233795.279337,
            "elapsed_time": 428.4855647087097,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1d0b449181a41c00efc255a9a255616b843986b9",
            "commit_message": "Sync to upstream/release/597 (#1054)\n\n# New Type Solver\r\n\r\n- Implement bidirectional type inference for higher order functions so\r\nthat we can provide a more precise type improving the autocomplete's\r\nhuman factors.\r\n- We seal all tables, so we changed the stringification to make it a\r\nlittle lighter on users.\r\n- Fixed a case of array-out-of-bound access.\r\n- Type families no longer depends on `TxnLog` and `Unifier`.\r\n- Type refinements now waits until the free types are sufficiently\r\nsolved.\r\n\r\n# Native Code Generation\r\n\r\n- Remove cached slot lookup for `executeSETTABLEKS` function because it\r\nis a fallback in the event of a cache miss, making the cached slot\r\nlookup redundant.\r\n- Optimized repeated array lookups, e.g. `a[3]` in `a[3] = a[3] / 2` is\r\ndone once.\r\n\r\n# Misc\r\n\r\n- On some platforms, it is necessary to use `gmtime_s` with the\r\narguments reversed to get the current time. You can now define\r\n`DOCTEST_CONFIG_USE_GMTIME_S` to build and run unit tests on those\r\nplatforms.\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>",
            "commit_timestamp": 1696036385.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696248307.876764,
            "elapsed_time": 371.77481174468994,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1d0b449181a41c00efc255a9a255616b843986b9",
            "commit_message": "Sync to upstream/release/597 (#1054)\n\n# New Type Solver\r\n\r\n- Implement bidirectional type inference for higher order functions so\r\nthat we can provide a more precise type improving the autocomplete's\r\nhuman factors.\r\n- We seal all tables, so we changed the stringification to make it a\r\nlittle lighter on users.\r\n- Fixed a case of array-out-of-bound access.\r\n- Type families no longer depends on `TxnLog` and `Unifier`.\r\n- Type refinements now waits until the free types are sufficiently\r\nsolved.\r\n\r\n# Native Code Generation\r\n\r\n- Remove cached slot lookup for `executeSETTABLEKS` function because it\r\nis a fallback in the event of a cache miss, making the cached slot\r\nlookup redundant.\r\n- Optimized repeated array lookups, e.g. `a[3]` in `a[3] = a[3] / 2` is\r\ndone once.\r\n\r\n# Misc\r\n\r\n- On some platforms, it is necessary to use `gmtime_s` with the\r\narguments reversed to get the current time. You can now define\r\n`DOCTEST_CONFIG_USE_GMTIME_S` to build and run unit tests on those\r\nplatforms.\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>",
            "commit_timestamp": 1696036385.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696262679.6092,
            "elapsed_time": 459.55887484550476,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1d0b449181a41c00efc255a9a255616b843986b9",
            "commit_message": "Sync to upstream/release/597 (#1054)\n\n# New Type Solver\r\n\r\n- Implement bidirectional type inference for higher order functions so\r\nthat we can provide a more precise type improving the autocomplete's\r\nhuman factors.\r\n- We seal all tables, so we changed the stringification to make it a\r\nlittle lighter on users.\r\n- Fixed a case of array-out-of-bound access.\r\n- Type families no longer depends on `TxnLog` and `Unifier`.\r\n- Type refinements now waits until the free types are sufficiently\r\nsolved.\r\n\r\n# Native Code Generation\r\n\r\n- Remove cached slot lookup for `executeSETTABLEKS` function because it\r\nis a fallback in the event of a cache miss, making the cached slot\r\nlookup redundant.\r\n- Optimized repeated array lookups, e.g. `a[3]` in `a[3] = a[3] / 2` is\r\ndone once.\r\n\r\n# Misc\r\n\r\n- On some platforms, it is necessary to use `gmtime_s` with the\r\narguments reversed to get the current time. You can now define\r\n`DOCTEST_CONFIG_USE_GMTIME_S` to build and run unit tests on those\r\nplatforms.\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>",
            "commit_timestamp": 1696036385.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696277039.670799,
            "elapsed_time": 362.057265996933,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1d0b449181a41c00efc255a9a255616b843986b9",
            "commit_message": "Sync to upstream/release/597 (#1054)\n\n# New Type Solver\r\n\r\n- Implement bidirectional type inference for higher order functions so\r\nthat we can provide a more precise type improving the autocomplete's\r\nhuman factors.\r\n- We seal all tables, so we changed the stringification to make it a\r\nlittle lighter on users.\r\n- Fixed a case of array-out-of-bound access.\r\n- Type families no longer depends on `TxnLog` and `Unifier`.\r\n- Type refinements now waits until the free types are sufficiently\r\nsolved.\r\n\r\n# Native Code Generation\r\n\r\n- Remove cached slot lookup for `executeSETTABLEKS` function because it\r\nis a fallback in the event of a cache miss, making the cached slot\r\nlookup redundant.\r\n- Optimized repeated array lookups, e.g. `a[3]` in `a[3] = a[3] / 2` is\r\ndone once.\r\n\r\n# Misc\r\n\r\n- On some platforms, it is necessary to use `gmtime_s` with the\r\narguments reversed to get the current time. You can now define\r\n`DOCTEST_CONFIG_USE_GMTIME_S` to build and run unit tests on those\r\nplatforms.\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>",
            "commit_timestamp": 1696036385.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696291493.97619,
            "elapsed_time": 359.61929512023926,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1d0b449181a41c00efc255a9a255616b843986b9",
            "commit_message": "Sync to upstream/release/597 (#1054)\n\n# New Type Solver\r\n\r\n- Implement bidirectional type inference for higher order functions so\r\nthat we can provide a more precise type improving the autocomplete's\r\nhuman factors.\r\n- We seal all tables, so we changed the stringification to make it a\r\nlittle lighter on users.\r\n- Fixed a case of array-out-of-bound access.\r\n- Type families no longer depends on `TxnLog` and `Unifier`.\r\n- Type refinements now waits until the free types are sufficiently\r\nsolved.\r\n\r\n# Native Code Generation\r\n\r\n- Remove cached slot lookup for `executeSETTABLEKS` function because it\r\nis a fallback in the event of a cache miss, making the cached slot\r\nlookup redundant.\r\n- Optimized repeated array lookups, e.g. `a[3]` in `a[3] = a[3] / 2` is\r\ndone once.\r\n\r\n# Misc\r\n\r\n- On some platforms, it is necessary to use `gmtime_s` with the\r\narguments reversed to get the current time. You can now define\r\n`DOCTEST_CONFIG_USE_GMTIME_S` to build and run unit tests on those\r\nplatforms.\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>",
            "commit_timestamp": 1696036385.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696305835.531857,
            "elapsed_time": 350.84547877311707,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1d0b449181a41c00efc255a9a255616b843986b9",
            "commit_message": "Sync to upstream/release/597 (#1054)\n\n# New Type Solver\r\n\r\n- Implement bidirectional type inference for higher order functions so\r\nthat we can provide a more precise type improving the autocomplete's\r\nhuman factors.\r\n- We seal all tables, so we changed the stringification to make it a\r\nlittle lighter on users.\r\n- Fixed a case of array-out-of-bound access.\r\n- Type families no longer depends on `TxnLog` and `Unifier`.\r\n- Type refinements now waits until the free types are sufficiently\r\nsolved.\r\n\r\n# Native Code Generation\r\n\r\n- Remove cached slot lookup for `executeSETTABLEKS` function because it\r\nis a fallback in the event of a cache miss, making the cached slot\r\nlookup redundant.\r\n- Optimized repeated array lookups, e.g. `a[3]` in `a[3] = a[3] / 2` is\r\ndone once.\r\n\r\n# Misc\r\n\r\n- On some platforms, it is necessary to use `gmtime_s` with the\r\narguments reversed to get the current time. You can now define\r\n`DOCTEST_CONFIG_USE_GMTIME_S` to build and run unit tests on those\r\nplatforms.\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>",
            "commit_timestamp": 1696036385.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696320243.922399,
            "elapsed_time": 350.16362714767456,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1d0b449181a41c00efc255a9a255616b843986b9",
            "commit_message": "Sync to upstream/release/597 (#1054)\n\n# New Type Solver\r\n\r\n- Implement bidirectional type inference for higher order functions so\r\nthat we can provide a more precise type improving the autocomplete's\r\nhuman factors.\r\n- We seal all tables, so we changed the stringification to make it a\r\nlittle lighter on users.\r\n- Fixed a case of array-out-of-bound access.\r\n- Type families no longer depends on `TxnLog` and `Unifier`.\r\n- Type refinements now waits until the free types are sufficiently\r\nsolved.\r\n\r\n# Native Code Generation\r\n\r\n- Remove cached slot lookup for `executeSETTABLEKS` function because it\r\nis a fallback in the event of a cache miss, making the cached slot\r\nlookup redundant.\r\n- Optimized repeated array lookups, e.g. `a[3]` in `a[3] = a[3] / 2` is\r\ndone once.\r\n\r\n# Misc\r\n\r\n- On some platforms, it is necessary to use `gmtime_s` with the\r\narguments reversed to get the current time. You can now define\r\n`DOCTEST_CONFIG_USE_GMTIME_S` to build and run unit tests on those\r\nplatforms.\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>",
            "commit_timestamp": 1696036385.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696334626.129656,
            "elapsed_time": 416.9364697933197,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1d0b449181a41c00efc255a9a255616b843986b9",
            "commit_message": "Sync to upstream/release/597 (#1054)\n\n# New Type Solver\r\n\r\n- Implement bidirectional type inference for higher order functions so\r\nthat we can provide a more precise type improving the autocomplete's\r\nhuman factors.\r\n- We seal all tables, so we changed the stringification to make it a\r\nlittle lighter on users.\r\n- Fixed a case of array-out-of-bound access.\r\n- Type families no longer depends on `TxnLog` and `Unifier`.\r\n- Type refinements now waits until the free types are sufficiently\r\nsolved.\r\n\r\n# Native Code Generation\r\n\r\n- Remove cached slot lookup for `executeSETTABLEKS` function because it\r\nis a fallback in the event of a cache miss, making the cached slot\r\nlookup redundant.\r\n- Optimized repeated array lookups, e.g. `a[3]` in `a[3] = a[3] / 2` is\r\ndone once.\r\n\r\n# Misc\r\n\r\n- On some platforms, it is necessary to use `gmtime_s` with the\r\narguments reversed to get the current time. You can now define\r\n`DOCTEST_CONFIG_USE_GMTIME_S` to build and run unit tests on those\r\nplatforms.\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>",
            "commit_timestamp": 1696036385.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696349044.297307,
            "elapsed_time": 437.4086470603943,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "225a4a08702f39163ad09d2d9af858bef46c87cc",
            "commit_message": "Update compatibility.md (#1059)\n\nAdd a note about Lua 5.3 change to semantics of __eq metamethod.\r\n\r\nWe currently do not plan to implement this as this breaks backwards\r\ncompatibility and makes these operators harder to reason about from the\r\ntype checking perspective.\r\n\r\nFixes #1051.",
            "commit_timestamp": 1696343988.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696363440.282477,
            "elapsed_time": 436.51884865760803,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "225a4a08702f39163ad09d2d9af858bef46c87cc",
            "commit_message": "Update compatibility.md (#1059)\n\nAdd a note about Lua 5.3 change to semantics of __eq metamethod.\r\n\r\nWe currently do not plan to implement this as this breaks backwards\r\ncompatibility and makes these operators harder to reason about from the\r\ntype checking perspective.\r\n\r\nFixes #1051.",
            "commit_timestamp": 1696343988.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696377889.016399,
            "elapsed_time": 347.68216848373413,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "225a4a08702f39163ad09d2d9af858bef46c87cc",
            "commit_message": "Update compatibility.md (#1059)\n\nAdd a note about Lua 5.3 change to semantics of __eq metamethod.\r\n\r\nWe currently do not plan to implement this as this breaks backwards\r\ncompatibility and makes these operators harder to reason about from the\r\ntype checking perspective.\r\n\r\nFixes #1051.",
            "commit_timestamp": 1696343988.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696392235.315079,
            "elapsed_time": 356.9053716659546,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "225a4a08702f39163ad09d2d9af858bef46c87cc",
            "commit_message": "Update compatibility.md (#1059)\n\nAdd a note about Lua 5.3 change to semantics of __eq metamethod.\r\n\r\nWe currently do not plan to implement this as this breaks backwards\r\ncompatibility and makes these operators harder to reason about from the\r\ntype checking perspective.\r\n\r\nFixes #1051.",
            "commit_timestamp": 1696343988.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696406594.218128,
            "elapsed_time": 344.7554340362549,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "225a4a08702f39163ad09d2d9af858bef46c87cc",
            "commit_message": "Update compatibility.md (#1059)\n\nAdd a note about Lua 5.3 change to semantics of __eq metamethod.\r\n\r\nWe currently do not plan to implement this as this breaks backwards\r\ncompatibility and makes these operators harder to reason about from the\r\ntype checking perspective.\r\n\r\nFixes #1051.",
            "commit_timestamp": 1696343988.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696421067.859836,
            "elapsed_time": 484.2478413581848,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "225a4a08702f39163ad09d2d9af858bef46c87cc",
            "commit_message": "Update compatibility.md (#1059)\n\nAdd a note about Lua 5.3 change to semantics of __eq metamethod.\r\n\r\nWe currently do not plan to implement this as this breaks backwards\r\ncompatibility and makes these operators harder to reason about from the\r\ntype checking perspective.\r\n\r\nFixes #1051.",
            "commit_timestamp": 1696343988.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696435412.211486,
            "elapsed_time": 408.9125089645386,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "225a4a08702f39163ad09d2d9af858bef46c87cc",
            "commit_message": "Update compatibility.md (#1059)\n\nAdd a note about Lua 5.3 change to semantics of __eq metamethod.\r\n\r\nWe currently do not plan to implement this as this breaks backwards\r\ncompatibility and makes these operators harder to reason about from the\r\ntype checking perspective.\r\n\r\nFixes #1051.",
            "commit_timestamp": 1696343988.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696449854.71054,
            "elapsed_time": 433.788804769516,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "225a4a08702f39163ad09d2d9af858bef46c87cc",
            "commit_message": "Update compatibility.md (#1059)\n\nAdd a note about Lua 5.3 change to semantics of __eq metamethod.\r\n\r\nWe currently do not plan to implement this as this breaks backwards\r\ncompatibility and makes these operators harder to reason about from the\r\ntype checking perspective.\r\n\r\nFixes #1051.",
            "commit_timestamp": 1696343988.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696464281.434792,
            "elapsed_time": 347.90947794914246,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "225a4a08702f39163ad09d2d9af858bef46c87cc",
            "commit_message": "Update compatibility.md (#1059)\n\nAdd a note about Lua 5.3 change to semantics of __eq metamethod.\r\n\r\nWe currently do not plan to implement this as this breaks backwards\r\ncompatibility and makes these operators harder to reason about from the\r\ntype checking perspective.\r\n\r\nFixes #1051.",
            "commit_timestamp": 1696343988.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696478612.726897,
            "elapsed_time": 410.19104766845703,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "225a4a08702f39163ad09d2d9af858bef46c87cc",
            "commit_message": "Update compatibility.md (#1059)\n\nAdd a note about Lua 5.3 change to semantics of __eq metamethod.\r\n\r\nWe currently do not plan to implement this as this breaks backwards\r\ncompatibility and makes these operators harder to reason about from the\r\ntype checking perspective.\r\n\r\nFixes #1051.",
            "commit_timestamp": 1696343988.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696493011.73383,
            "elapsed_time": 350.7931740283966,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "225a4a08702f39163ad09d2d9af858bef46c87cc",
            "commit_message": "Update compatibility.md (#1059)\n\nAdd a note about Lua 5.3 change to semantics of __eq metamethod.\r\n\r\nWe currently do not plan to implement this as this breaks backwards\r\ncompatibility and makes these operators harder to reason about from the\r\ntype checking perspective.\r\n\r\nFixes #1051.",
            "commit_timestamp": 1696343988.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696507426.200623,
            "elapsed_time": 345.2058570384979,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "225a4a08702f39163ad09d2d9af858bef46c87cc",
            "commit_message": "Update compatibility.md (#1059)\n\nAdd a note about Lua 5.3 change to semantics of __eq metamethod.\r\n\r\nWe currently do not plan to implement this as this breaks backwards\r\ncompatibility and makes these operators harder to reason about from the\r\ntype checking perspective.\r\n\r\nFixes #1051.",
            "commit_timestamp": 1696343988.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696521840.029283,
            "elapsed_time": 413.46258640289307,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "225a4a08702f39163ad09d2d9af858bef46c87cc",
            "commit_message": "Update compatibility.md (#1059)\n\nAdd a note about Lua 5.3 change to semantics of __eq metamethod.\r\n\r\nWe currently do not plan to implement this as this breaks backwards\r\ncompatibility and makes these operators harder to reason about from the\r\ntype checking perspective.\r\n\r\nFixes #1051.",
            "commit_timestamp": 1696343988.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696536186.945674,
            "elapsed_time": 355.22831439971924,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "225a4a08702f39163ad09d2d9af858bef46c87cc",
            "commit_message": "Update compatibility.md (#1059)\n\nAdd a note about Lua 5.3 change to semantics of __eq metamethod.\r\n\r\nWe currently do not plan to implement this as this breaks backwards\r\ncompatibility and makes these operators harder to reason about from the\r\ntype checking perspective.\r\n\r\nFixes #1051.",
            "commit_timestamp": 1696343988.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696550693.93888,
            "elapsed_time": 347.5444905757904,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "225a4a08702f39163ad09d2d9af858bef46c87cc",
            "commit_message": "Update compatibility.md (#1059)\n\nAdd a note about Lua 5.3 change to semantics of __eq metamethod.\r\n\r\nWe currently do not plan to implement this as this breaks backwards\r\ncompatibility and makes these operators harder to reason about from the\r\ntype checking perspective.\r\n\r\nFixes #1051.",
            "commit_timestamp": 1696343988.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696565069.902538,
            "elapsed_time": 380.7378280162811,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "225a4a08702f39163ad09d2d9af858bef46c87cc",
            "commit_message": "Update compatibility.md (#1059)\n\nAdd a note about Lua 5.3 change to semantics of __eq metamethod.\r\n\r\nWe currently do not plan to implement this as this breaks backwards\r\ncompatibility and makes these operators harder to reason about from the\r\ntype checking perspective.\r\n\r\nFixes #1051.",
            "commit_timestamp": 1696343988.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696579455.188131,
            "elapsed_time": 357.6017007827759,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "225a4a08702f39163ad09d2d9af858bef46c87cc",
            "commit_message": "Update compatibility.md (#1059)\n\nAdd a note about Lua 5.3 change to semantics of __eq metamethod.\r\n\r\nWe currently do not plan to implement this as this breaks backwards\r\ncompatibility and makes these operators harder to reason about from the\r\ntype checking perspective.\r\n\r\nFixes #1051.",
            "commit_timestamp": 1696343988.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696593845.69296,
            "elapsed_time": 412.7097370624542,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "225a4a08702f39163ad09d2d9af858bef46c87cc",
            "commit_message": "Update compatibility.md (#1059)\n\nAdd a note about Lua 5.3 change to semantics of __eq metamethod.\r\n\r\nWe currently do not plan to implement this as this breaks backwards\r\ncompatibility and makes these operators harder to reason about from the\r\ntype checking perspective.\r\n\r\nFixes #1051.",
            "commit_timestamp": 1696343988.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696608260.787853,
            "elapsed_time": 405.78230476379395,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "225a4a08702f39163ad09d2d9af858bef46c87cc",
            "commit_message": "Update compatibility.md (#1059)\n\nAdd a note about Lua 5.3 change to semantics of __eq metamethod.\r\n\r\nWe currently do not plan to implement this as this breaks backwards\r\ncompatibility and makes these operators harder to reason about from the\r\ntype checking perspective.\r\n\r\nFixes #1051.",
            "commit_timestamp": 1696343988.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696622614.255191,
            "elapsed_time": 357.4019265174866,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "36e0e6471567eb0d41d80e54b73db791efbb808a",
            "commit_message": "Sync to upstream/release/598 (#1063)\n\n* Include `windows.h` rather than `Windows.h` to make things compile on\r\nMinGW.\r\n* Custom implementation of timegm/os.time for all platforms\r\n* Disable builtin constant folding when getfenv/setfenv are used\r\n* Fixes https://github.com/Roblox/luau/issues/1042\r\n* Fixes https://github.com/Roblox/luau/issues/1043\r\n\r\nNew Type Checker\r\n\r\n* Initial work toward type states.\r\n* Rework most overloadable operators to use type families.\r\n* Initial work toward our new nonstrict mode.\r\n\r\n\r\nNative Codegen\r\n\r\n* Fix native code generation for dead loops\r\n* Annotate top-level functions as cold\r\n* Slightly smaller/faster x64 Luau calls\r\n* emitInstCall used to not set savedpc itself, but now it does for\r\nconsistency with all other implementations\r\n* Implement cmov support for X64\r\n* Fix assertion in luau-compile when module is empty\r\n* Optimize A64 calls at some code size cost\r\n* Inline constant array index offset into the load/store instruction\r\n* Increase x64 spill slots from 5 to 13\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>",
            "commit_timestamp": 1696618952.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696637090.658644,
            "elapsed_time": 359.3039243221283,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "36e0e6471567eb0d41d80e54b73db791efbb808a",
            "commit_message": "Sync to upstream/release/598 (#1063)\n\n* Include `windows.h` rather than `Windows.h` to make things compile on\r\nMinGW.\r\n* Custom implementation of timegm/os.time for all platforms\r\n* Disable builtin constant folding when getfenv/setfenv are used\r\n* Fixes https://github.com/Roblox/luau/issues/1042\r\n* Fixes https://github.com/Roblox/luau/issues/1043\r\n\r\nNew Type Checker\r\n\r\n* Initial work toward type states.\r\n* Rework most overloadable operators to use type families.\r\n* Initial work toward our new nonstrict mode.\r\n\r\n\r\nNative Codegen\r\n\r\n* Fix native code generation for dead loops\r\n* Annotate top-level functions as cold\r\n* Slightly smaller/faster x64 Luau calls\r\n* emitInstCall used to not set savedpc itself, but now it does for\r\nconsistency with all other implementations\r\n* Implement cmov support for X64\r\n* Fix assertion in luau-compile when module is empty\r\n* Optimize A64 calls at some code size cost\r\n* Inline constant array index offset into the load/store instruction\r\n* Increase x64 spill slots from 5 to 13\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>",
            "commit_timestamp": 1696618952.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696651407.176771,
            "elapsed_time": 437.09397983551025,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "36e0e6471567eb0d41d80e54b73db791efbb808a",
            "commit_message": "Sync to upstream/release/598 (#1063)\n\n* Include `windows.h` rather than `Windows.h` to make things compile on\r\nMinGW.\r\n* Custom implementation of timegm/os.time for all platforms\r\n* Disable builtin constant folding when getfenv/setfenv are used\r\n* Fixes https://github.com/Roblox/luau/issues/1042\r\n* Fixes https://github.com/Roblox/luau/issues/1043\r\n\r\nNew Type Checker\r\n\r\n* Initial work toward type states.\r\n* Rework most overloadable operators to use type families.\r\n* Initial work toward our new nonstrict mode.\r\n\r\n\r\nNative Codegen\r\n\r\n* Fix native code generation for dead loops\r\n* Annotate top-level functions as cold\r\n* Slightly smaller/faster x64 Luau calls\r\n* emitInstCall used to not set savedpc itself, but now it does for\r\nconsistency with all other implementations\r\n* Implement cmov support for X64\r\n* Fix assertion in luau-compile when module is empty\r\n* Optimize A64 calls at some code size cost\r\n* Inline constant array index offset into the load/store instruction\r\n* Increase x64 spill slots from 5 to 13\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>",
            "commit_timestamp": 1696618952.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696665788.417331,
            "elapsed_time": 345.0250039100647,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "36e0e6471567eb0d41d80e54b73db791efbb808a",
            "commit_message": "Sync to upstream/release/598 (#1063)\n\n* Include `windows.h` rather than `Windows.h` to make things compile on\r\nMinGW.\r\n* Custom implementation of timegm/os.time for all platforms\r\n* Disable builtin constant folding when getfenv/setfenv are used\r\n* Fixes https://github.com/Roblox/luau/issues/1042\r\n* Fixes https://github.com/Roblox/luau/issues/1043\r\n\r\nNew Type Checker\r\n\r\n* Initial work toward type states.\r\n* Rework most overloadable operators to use type families.\r\n* Initial work toward our new nonstrict mode.\r\n\r\n\r\nNative Codegen\r\n\r\n* Fix native code generation for dead loops\r\n* Annotate top-level functions as cold\r\n* Slightly smaller/faster x64 Luau calls\r\n* emitInstCall used to not set savedpc itself, but now it does for\r\nconsistency with all other implementations\r\n* Implement cmov support for X64\r\n* Fix assertion in luau-compile when module is empty\r\n* Optimize A64 calls at some code size cost\r\n* Inline constant array index offset into the load/store instruction\r\n* Increase x64 spill slots from 5 to 13\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>",
            "commit_timestamp": 1696618952.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696679317.053668,
            "elapsed_time": 351.7894904613495,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "36e0e6471567eb0d41d80e54b73db791efbb808a",
            "commit_message": "Sync to upstream/release/598 (#1063)\n\n* Include `windows.h` rather than `Windows.h` to make things compile on\r\nMinGW.\r\n* Custom implementation of timegm/os.time for all platforms\r\n* Disable builtin constant folding when getfenv/setfenv are used\r\n* Fixes https://github.com/Roblox/luau/issues/1042\r\n* Fixes https://github.com/Roblox/luau/issues/1043\r\n\r\nNew Type Checker\r\n\r\n* Initial work toward type states.\r\n* Rework most overloadable operators to use type families.\r\n* Initial work toward our new nonstrict mode.\r\n\r\n\r\nNative Codegen\r\n\r\n* Fix native code generation for dead loops\r\n* Annotate top-level functions as cold\r\n* Slightly smaller/faster x64 Luau calls\r\n* emitInstCall used to not set savedpc itself, but now it does for\r\nconsistency with all other implementations\r\n* Implement cmov support for X64\r\n* Fix assertion in luau-compile when module is empty\r\n* Optimize A64 calls at some code size cost\r\n* Inline constant array index offset into the load/store instruction\r\n* Increase x64 spill slots from 5 to 13\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>",
            "commit_timestamp": 1696618952.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696678550.289183,
            "elapsed_time": 415.25157260894775,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "36e0e6471567eb0d41d80e54b73db791efbb808a",
            "commit_message": "Sync to upstream/release/598 (#1063)\n\n* Include `windows.h` rather than `Windows.h` to make things compile on\r\nMinGW.\r\n* Custom implementation of timegm/os.time for all platforms\r\n* Disable builtin constant folding when getfenv/setfenv are used\r\n* Fixes https://github.com/Roblox/luau/issues/1042\r\n* Fixes https://github.com/Roblox/luau/issues/1043\r\n\r\nNew Type Checker\r\n\r\n* Initial work toward type states.\r\n* Rework most overloadable operators to use type families.\r\n* Initial work toward our new nonstrict mode.\r\n\r\n\r\nNative Codegen\r\n\r\n* Fix native code generation for dead loops\r\n* Annotate top-level functions as cold\r\n* Slightly smaller/faster x64 Luau calls\r\n* emitInstCall used to not set savedpc itself, but now it does for\r\nconsistency with all other implementations\r\n* Implement cmov support for X64\r\n* Fix assertion in luau-compile when module is empty\r\n* Optimize A64 calls at some code size cost\r\n* Inline constant array index offset into the load/store instruction\r\n* Increase x64 spill slots from 5 to 13\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>",
            "commit_timestamp": 1696618952.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696680163.806365,
            "elapsed_time": 382.5924594402313,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "36e0e6471567eb0d41d80e54b73db791efbb808a",
            "commit_message": "Sync to upstream/release/598 (#1063)\n\n* Include `windows.h` rather than `Windows.h` to make things compile on\r\nMinGW.\r\n* Custom implementation of timegm/os.time for all platforms\r\n* Disable builtin constant folding when getfenv/setfenv are used\r\n* Fixes https://github.com/Roblox/luau/issues/1042\r\n* Fixes https://github.com/Roblox/luau/issues/1043\r\n\r\nNew Type Checker\r\n\r\n* Initial work toward type states.\r\n* Rework most overloadable operators to use type families.\r\n* Initial work toward our new nonstrict mode.\r\n\r\n\r\nNative Codegen\r\n\r\n* Fix native code generation for dead loops\r\n* Annotate top-level functions as cold\r\n* Slightly smaller/faster x64 Luau calls\r\n* emitInstCall used to not set savedpc itself, but now it does for\r\nconsistency with all other implementations\r\n* Implement cmov support for X64\r\n* Fix assertion in luau-compile when module is empty\r\n* Optimize A64 calls at some code size cost\r\n* Inline constant array index offset into the load/store instruction\r\n* Increase x64 spill slots from 5 to 13\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>",
            "commit_timestamp": 1696618952.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696694594.681575,
            "elapsed_time": 384.7918062210083,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "36e0e6471567eb0d41d80e54b73db791efbb808a",
            "commit_message": "Sync to upstream/release/598 (#1063)\n\n* Include `windows.h` rather than `Windows.h` to make things compile on\r\nMinGW.\r\n* Custom implementation of timegm/os.time for all platforms\r\n* Disable builtin constant folding when getfenv/setfenv are used\r\n* Fixes https://github.com/Roblox/luau/issues/1042\r\n* Fixes https://github.com/Roblox/luau/issues/1043\r\n\r\nNew Type Checker\r\n\r\n* Initial work toward type states.\r\n* Rework most overloadable operators to use type families.\r\n* Initial work toward our new nonstrict mode.\r\n\r\n\r\nNative Codegen\r\n\r\n* Fix native code generation for dead loops\r\n* Annotate top-level functions as cold\r\n* Slightly smaller/faster x64 Luau calls\r\n* emitInstCall used to not set savedpc itself, but now it does for\r\nconsistency with all other implementations\r\n* Implement cmov support for X64\r\n* Fix assertion in luau-compile when module is empty\r\n* Optimize A64 calls at some code size cost\r\n* Inline constant array index offset into the load/store instruction\r\n* Increase x64 spill slots from 5 to 13\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>",
            "commit_timestamp": 1696618952.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696708980.863974,
            "elapsed_time": 398.31527066230774,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "36e0e6471567eb0d41d80e54b73db791efbb808a",
            "commit_message": "Sync to upstream/release/598 (#1063)\n\n* Include `windows.h` rather than `Windows.h` to make things compile on\r\nMinGW.\r\n* Custom implementation of timegm/os.time for all platforms\r\n* Disable builtin constant folding when getfenv/setfenv are used\r\n* Fixes https://github.com/Roblox/luau/issues/1042\r\n* Fixes https://github.com/Roblox/luau/issues/1043\r\n\r\nNew Type Checker\r\n\r\n* Initial work toward type states.\r\n* Rework most overloadable operators to use type families.\r\n* Initial work toward our new nonstrict mode.\r\n\r\n\r\nNative Codegen\r\n\r\n* Fix native code generation for dead loops\r\n* Annotate top-level functions as cold\r\n* Slightly smaller/faster x64 Luau calls\r\n* emitInstCall used to not set savedpc itself, but now it does for\r\nconsistency with all other implementations\r\n* Implement cmov support for X64\r\n* Fix assertion in luau-compile when module is empty\r\n* Optimize A64 calls at some code size cost\r\n* Inline constant array index offset into the load/store instruction\r\n* Increase x64 spill slots from 5 to 13\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>",
            "commit_timestamp": 1696618952.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696723497.346493,
            "elapsed_time": 422.2598674297333,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "36e0e6471567eb0d41d80e54b73db791efbb808a",
            "commit_message": "Sync to upstream/release/598 (#1063)\n\n* Include `windows.h` rather than `Windows.h` to make things compile on\r\nMinGW.\r\n* Custom implementation of timegm/os.time for all platforms\r\n* Disable builtin constant folding when getfenv/setfenv are used\r\n* Fixes https://github.com/Roblox/luau/issues/1042\r\n* Fixes https://github.com/Roblox/luau/issues/1043\r\n\r\nNew Type Checker\r\n\r\n* Initial work toward type states.\r\n* Rework most overloadable operators to use type families.\r\n* Initial work toward our new nonstrict mode.\r\n\r\n\r\nNative Codegen\r\n\r\n* Fix native code generation for dead loops\r\n* Annotate top-level functions as cold\r\n* Slightly smaller/faster x64 Luau calls\r\n* emitInstCall used to not set savedpc itself, but now it does for\r\nconsistency with all other implementations\r\n* Implement cmov support for X64\r\n* Fix assertion in luau-compile when module is empty\r\n* Optimize A64 calls at some code size cost\r\n* Inline constant array index offset into the load/store instruction\r\n* Increase x64 spill slots from 5 to 13\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>",
            "commit_timestamp": 1696618952.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696737827.378652,
            "elapsed_time": 378.75066113471985,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "36e0e6471567eb0d41d80e54b73db791efbb808a",
            "commit_message": "Sync to upstream/release/598 (#1063)\n\n* Include `windows.h` rather than `Windows.h` to make things compile on\r\nMinGW.\r\n* Custom implementation of timegm/os.time for all platforms\r\n* Disable builtin constant folding when getfenv/setfenv are used\r\n* Fixes https://github.com/Roblox/luau/issues/1042\r\n* Fixes https://github.com/Roblox/luau/issues/1043\r\n\r\nNew Type Checker\r\n\r\n* Initial work toward type states.\r\n* Rework most overloadable operators to use type families.\r\n* Initial work toward our new nonstrict mode.\r\n\r\n\r\nNative Codegen\r\n\r\n* Fix native code generation for dead loops\r\n* Annotate top-level functions as cold\r\n* Slightly smaller/faster x64 Luau calls\r\n* emitInstCall used to not set savedpc itself, but now it does for\r\nconsistency with all other implementations\r\n* Implement cmov support for X64\r\n* Fix assertion in luau-compile when module is empty\r\n* Optimize A64 calls at some code size cost\r\n* Inline constant array index offset into the load/store instruction\r\n* Increase x64 spill slots from 5 to 13\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>",
            "commit_timestamp": 1696618952.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696752187.881446,
            "elapsed_time": 453.75820994377136,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "36e0e6471567eb0d41d80e54b73db791efbb808a",
            "commit_message": "Sync to upstream/release/598 (#1063)\n\n* Include `windows.h` rather than `Windows.h` to make things compile on\r\nMinGW.\r\n* Custom implementation of timegm/os.time for all platforms\r\n* Disable builtin constant folding when getfenv/setfenv are used\r\n* Fixes https://github.com/Roblox/luau/issues/1042\r\n* Fixes https://github.com/Roblox/luau/issues/1043\r\n\r\nNew Type Checker\r\n\r\n* Initial work toward type states.\r\n* Rework most overloadable operators to use type families.\r\n* Initial work toward our new nonstrict mode.\r\n\r\n\r\nNative Codegen\r\n\r\n* Fix native code generation for dead loops\r\n* Annotate top-level functions as cold\r\n* Slightly smaller/faster x64 Luau calls\r\n* emitInstCall used to not set savedpc itself, but now it does for\r\nconsistency with all other implementations\r\n* Implement cmov support for X64\r\n* Fix assertion in luau-compile when module is empty\r\n* Optimize A64 calls at some code size cost\r\n* Inline constant array index offset into the load/store instruction\r\n* Increase x64 spill slots from 5 to 13\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>",
            "commit_timestamp": 1696618952.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696766612.298593,
            "elapsed_time": 362.1977570056915,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "36e0e6471567eb0d41d80e54b73db791efbb808a",
            "commit_message": "Sync to upstream/release/598 (#1063)\n\n* Include `windows.h` rather than `Windows.h` to make things compile on\r\nMinGW.\r\n* Custom implementation of timegm/os.time for all platforms\r\n* Disable builtin constant folding when getfenv/setfenv are used\r\n* Fixes https://github.com/Roblox/luau/issues/1042\r\n* Fixes https://github.com/Roblox/luau/issues/1043\r\n\r\nNew Type Checker\r\n\r\n* Initial work toward type states.\r\n* Rework most overloadable operators to use type families.\r\n* Initial work toward our new nonstrict mode.\r\n\r\n\r\nNative Codegen\r\n\r\n* Fix native code generation for dead loops\r\n* Annotate top-level functions as cold\r\n* Slightly smaller/faster x64 Luau calls\r\n* emitInstCall used to not set savedpc itself, but now it does for\r\nconsistency with all other implementations\r\n* Implement cmov support for X64\r\n* Fix assertion in luau-compile when module is empty\r\n* Optimize A64 calls at some code size cost\r\n* Inline constant array index offset into the load/store instruction\r\n* Increase x64 spill slots from 5 to 13\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>",
            "commit_timestamp": 1696618952.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696795392.07254,
            "elapsed_time": 364.74066710472107,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "36e0e6471567eb0d41d80e54b73db791efbb808a",
            "commit_message": "Sync to upstream/release/598 (#1063)\n\n* Include `windows.h` rather than `Windows.h` to make things compile on\r\nMinGW.\r\n* Custom implementation of timegm/os.time for all platforms\r\n* Disable builtin constant folding when getfenv/setfenv are used\r\n* Fixes https://github.com/Roblox/luau/issues/1042\r\n* Fixes https://github.com/Roblox/luau/issues/1043\r\n\r\nNew Type Checker\r\n\r\n* Initial work toward type states.\r\n* Rework most overloadable operators to use type families.\r\n* Initial work toward our new nonstrict mode.\r\n\r\n\r\nNative Codegen\r\n\r\n* Fix native code generation for dead loops\r\n* Annotate top-level functions as cold\r\n* Slightly smaller/faster x64 Luau calls\r\n* emitInstCall used to not set savedpc itself, but now it does for\r\nconsistency with all other implementations\r\n* Implement cmov support for X64\r\n* Fix assertion in luau-compile when module is empty\r\n* Optimize A64 calls at some code size cost\r\n* Inline constant array index offset into the load/store instruction\r\n* Increase x64 spill slots from 5 to 13\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>",
            "commit_timestamp": 1696618952.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696809925.807933,
            "elapsed_time": 362.89351415634155,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "36e0e6471567eb0d41d80e54b73db791efbb808a",
            "commit_message": "Sync to upstream/release/598 (#1063)\n\n* Include `windows.h` rather than `Windows.h` to make things compile on\r\nMinGW.\r\n* Custom implementation of timegm/os.time for all platforms\r\n* Disable builtin constant folding when getfenv/setfenv are used\r\n* Fixes https://github.com/Roblox/luau/issues/1042\r\n* Fixes https://github.com/Roblox/luau/issues/1043\r\n\r\nNew Type Checker\r\n\r\n* Initial work toward type states.\r\n* Rework most overloadable operators to use type families.\r\n* Initial work toward our new nonstrict mode.\r\n\r\n\r\nNative Codegen\r\n\r\n* Fix native code generation for dead loops\r\n* Annotate top-level functions as cold\r\n* Slightly smaller/faster x64 Luau calls\r\n* emitInstCall used to not set savedpc itself, but now it does for\r\nconsistency with all other implementations\r\n* Implement cmov support for X64\r\n* Fix assertion in luau-compile when module is empty\r\n* Optimize A64 calls at some code size cost\r\n* Inline constant array index offset into the load/store instruction\r\n* Increase x64 spill slots from 5 to 13\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>",
            "commit_timestamp": 1696618952.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696824217.08946,
            "elapsed_time": 364.53956937789917,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "36e0e6471567eb0d41d80e54b73db791efbb808a",
            "commit_message": "Sync to upstream/release/598 (#1063)\n\n* Include `windows.h` rather than `Windows.h` to make things compile on\r\nMinGW.\r\n* Custom implementation of timegm/os.time for all platforms\r\n* Disable builtin constant folding when getfenv/setfenv are used\r\n* Fixes https://github.com/Roblox/luau/issues/1042\r\n* Fixes https://github.com/Roblox/luau/issues/1043\r\n\r\nNew Type Checker\r\n\r\n* Initial work toward type states.\r\n* Rework most overloadable operators to use type families.\r\n* Initial work toward our new nonstrict mode.\r\n\r\n\r\nNative Codegen\r\n\r\n* Fix native code generation for dead loops\r\n* Annotate top-level functions as cold\r\n* Slightly smaller/faster x64 Luau calls\r\n* emitInstCall used to not set savedpc itself, but now it does for\r\nconsistency with all other implementations\r\n* Implement cmov support for X64\r\n* Fix assertion in luau-compile when module is empty\r\n* Optimize A64 calls at some code size cost\r\n* Inline constant array index offset into the load/store instruction\r\n* Increase x64 spill slots from 5 to 13\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>",
            "commit_timestamp": 1696618952.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696838639.07331,
            "elapsed_time": 451.8208107948303,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "36e0e6471567eb0d41d80e54b73db791efbb808a",
            "commit_message": "Sync to upstream/release/598 (#1063)\n\n* Include `windows.h` rather than `Windows.h` to make things compile on\r\nMinGW.\r\n* Custom implementation of timegm/os.time for all platforms\r\n* Disable builtin constant folding when getfenv/setfenv are used\r\n* Fixes https://github.com/Roblox/luau/issues/1042\r\n* Fixes https://github.com/Roblox/luau/issues/1043\r\n\r\nNew Type Checker\r\n\r\n* Initial work toward type states.\r\n* Rework most overloadable operators to use type families.\r\n* Initial work toward our new nonstrict mode.\r\n\r\n\r\nNative Codegen\r\n\r\n* Fix native code generation for dead loops\r\n* Annotate top-level functions as cold\r\n* Slightly smaller/faster x64 Luau calls\r\n* emitInstCall used to not set savedpc itself, but now it does for\r\nconsistency with all other implementations\r\n* Implement cmov support for X64\r\n* Fix assertion in luau-compile when module is empty\r\n* Optimize A64 calls at some code size cost\r\n* Inline constant array index offset into the load/store instruction\r\n* Increase x64 spill slots from 5 to 13\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>",
            "commit_timestamp": 1696618952.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696853009.601146,
            "elapsed_time": 350.76537680625916,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "36e0e6471567eb0d41d80e54b73db791efbb808a",
            "commit_message": "Sync to upstream/release/598 (#1063)\n\n* Include `windows.h` rather than `Windows.h` to make things compile on\r\nMinGW.\r\n* Custom implementation of timegm/os.time for all platforms\r\n* Disable builtin constant folding when getfenv/setfenv are used\r\n* Fixes https://github.com/Roblox/luau/issues/1042\r\n* Fixes https://github.com/Roblox/luau/issues/1043\r\n\r\nNew Type Checker\r\n\r\n* Initial work toward type states.\r\n* Rework most overloadable operators to use type families.\r\n* Initial work toward our new nonstrict mode.\r\n\r\n\r\nNative Codegen\r\n\r\n* Fix native code generation for dead loops\r\n* Annotate top-level functions as cold\r\n* Slightly smaller/faster x64 Luau calls\r\n* emitInstCall used to not set savedpc itself, but now it does for\r\nconsistency with all other implementations\r\n* Implement cmov support for X64\r\n* Fix assertion in luau-compile when module is empty\r\n* Optimize A64 calls at some code size cost\r\n* Inline constant array index offset into the load/store instruction\r\n* Increase x64 spill slots from 5 to 13\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>",
            "commit_timestamp": 1696618952.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696867422.111925,
            "elapsed_time": 371.16346883773804,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "36e0e6471567eb0d41d80e54b73db791efbb808a",
            "commit_message": "Sync to upstream/release/598 (#1063)\n\n* Include `windows.h` rather than `Windows.h` to make things compile on\r\nMinGW.\r\n* Custom implementation of timegm/os.time for all platforms\r\n* Disable builtin constant folding when getfenv/setfenv are used\r\n* Fixes https://github.com/Roblox/luau/issues/1042\r\n* Fixes https://github.com/Roblox/luau/issues/1043\r\n\r\nNew Type Checker\r\n\r\n* Initial work toward type states.\r\n* Rework most overloadable operators to use type families.\r\n* Initial work toward our new nonstrict mode.\r\n\r\n\r\nNative Codegen\r\n\r\n* Fix native code generation for dead loops\r\n* Annotate top-level functions as cold\r\n* Slightly smaller/faster x64 Luau calls\r\n* emitInstCall used to not set savedpc itself, but now it does for\r\nconsistency with all other implementations\r\n* Implement cmov support for X64\r\n* Fix assertion in luau-compile when module is empty\r\n* Optimize A64 calls at some code size cost\r\n* Inline constant array index offset into the load/store instruction\r\n* Increase x64 spill slots from 5 to 13\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>",
            "commit_timestamp": 1696618952.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696881801.830219,
            "elapsed_time": 371.77996587753296,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "36e0e6471567eb0d41d80e54b73db791efbb808a",
            "commit_message": "Sync to upstream/release/598 (#1063)\n\n* Include `windows.h` rather than `Windows.h` to make things compile on\r\nMinGW.\r\n* Custom implementation of timegm/os.time for all platforms\r\n* Disable builtin constant folding when getfenv/setfenv are used\r\n* Fixes https://github.com/Roblox/luau/issues/1042\r\n* Fixes https://github.com/Roblox/luau/issues/1043\r\n\r\nNew Type Checker\r\n\r\n* Initial work toward type states.\r\n* Rework most overloadable operators to use type families.\r\n* Initial work toward our new nonstrict mode.\r\n\r\n\r\nNative Codegen\r\n\r\n* Fix native code generation for dead loops\r\n* Annotate top-level functions as cold\r\n* Slightly smaller/faster x64 Luau calls\r\n* emitInstCall used to not set savedpc itself, but now it does for\r\nconsistency with all other implementations\r\n* Implement cmov support for X64\r\n* Fix assertion in luau-compile when module is empty\r\n* Optimize A64 calls at some code size cost\r\n* Inline constant array index offset into the load/store instruction\r\n* Increase x64 spill slots from 5 to 13\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>",
            "commit_timestamp": 1696618952.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696896282.569351,
            "elapsed_time": 450.48068356513977,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "497dd1bad412dfd63a0219f5a7ccd36503a41efb",
            "commit_message": "Incorrectness 2024 paper (#1048)\n\n",
            "commit_timestamp": 1696896031.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696910693.108001,
            "elapsed_time": 386.37069439888,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "497dd1bad412dfd63a0219f5a7ccd36503a41efb",
            "commit_message": "Incorrectness 2024 paper (#1048)\n\n",
            "commit_timestamp": 1696896031.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696925017.355571,
            "elapsed_time": 360.04364228248596,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "497dd1bad412dfd63a0219f5a7ccd36503a41efb",
            "commit_message": "Incorrectness 2024 paper (#1048)\n\n",
            "commit_timestamp": 1696896031.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696939475.122826,
            "elapsed_time": 450.53253984451294,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "497dd1bad412dfd63a0219f5a7ccd36503a41efb",
            "commit_message": "Incorrectness 2024 paper (#1048)\n\n",
            "commit_timestamp": 1696896031.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696953820.783376,
            "elapsed_time": 416.9843373298645,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "497dd1bad412dfd63a0219f5a7ccd36503a41efb",
            "commit_message": "Incorrectness 2024 paper (#1048)\n\n",
            "commit_timestamp": 1696896031.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696968205.589052,
            "elapsed_time": 423.8817720413208,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "497dd1bad412dfd63a0219f5a7ccd36503a41efb",
            "commit_message": "Incorrectness 2024 paper (#1048)\n\n",
            "commit_timestamp": 1696896031.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696982670.688408,
            "elapsed_time": 346.226767539978,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "497dd1bad412dfd63a0219f5a7ccd36503a41efb",
            "commit_message": "Incorrectness 2024 paper (#1048)\n\n",
            "commit_timestamp": 1696896031.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1696997007.025953,
            "elapsed_time": 352.8076078891754,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "497dd1bad412dfd63a0219f5a7ccd36503a41efb",
            "commit_message": "Incorrectness 2024 paper (#1048)\n\n",
            "commit_timestamp": 1696896031.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697011426.527781,
            "elapsed_time": 407.28264594078064,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "497dd1bad412dfd63a0219f5a7ccd36503a41efb",
            "commit_message": "Incorrectness 2024 paper (#1048)\n\n",
            "commit_timestamp": 1696896031.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697025847.535239,
            "elapsed_time": 347.20464968681335,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "497dd1bad412dfd63a0219f5a7ccd36503a41efb",
            "commit_message": "Incorrectness 2024 paper (#1048)\n\n",
            "commit_timestamp": 1696896031.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697040311.300504,
            "elapsed_time": 487.6888027191162,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3d4e99fc6c0b8d17eb1405de0765e054e5511cb7",
            "commit_message": "rfcs: Update status\n\nString interpolation and table.getn/et al deprecation has been live for\na while.\n\ngetfenv/setfenv linter diagnostics is going to ship in the next release,\nso preemptively marking this as Implemented as well.\n",
            "commit_timestamp": 1697038165.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697054652.468429,
            "elapsed_time": 369.9992401599884,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3d4e99fc6c0b8d17eb1405de0765e054e5511cb7",
            "commit_message": "rfcs: Update status\n\nString interpolation and table.getn/et al deprecation has been live for\na while.\n\ngetfenv/setfenv linter diagnostics is going to ship in the next release,\nso preemptively marking this as Implemented as well.\n",
            "commit_timestamp": 1697038165.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697069111.799095,
            "elapsed_time": 405.47976183891296,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3d4e99fc6c0b8d17eb1405de0765e054e5511cb7",
            "commit_message": "rfcs: Update status\n\nString interpolation and table.getn/et al deprecation has been live for\na while.\n\ngetfenv/setfenv linter diagnostics is going to ship in the next release,\nso preemptively marking this as Implemented as well.\n",
            "commit_timestamp": 1697038165.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697083378.662188,
            "elapsed_time": 464.56129002571106,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3d4e99fc6c0b8d17eb1405de0765e054e5511cb7",
            "commit_message": "rfcs: Update status\n\nString interpolation and table.getn/et al deprecation has been live for\na while.\n\ngetfenv/setfenv linter diagnostics is going to ship in the next release,\nso preemptively marking this as Implemented as well.\n",
            "commit_timestamp": 1697038165.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697097824.771767,
            "elapsed_time": 355.7052991390228,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3d4e99fc6c0b8d17eb1405de0765e054e5511cb7",
            "commit_message": "rfcs: Update status\n\nString interpolation and table.getn/et al deprecation has been live for\na while.\n\ngetfenv/setfenv linter diagnostics is going to ship in the next release,\nso preemptively marking this as Implemented as well.\n",
            "commit_timestamp": 1697038165.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697112254.893134,
            "elapsed_time": 376.0098075866699,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "3d4e99fc6c0b8d17eb1405de0765e054e5511cb7",
            "commit_message": "rfcs: Update status\n\nString interpolation and table.getn/et al deprecation has been live for\na while.\n\ngetfenv/setfenv linter diagnostics is going to ship in the next release,\nso preemptively marking this as Implemented as well.\n",
            "commit_timestamp": 1697038165.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697126666.285854,
            "elapsed_time": 434.17356967926025,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "984336448cedccc31a926e69c00d9220196de3e2",
            "commit_message": "Improve POSIX compliance in CLI/FileUtils.cpp (#1064)\n\nSome POSIX platforms, such as Haiku and some BSDs, don't supply DT_*\r\nidentifiers and the corresponding d_type field in stat. This fixes that\r\nand has been tested to still work on 64-bit Linux as well as 64-bit\r\nHaiku.",
            "commit_timestamp": 1697114813.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697141053.832564,
            "elapsed_time": 452.6940839290619,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1173e415ef705dfc66fcc6198e9ed155161fdc6c",
            "commit_message": "Modify the way line breaks are added when printing unions/intersections (#1047)\n\nAdds an option `compositeTypesSingleLineLimit` to control when\r\nunions/intersections are broken up onto multiple lines when printed.\r\nSimple unions/intersections will remain on one line. Default value is\r\nset to `5`.\r\n\r\nI took the liberty to always expand overloaded function intersections on\r\nmultiple lines, as I believe they are best viewed that way, even if\r\ntheres only 2 functions.\r\n\r\nCloses #963",
            "commit_timestamp": 1697126987.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697155488.911033,
            "elapsed_time": 467.44608974456787,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1173e415ef705dfc66fcc6198e9ed155161fdc6c",
            "commit_message": "Modify the way line breaks are added when printing unions/intersections (#1047)\n\nAdds an option `compositeTypesSingleLineLimit` to control when\r\nunions/intersections are broken up onto multiple lines when printed.\r\nSimple unions/intersections will remain on one line. Default value is\r\nset to `5`.\r\n\r\nI took the liberty to always expand overloaded function intersections on\r\nmultiple lines, as I believe they are best viewed that way, even if\r\ntheres only 2 functions.\r\n\r\nCloses #963",
            "commit_timestamp": 1697126987.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697169806.484957,
            "elapsed_time": 445.55773162841797,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1173e415ef705dfc66fcc6198e9ed155161fdc6c",
            "commit_message": "Modify the way line breaks are added when printing unions/intersections (#1047)\n\nAdds an option `compositeTypesSingleLineLimit` to control when\r\nunions/intersections are broken up onto multiple lines when printed.\r\nSimple unions/intersections will remain on one line. Default value is\r\nset to `5`.\r\n\r\nI took the liberty to always expand overloaded function intersections on\r\nmultiple lines, as I believe they are best viewed that way, even if\r\ntheres only 2 functions.\r\n\r\nCloses #963",
            "commit_timestamp": 1697126987.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697184200.369068,
            "elapsed_time": 357.1263573169708,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1173e415ef705dfc66fcc6198e9ed155161fdc6c",
            "commit_message": "Modify the way line breaks are added when printing unions/intersections (#1047)\n\nAdds an option `compositeTypesSingleLineLimit` to control when\r\nunions/intersections are broken up onto multiple lines when printed.\r\nSimple unions/intersections will remain on one line. Default value is\r\nset to `5`.\r\n\r\nI took the liberty to always expand overloaded function intersections on\r\nmultiple lines, as I believe they are best viewed that way, even if\r\ntheres only 2 functions.\r\n\r\nCloses #963",
            "commit_timestamp": 1697126987.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697198580.675237,
            "elapsed_time": 429.17715787887573,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "1173e415ef705dfc66fcc6198e9ed155161fdc6c",
            "commit_message": "Modify the way line breaks are added when printing unions/intersections (#1047)\n\nAdds an option `compositeTypesSingleLineLimit` to control when\r\nunions/intersections are broken up onto multiple lines when printed.\r\nSimple unions/intersections will remain on one line. Default value is\r\nset to `5`.\r\n\r\nI took the liberty to always expand overloaded function intersections on\r\nmultiple lines, as I believe they are best viewed that way, even if\r\ntheres only 2 functions.\r\n\r\nCloses #963",
            "commit_timestamp": 1697126987.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697213072.19511,
            "elapsed_time": 462.21872091293335,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "5c9498493563c32c42a055cbbf9630818757ad27",
            "commit_message": "Add `lua_getallocf` API function (#1068)\n\nThis function matches the corresponding Lua 5.1-5.4 function:\r\n\r\n[`lua_getallocf`](https://www.lua.org/manual/5.4/manual.html#lua_getallocf)\r\nand [source](https://www.lua.org/source/5.4/lapi.c.html#lua_getallocf)\r\n\r\nIt would be useful to get/manipulate auxiliary \"userdata\" pointer that was originally passed to `lua_newstate`.\r\n",
            "commit_timestamp": 1697212053.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697227404.112426,
            "elapsed_time": 371.102988243103,
            "x64": false,
            "actual_files_count": 416,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "5c9498493563c32c42a055cbbf9630818757ad27",
            "commit_message": "Add `lua_getallocf` API function (#1068)\n\nThis function matches the corresponding Lua 5.1-5.4 function:\r\n\r\n[`lua_getallocf`](https://www.lua.org/manual/5.4/manual.html#lua_getallocf)\r\nand [source](https://www.lua.org/source/5.4/lapi.c.html#lua_getallocf)\r\n\r\nIt would be useful to get/manipulate auxiliary \"userdata\" pointer that was originally passed to `lua_newstate`.\r\n",
            "commit_timestamp": 1697212053.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697241941.394741,
            "elapsed_time": 475.30532121658325,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "24fdac4c05f5ae189ede5153a83af4c1bd25351d",
            "commit_message": "Sync to upstream/release/599 (#1069)\n\n## What's Changed\r\n\r\n- Improve POSIX compliance in `CLI/FileUtils.cpp` by @SamuraiCrow #1064\r\n- `AstStat*::hasEnd` is deprecated; use `AstStatBlock::hasEnd` instead\r\n- Added a lint for common misuses of the `#` operator\r\n- Luau now issues deprecated diagnostics for some uses of `getfenv` and\r\n`setfenv`\r\n- Fixed a case where we included a trailing space in some error\r\nstringifications\r\n\r\n### Compiler\r\n\r\n- Do not do further analysis in O2 on self functions\r\n- Improve detection of invalid repeat..until expressions vs continue\r\n\r\n### New Type Solver\r\n\r\n- We now cache subtype test results to improve performance\r\n- Improved operator inference mechanics (aka type families)\r\n- Further work towards type states\r\n- Work towards [new non-strict\r\nmode](https://github.com/Roblox/luau/blob/master/rfcs/new-nonstrict.md)\r\ncontinues\r\n\r\n### Native Codegen\r\n\r\n- Instruction last use locations should follow the order in which blocks\r\nare lowered\r\n- Add a bonus assertion to IrLoweringA64::tempAddr\r\n\r\n---\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>",
            "commit_timestamp": 1697228412.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697256147.91342,
            "elapsed_time": 398.25780034065247,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "24fdac4c05f5ae189ede5153a83af4c1bd25351d",
            "commit_message": "Sync to upstream/release/599 (#1069)\n\n## What's Changed\r\n\r\n- Improve POSIX compliance in `CLI/FileUtils.cpp` by @SamuraiCrow #1064\r\n- `AstStat*::hasEnd` is deprecated; use `AstStatBlock::hasEnd` instead\r\n- Added a lint for common misuses of the `#` operator\r\n- Luau now issues deprecated diagnostics for some uses of `getfenv` and\r\n`setfenv`\r\n- Fixed a case where we included a trailing space in some error\r\nstringifications\r\n\r\n### Compiler\r\n\r\n- Do not do further analysis in O2 on self functions\r\n- Improve detection of invalid repeat..until expressions vs continue\r\n\r\n### New Type Solver\r\n\r\n- We now cache subtype test results to improve performance\r\n- Improved operator inference mechanics (aka type families)\r\n- Further work towards type states\r\n- Work towards [new non-strict\r\nmode](https://github.com/Roblox/luau/blob/master/rfcs/new-nonstrict.md)\r\ncontinues\r\n\r\n### Native Codegen\r\n\r\n- Instruction last use locations should follow the order in which blocks\r\nare lowered\r\n- Add a bonus assertion to IrLoweringA64::tempAddr\r\n\r\n---\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>",
            "commit_timestamp": 1697228412.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697270558.514853,
            "elapsed_time": 347.1994106769562,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "24fdac4c05f5ae189ede5153a83af4c1bd25351d",
            "commit_message": "Sync to upstream/release/599 (#1069)\n\n## What's Changed\r\n\r\n- Improve POSIX compliance in `CLI/FileUtils.cpp` by @SamuraiCrow #1064\r\n- `AstStat*::hasEnd` is deprecated; use `AstStatBlock::hasEnd` instead\r\n- Added a lint for common misuses of the `#` operator\r\n- Luau now issues deprecated diagnostics for some uses of `getfenv` and\r\n`setfenv`\r\n- Fixed a case where we included a trailing space in some error\r\nstringifications\r\n\r\n### Compiler\r\n\r\n- Do not do further analysis in O2 on self functions\r\n- Improve detection of invalid repeat..until expressions vs continue\r\n\r\n### New Type Solver\r\n\r\n- We now cache subtype test results to improve performance\r\n- Improved operator inference mechanics (aka type families)\r\n- Further work towards type states\r\n- Work towards [new non-strict\r\nmode](https://github.com/Roblox/luau/blob/master/rfcs/new-nonstrict.md)\r\ncontinues\r\n\r\n### Native Codegen\r\n\r\n- Instruction last use locations should follow the order in which blocks\r\nare lowered\r\n- Add a bonus assertion to IrLoweringA64::tempAddr\r\n\r\n---\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>",
            "commit_timestamp": 1697228412.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697285027.162029,
            "elapsed_time": 355.22466564178467,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "24fdac4c05f5ae189ede5153a83af4c1bd25351d",
            "commit_message": "Sync to upstream/release/599 (#1069)\n\n## What's Changed\r\n\r\n- Improve POSIX compliance in `CLI/FileUtils.cpp` by @SamuraiCrow #1064\r\n- `AstStat*::hasEnd` is deprecated; use `AstStatBlock::hasEnd` instead\r\n- Added a lint for common misuses of the `#` operator\r\n- Luau now issues deprecated diagnostics for some uses of `getfenv` and\r\n`setfenv`\r\n- Fixed a case where we included a trailing space in some error\r\nstringifications\r\n\r\n### Compiler\r\n\r\n- Do not do further analysis in O2 on self functions\r\n- Improve detection of invalid repeat..until expressions vs continue\r\n\r\n### New Type Solver\r\n\r\n- We now cache subtype test results to improve performance\r\n- Improved operator inference mechanics (aka type families)\r\n- Further work towards type states\r\n- Work towards [new non-strict\r\nmode](https://github.com/Roblox/luau/blob/master/rfcs/new-nonstrict.md)\r\ncontinues\r\n\r\n### Native Codegen\r\n\r\n- Instruction last use locations should follow the order in which blocks\r\nare lowered\r\n- Add a bonus assertion to IrLoweringA64::tempAddr\r\n\r\n---\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>",
            "commit_timestamp": 1697228412.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697299380.484615,
            "elapsed_time": 354.3215494155884,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "24fdac4c05f5ae189ede5153a83af4c1bd25351d",
            "commit_message": "Sync to upstream/release/599 (#1069)\n\n## What's Changed\r\n\r\n- Improve POSIX compliance in `CLI/FileUtils.cpp` by @SamuraiCrow #1064\r\n- `AstStat*::hasEnd` is deprecated; use `AstStatBlock::hasEnd` instead\r\n- Added a lint for common misuses of the `#` operator\r\n- Luau now issues deprecated diagnostics for some uses of `getfenv` and\r\n`setfenv`\r\n- Fixed a case where we included a trailing space in some error\r\nstringifications\r\n\r\n### Compiler\r\n\r\n- Do not do further analysis in O2 on self functions\r\n- Improve detection of invalid repeat..until expressions vs continue\r\n\r\n### New Type Solver\r\n\r\n- We now cache subtype test results to improve performance\r\n- Improved operator inference mechanics (aka type families)\r\n- Further work towards type states\r\n- Work towards [new non-strict\r\nmode](https://github.com/Roblox/luau/blob/master/rfcs/new-nonstrict.md)\r\ncontinues\r\n\r\n### Native Codegen\r\n\r\n- Instruction last use locations should follow the order in which blocks\r\nare lowered\r\n- Add a bonus assertion to IrLoweringA64::tempAddr\r\n\r\n---\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>",
            "commit_timestamp": 1697228412.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697313818.445116,
            "elapsed_time": 362.85721349716187,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "24fdac4c05f5ae189ede5153a83af4c1bd25351d",
            "commit_message": "Sync to upstream/release/599 (#1069)\n\n## What's Changed\r\n\r\n- Improve POSIX compliance in `CLI/FileUtils.cpp` by @SamuraiCrow #1064\r\n- `AstStat*::hasEnd` is deprecated; use `AstStatBlock::hasEnd` instead\r\n- Added a lint for common misuses of the `#` operator\r\n- Luau now issues deprecated diagnostics for some uses of `getfenv` and\r\n`setfenv`\r\n- Fixed a case where we included a trailing space in some error\r\nstringifications\r\n\r\n### Compiler\r\n\r\n- Do not do further analysis in O2 on self functions\r\n- Improve detection of invalid repeat..until expressions vs continue\r\n\r\n### New Type Solver\r\n\r\n- We now cache subtype test results to improve performance\r\n- Improved operator inference mechanics (aka type families)\r\n- Further work towards type states\r\n- Work towards [new non-strict\r\nmode](https://github.com/Roblox/luau/blob/master/rfcs/new-nonstrict.md)\r\ncontinues\r\n\r\n### Native Codegen\r\n\r\n- Instruction last use locations should follow the order in which blocks\r\nare lowered\r\n- Add a bonus assertion to IrLoweringA64::tempAddr\r\n\r\n---\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>",
            "commit_timestamp": 1697228412.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697328242.806638,
            "elapsed_time": 386.29750633239746,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "24fdac4c05f5ae189ede5153a83af4c1bd25351d",
            "commit_message": "Sync to upstream/release/599 (#1069)\n\n## What's Changed\r\n\r\n- Improve POSIX compliance in `CLI/FileUtils.cpp` by @SamuraiCrow #1064\r\n- `AstStat*::hasEnd` is deprecated; use `AstStatBlock::hasEnd` instead\r\n- Added a lint for common misuses of the `#` operator\r\n- Luau now issues deprecated diagnostics for some uses of `getfenv` and\r\n`setfenv`\r\n- Fixed a case where we included a trailing space in some error\r\nstringifications\r\n\r\n### Compiler\r\n\r\n- Do not do further analysis in O2 on self functions\r\n- Improve detection of invalid repeat..until expressions vs continue\r\n\r\n### New Type Solver\r\n\r\n- We now cache subtype test results to improve performance\r\n- Improved operator inference mechanics (aka type families)\r\n- Further work towards type states\r\n- Work towards [new non-strict\r\nmode](https://github.com/Roblox/luau/blob/master/rfcs/new-nonstrict.md)\r\ncontinues\r\n\r\n### Native Codegen\r\n\r\n- Instruction last use locations should follow the order in which blocks\r\nare lowered\r\n- Add a bonus assertion to IrLoweringA64::tempAddr\r\n\r\n---\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>",
            "commit_timestamp": 1697228412.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697342567.314348,
            "elapsed_time": 481.47116136550903,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "24fdac4c05f5ae189ede5153a83af4c1bd25351d",
            "commit_message": "Sync to upstream/release/599 (#1069)\n\n## What's Changed\r\n\r\n- Improve POSIX compliance in `CLI/FileUtils.cpp` by @SamuraiCrow #1064\r\n- `AstStat*::hasEnd` is deprecated; use `AstStatBlock::hasEnd` instead\r\n- Added a lint for common misuses of the `#` operator\r\n- Luau now issues deprecated diagnostics for some uses of `getfenv` and\r\n`setfenv`\r\n- Fixed a case where we included a trailing space in some error\r\nstringifications\r\n\r\n### Compiler\r\n\r\n- Do not do further analysis in O2 on self functions\r\n- Improve detection of invalid repeat..until expressions vs continue\r\n\r\n### New Type Solver\r\n\r\n- We now cache subtype test results to improve performance\r\n- Improved operator inference mechanics (aka type families)\r\n- Further work towards type states\r\n- Work towards [new non-strict\r\nmode](https://github.com/Roblox/luau/blob/master/rfcs/new-nonstrict.md)\r\ncontinues\r\n\r\n### Native Codegen\r\n\r\n- Instruction last use locations should follow the order in which blocks\r\nare lowered\r\n- Add a bonus assertion to IrLoweringA64::tempAddr\r\n\r\n---\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>",
            "commit_timestamp": 1697228412.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697356994.739653,
            "elapsed_time": 358.2459325790405,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "24fdac4c05f5ae189ede5153a83af4c1bd25351d",
            "commit_message": "Sync to upstream/release/599 (#1069)\n\n## What's Changed\r\n\r\n- Improve POSIX compliance in `CLI/FileUtils.cpp` by @SamuraiCrow #1064\r\n- `AstStat*::hasEnd` is deprecated; use `AstStatBlock::hasEnd` instead\r\n- Added a lint for common misuses of the `#` operator\r\n- Luau now issues deprecated diagnostics for some uses of `getfenv` and\r\n`setfenv`\r\n- Fixed a case where we included a trailing space in some error\r\nstringifications\r\n\r\n### Compiler\r\n\r\n- Do not do further analysis in O2 on self functions\r\n- Improve detection of invalid repeat..until expressions vs continue\r\n\r\n### New Type Solver\r\n\r\n- We now cache subtype test results to improve performance\r\n- Improved operator inference mechanics (aka type families)\r\n- Further work towards type states\r\n- Work towards [new non-strict\r\nmode](https://github.com/Roblox/luau/blob/master/rfcs/new-nonstrict.md)\r\ncontinues\r\n\r\n### Native Codegen\r\n\r\n- Instruction last use locations should follow the order in which blocks\r\nare lowered\r\n- Add a bonus assertion to IrLoweringA64::tempAddr\r\n\r\n---\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>",
            "commit_timestamp": 1697228412.0
        },
        {
            "tool_version": "233.0.20231007.121338-eap02",
            "error_mismatch": true,
            "project": null,
            "timestamp": 1697365619.170456,
            "elapsed_time": 342.16284465789795,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "24fdac4c05f5ae189ede5153a83af4c1bd25351d",
            "commit_message": "Sync to upstream/release/599 (#1069)\n\n## What's Changed\r\n\r\n- Improve POSIX compliance in `CLI/FileUtils.cpp` by @SamuraiCrow #1064\r\n- `AstStat*::hasEnd` is deprecated; use `AstStatBlock::hasEnd` instead\r\n- Added a lint for common misuses of the `#` operator\r\n- Luau now issues deprecated diagnostics for some uses of `getfenv` and\r\n`setfenv`\r\n- Fixed a case where we included a trailing space in some error\r\nstringifications\r\n\r\n### Compiler\r\n\r\n- Do not do further analysis in O2 on self functions\r\n- Improve detection of invalid repeat..until expressions vs continue\r\n\r\n### New Type Solver\r\n\r\n- We now cache subtype test results to improve performance\r\n- Improved operator inference mechanics (aka type families)\r\n- Further work towards type states\r\n- Work towards [new non-strict\r\nmode](https://github.com/Roblox/luau/blob/master/rfcs/new-nonstrict.md)\r\ncontinues\r\n\r\n### Native Codegen\r\n\r\n- Instruction last use locations should follow the order in which blocks\r\nare lowered\r\n- Add a bonus assertion to IrLoweringA64::tempAddr\r\n\r\n---\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>",
            "commit_timestamp": 1697228412.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697367327.728617,
            "elapsed_time": 344.3969581127167,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "24fdac4c05f5ae189ede5153a83af4c1bd25351d",
            "commit_message": "Sync to upstream/release/599 (#1069)\n\n## What's Changed\r\n\r\n- Improve POSIX compliance in `CLI/FileUtils.cpp` by @SamuraiCrow #1064\r\n- `AstStat*::hasEnd` is deprecated; use `AstStatBlock::hasEnd` instead\r\n- Added a lint for common misuses of the `#` operator\r\n- Luau now issues deprecated diagnostics for some uses of `getfenv` and\r\n`setfenv`\r\n- Fixed a case where we included a trailing space in some error\r\nstringifications\r\n\r\n### Compiler\r\n\r\n- Do not do further analysis in O2 on self functions\r\n- Improve detection of invalid repeat..until expressions vs continue\r\n\r\n### New Type Solver\r\n\r\n- We now cache subtype test results to improve performance\r\n- Improved operator inference mechanics (aka type families)\r\n- Further work towards type states\r\n- Work towards [new non-strict\r\nmode](https://github.com/Roblox/luau/blob/master/rfcs/new-nonstrict.md)\r\ncontinues\r\n\r\n### Native Codegen\r\n\r\n- Instruction last use locations should follow the order in which blocks\r\nare lowered\r\n- Add a bonus assertion to IrLoweringA64::tempAddr\r\n\r\n---\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>",
            "commit_timestamp": 1697228412.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697371431.027618,
            "elapsed_time": 362.20152974128723,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "24fdac4c05f5ae189ede5153a83af4c1bd25351d",
            "commit_message": "Sync to upstream/release/599 (#1069)\n\n## What's Changed\r\n\r\n- Improve POSIX compliance in `CLI/FileUtils.cpp` by @SamuraiCrow #1064\r\n- `AstStat*::hasEnd` is deprecated; use `AstStatBlock::hasEnd` instead\r\n- Added a lint for common misuses of the `#` operator\r\n- Luau now issues deprecated diagnostics for some uses of `getfenv` and\r\n`setfenv`\r\n- Fixed a case where we included a trailing space in some error\r\nstringifications\r\n\r\n### Compiler\r\n\r\n- Do not do further analysis in O2 on self functions\r\n- Improve detection of invalid repeat..until expressions vs continue\r\n\r\n### New Type Solver\r\n\r\n- We now cache subtype test results to improve performance\r\n- Improved operator inference mechanics (aka type families)\r\n- Further work towards type states\r\n- Work towards [new non-strict\r\nmode](https://github.com/Roblox/luau/blob/master/rfcs/new-nonstrict.md)\r\ncontinues\r\n\r\n### Native Codegen\r\n\r\n- Instruction last use locations should follow the order in which blocks\r\nare lowered\r\n- Add a bonus assertion to IrLoweringA64::tempAddr\r\n\r\n---\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>",
            "commit_timestamp": 1697228412.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697383969.197105,
            "elapsed_time": 368.3269941806793,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "24fdac4c05f5ae189ede5153a83af4c1bd25351d",
            "commit_message": "Sync to upstream/release/599 (#1069)\n\n## What's Changed\r\n\r\n- Improve POSIX compliance in `CLI/FileUtils.cpp` by @SamuraiCrow #1064\r\n- `AstStat*::hasEnd` is deprecated; use `AstStatBlock::hasEnd` instead\r\n- Added a lint for common misuses of the `#` operator\r\n- Luau now issues deprecated diagnostics for some uses of `getfenv` and\r\n`setfenv`\r\n- Fixed a case where we included a trailing space in some error\r\nstringifications\r\n\r\n### Compiler\r\n\r\n- Do not do further analysis in O2 on self functions\r\n- Improve detection of invalid repeat..until expressions vs continue\r\n\r\n### New Type Solver\r\n\r\n- We now cache subtype test results to improve performance\r\n- Improved operator inference mechanics (aka type families)\r\n- Further work towards type states\r\n- Work towards [new non-strict\r\nmode](https://github.com/Roblox/luau/blob/master/rfcs/new-nonstrict.md)\r\ncontinues\r\n\r\n### Native Codegen\r\n\r\n- Instruction last use locations should follow the order in which blocks\r\nare lowered\r\n- Add a bonus assertion to IrLoweringA64::tempAddr\r\n\r\n---\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>",
            "commit_timestamp": 1697228412.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697387037.566502,
            "elapsed_time": 368.52155113220215,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "24fdac4c05f5ae189ede5153a83af4c1bd25351d",
            "commit_message": "Sync to upstream/release/599 (#1069)\n\n## What's Changed\r\n\r\n- Improve POSIX compliance in `CLI/FileUtils.cpp` by @SamuraiCrow #1064\r\n- `AstStat*::hasEnd` is deprecated; use `AstStatBlock::hasEnd` instead\r\n- Added a lint for common misuses of the `#` operator\r\n- Luau now issues deprecated diagnostics for some uses of `getfenv` and\r\n`setfenv`\r\n- Fixed a case where we included a trailing space in some error\r\nstringifications\r\n\r\n### Compiler\r\n\r\n- Do not do further analysis in O2 on self functions\r\n- Improve detection of invalid repeat..until expressions vs continue\r\n\r\n### New Type Solver\r\n\r\n- We now cache subtype test results to improve performance\r\n- Improved operator inference mechanics (aka type families)\r\n- Further work towards type states\r\n- Work towards [new non-strict\r\nmode](https://github.com/Roblox/luau/blob/master/rfcs/new-nonstrict.md)\r\ncontinues\r\n\r\n### Native Codegen\r\n\r\n- Instruction last use locations should follow the order in which blocks\r\nare lowered\r\n- Add a bonus assertion to IrLoweringA64::tempAddr\r\n\r\n---\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>",
            "commit_timestamp": 1697228412.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697385745.923743,
            "elapsed_time": 409.94382762908936,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "24fdac4c05f5ae189ede5153a83af4c1bd25351d",
            "commit_message": "Sync to upstream/release/599 (#1069)\n\n## What's Changed\r\n\r\n- Improve POSIX compliance in `CLI/FileUtils.cpp` by @SamuraiCrow #1064\r\n- `AstStat*::hasEnd` is deprecated; use `AstStatBlock::hasEnd` instead\r\n- Added a lint for common misuses of the `#` operator\r\n- Luau now issues deprecated diagnostics for some uses of `getfenv` and\r\n`setfenv`\r\n- Fixed a case where we included a trailing space in some error\r\nstringifications\r\n\r\n### Compiler\r\n\r\n- Do not do further analysis in O2 on self functions\r\n- Improve detection of invalid repeat..until expressions vs continue\r\n\r\n### New Type Solver\r\n\r\n- We now cache subtype test results to improve performance\r\n- Improved operator inference mechanics (aka type families)\r\n- Further work towards type states\r\n- Work towards [new non-strict\r\nmode](https://github.com/Roblox/luau/blob/master/rfcs/new-nonstrict.md)\r\ncontinues\r\n\r\n### Native Codegen\r\n\r\n- Instruction last use locations should follow the order in which blocks\r\nare lowered\r\n- Add a bonus assertion to IrLoweringA64::tempAddr\r\n\r\n---\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>",
            "commit_timestamp": 1697228412.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697400232.080295,
            "elapsed_time": 431.43100571632385,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "24fdac4c05f5ae189ede5153a83af4c1bd25351d",
            "commit_message": "Sync to upstream/release/599 (#1069)\n\n## What's Changed\r\n\r\n- Improve POSIX compliance in `CLI/FileUtils.cpp` by @SamuraiCrow #1064\r\n- `AstStat*::hasEnd` is deprecated; use `AstStatBlock::hasEnd` instead\r\n- Added a lint for common misuses of the `#` operator\r\n- Luau now issues deprecated diagnostics for some uses of `getfenv` and\r\n`setfenv`\r\n- Fixed a case where we included a trailing space in some error\r\nstringifications\r\n\r\n### Compiler\r\n\r\n- Do not do further analysis in O2 on self functions\r\n- Improve detection of invalid repeat..until expressions vs continue\r\n\r\n### New Type Solver\r\n\r\n- We now cache subtype test results to improve performance\r\n- Improved operator inference mechanics (aka type families)\r\n- Further work towards type states\r\n- Work towards [new non-strict\r\nmode](https://github.com/Roblox/luau/blob/master/rfcs/new-nonstrict.md)\r\ncontinues\r\n\r\n### Native Codegen\r\n\r\n- Instruction last use locations should follow the order in which blocks\r\nare lowered\r\n- Add a bonus assertion to IrLoweringA64::tempAddr\r\n\r\n---\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>",
            "commit_timestamp": 1697228412.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697414696.627698,
            "elapsed_time": 359.1305282115936,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "24fdac4c05f5ae189ede5153a83af4c1bd25351d",
            "commit_message": "Sync to upstream/release/599 (#1069)\n\n## What's Changed\r\n\r\n- Improve POSIX compliance in `CLI/FileUtils.cpp` by @SamuraiCrow #1064\r\n- `AstStat*::hasEnd` is deprecated; use `AstStatBlock::hasEnd` instead\r\n- Added a lint for common misuses of the `#` operator\r\n- Luau now issues deprecated diagnostics for some uses of `getfenv` and\r\n`setfenv`\r\n- Fixed a case where we included a trailing space in some error\r\nstringifications\r\n\r\n### Compiler\r\n\r\n- Do not do further analysis in O2 on self functions\r\n- Improve detection of invalid repeat..until expressions vs continue\r\n\r\n### New Type Solver\r\n\r\n- We now cache subtype test results to improve performance\r\n- Improved operator inference mechanics (aka type families)\r\n- Further work towards type states\r\n- Work towards [new non-strict\r\nmode](https://github.com/Roblox/luau/blob/master/rfcs/new-nonstrict.md)\r\ncontinues\r\n\r\n### Native Codegen\r\n\r\n- Instruction last use locations should follow the order in which blocks\r\nare lowered\r\n- Add a bonus assertion to IrLoweringA64::tempAddr\r\n\r\n---\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>",
            "commit_timestamp": 1697228412.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697429003.110496,
            "elapsed_time": 370.13009238243103,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "24fdac4c05f5ae189ede5153a83af4c1bd25351d",
            "commit_message": "Sync to upstream/release/599 (#1069)\n\n## What's Changed\r\n\r\n- Improve POSIX compliance in `CLI/FileUtils.cpp` by @SamuraiCrow #1064\r\n- `AstStat*::hasEnd` is deprecated; use `AstStatBlock::hasEnd` instead\r\n- Added a lint for common misuses of the `#` operator\r\n- Luau now issues deprecated diagnostics for some uses of `getfenv` and\r\n`setfenv`\r\n- Fixed a case where we included a trailing space in some error\r\nstringifications\r\n\r\n### Compiler\r\n\r\n- Do not do further analysis in O2 on self functions\r\n- Improve detection of invalid repeat..until expressions vs continue\r\n\r\n### New Type Solver\r\n\r\n- We now cache subtype test results to improve performance\r\n- Improved operator inference mechanics (aka type families)\r\n- Further work towards type states\r\n- Work towards [new non-strict\r\nmode](https://github.com/Roblox/luau/blob/master/rfcs/new-nonstrict.md)\r\ncontinues\r\n\r\n### Native Codegen\r\n\r\n- Instruction last use locations should follow the order in which blocks\r\nare lowered\r\n- Add a bonus assertion to IrLoweringA64::tempAddr\r\n\r\n---\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>",
            "commit_timestamp": 1697228412.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697443401.813234,
            "elapsed_time": 349.0126910209656,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "24fdac4c05f5ae189ede5153a83af4c1bd25351d",
            "commit_message": "Sync to upstream/release/599 (#1069)\n\n## What's Changed\r\n\r\n- Improve POSIX compliance in `CLI/FileUtils.cpp` by @SamuraiCrow #1064\r\n- `AstStat*::hasEnd` is deprecated; use `AstStatBlock::hasEnd` instead\r\n- Added a lint for common misuses of the `#` operator\r\n- Luau now issues deprecated diagnostics for some uses of `getfenv` and\r\n`setfenv`\r\n- Fixed a case where we included a trailing space in some error\r\nstringifications\r\n\r\n### Compiler\r\n\r\n- Do not do further analysis in O2 on self functions\r\n- Improve detection of invalid repeat..until expressions vs continue\r\n\r\n### New Type Solver\r\n\r\n- We now cache subtype test results to improve performance\r\n- Improved operator inference mechanics (aka type families)\r\n- Further work towards type states\r\n- Work towards [new non-strict\r\nmode](https://github.com/Roblox/luau/blob/master/rfcs/new-nonstrict.md)\r\ncontinues\r\n\r\n### Native Codegen\r\n\r\n- Instruction last use locations should follow the order in which blocks\r\nare lowered\r\n- Add a bonus assertion to IrLoweringA64::tempAddr\r\n\r\n---\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>",
            "commit_timestamp": 1697228412.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697457832.140718,
            "elapsed_time": 459.32220435142517,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "24fdac4c05f5ae189ede5153a83af4c1bd25351d",
            "commit_message": "Sync to upstream/release/599 (#1069)\n\n## What's Changed\r\n\r\n- Improve POSIX compliance in `CLI/FileUtils.cpp` by @SamuraiCrow #1064\r\n- `AstStat*::hasEnd` is deprecated; use `AstStatBlock::hasEnd` instead\r\n- Added a lint for common misuses of the `#` operator\r\n- Luau now issues deprecated diagnostics for some uses of `getfenv` and\r\n`setfenv`\r\n- Fixed a case where we included a trailing space in some error\r\nstringifications\r\n\r\n### Compiler\r\n\r\n- Do not do further analysis in O2 on self functions\r\n- Improve detection of invalid repeat..until expressions vs continue\r\n\r\n### New Type Solver\r\n\r\n- We now cache subtype test results to improve performance\r\n- Improved operator inference mechanics (aka type families)\r\n- Further work towards type states\r\n- Work towards [new non-strict\r\nmode](https://github.com/Roblox/luau/blob/master/rfcs/new-nonstrict.md)\r\ncontinues\r\n\r\n### Native Codegen\r\n\r\n- Instruction last use locations should follow the order in which blocks\r\nare lowered\r\n- Add a bonus assertion to IrLoweringA64::tempAddr\r\n\r\n---\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>",
            "commit_timestamp": 1697228412.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697472252.729516,
            "elapsed_time": 449.1118714809418,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "7e5643a4ad7a126d854b695ef62300e496bb9099",
            "commit_message": "RFC: Add `bit32.byteswap` to support swapping the endianness of integers (#1052)\n\nThis function might be of particular use if #739 is accepted, but as it\r\nstands, it still brings a measurable reduction in complexity for\r\nswapping byte order and is measurably faster (around a 50% reduction in\r\ntime per operation on my machine), albeit on the order of magnitude of\r\nnanoseconds.",
            "commit_timestamp": 1697471243.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697486650.928707,
            "elapsed_time": 380.9655363559723,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "7e5643a4ad7a126d854b695ef62300e496bb9099",
            "commit_message": "RFC: Add `bit32.byteswap` to support swapping the endianness of integers (#1052)\n\nThis function might be of particular use if #739 is accepted, but as it\r\nstands, it still brings a measurable reduction in complexity for\r\nswapping byte order and is measurably faster (around a 50% reduction in\r\ntime per operation on my machine), albeit on the order of magnitude of\r\nnanoseconds.",
            "commit_timestamp": 1697471243.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697501077.196811,
            "elapsed_time": 441.4009017944336,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "61afc5e0dd5b87df87e13e938df19f6b5b2935b1",
            "commit_message": "Create CNAME",
            "commit_timestamp": 1697498747.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697515404.726035,
            "elapsed_time": 359.7988233566284,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "61afc5e0dd5b87df87e13e938df19f6b5b2935b1",
            "commit_message": "Create CNAME",
            "commit_timestamp": 1697498747.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697529897.484544,
            "elapsed_time": 468.10764932632446,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "61afc5e0dd5b87df87e13e938df19f6b5b2935b1",
            "commit_message": "Create CNAME",
            "commit_timestamp": 1697498747.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697544231.65757,
            "elapsed_time": 412.3931143283844,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "61afc5e0dd5b87df87e13e938df19f6b5b2935b1",
            "commit_message": "Create CNAME",
            "commit_timestamp": 1697498747.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697558622.14319,
            "elapsed_time": 431.8001055717468,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "61afc5e0dd5b87df87e13e938df19f6b5b2935b1",
            "commit_message": "Create CNAME",
            "commit_timestamp": 1697498747.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697573033.987957,
            "elapsed_time": 433.81750535964966,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "61afc5e0dd5b87df87e13e938df19f6b5b2935b1",
            "commit_message": "Create CNAME",
            "commit_timestamp": 1697498747.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697587573.54048,
            "elapsed_time": 397.48668789863586,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "61afc5e0dd5b87df87e13e938df19f6b5b2935b1",
            "commit_message": "Create CNAME",
            "commit_timestamp": 1697498747.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697601798.590339,
            "elapsed_time": 375.313574552536,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "61afc5e0dd5b87df87e13e938df19f6b5b2935b1",
            "commit_message": "Create CNAME",
            "commit_timestamp": 1697498747.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697616220.071556,
            "elapsed_time": 450.822851896286,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "61afc5e0dd5b87df87e13e938df19f6b5b2935b1",
            "commit_message": "Create CNAME",
            "commit_timestamp": 1697498747.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697630662.864597,
            "elapsed_time": 408.671945810318,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "61afc5e0dd5b87df87e13e938df19f6b5b2935b1",
            "commit_message": "Create CNAME",
            "commit_timestamp": 1697498747.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697648484.908574,
            "elapsed_time": 491.9277901649475,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "61afc5e0dd5b87df87e13e938df19f6b5b2935b1",
            "commit_message": "Create CNAME",
            "commit_timestamp": 1697498747.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697644987.047379,
            "elapsed_time": 365.11356711387634,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "61afc5e0dd5b87df87e13e938df19f6b5b2935b1",
            "commit_message": "Create CNAME",
            "commit_timestamp": 1697498747.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697659411.531078,
            "elapsed_time": 364.3941533565521,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "61afc5e0dd5b87df87e13e938df19f6b5b2935b1",
            "commit_message": "Create CNAME",
            "commit_timestamp": 1697498747.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697673916.593057,
            "elapsed_time": 460.72858786582947,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "61afc5e0dd5b87df87e13e938df19f6b5b2935b1",
            "commit_message": "Create CNAME",
            "commit_timestamp": 1697498747.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697688207.871395,
            "elapsed_time": 411.17985582351685,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "61afc5e0dd5b87df87e13e938df19f6b5b2935b1",
            "commit_message": "Create CNAME",
            "commit_timestamp": 1697498747.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697702610.481971,
            "elapsed_time": 411.85305857658386,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "61afc5e0dd5b87df87e13e938df19f6b5b2935b1",
            "commit_message": "Create CNAME",
            "commit_timestamp": 1697498747.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697717003.51921,
            "elapsed_time": 435.6839280128479,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "380bb7095db13b71bbebf1ba3020e8d7ef54635b",
            "commit_message": "RFC: Built in buffer type and library (#739)\n\n[Rendered\r\ndocument](https://github.com/Rerumu/luau/blob/rfc-type-byte-array/rfcs/type-byte-buffer.md).\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Micah <dekkonot@rocketmail.com>",
            "commit_timestamp": 1697703238.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697731384.627037,
            "elapsed_time": 358.34914350509644,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "380bb7095db13b71bbebf1ba3020e8d7ef54635b",
            "commit_message": "RFC: Built in buffer type and library (#739)\n\n[Rendered\r\ndocument](https://github.com/Rerumu/luau/blob/rfc-type-byte-array/rfcs/type-byte-buffer.md).\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Micah <dekkonot@rocketmail.com>",
            "commit_timestamp": 1697703238.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697745825.431673,
            "elapsed_time": 447.22299885749817,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "380bb7095db13b71bbebf1ba3020e8d7ef54635b",
            "commit_message": "RFC: Built in buffer type and library (#739)\n\n[Rendered\r\ndocument](https://github.com/Rerumu/luau/blob/rfc-type-byte-array/rfcs/type-byte-buffer.md).\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Micah <dekkonot@rocketmail.com>",
            "commit_timestamp": 1697703238.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697760299.110874,
            "elapsed_time": 461.9595322608948,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "380bb7095db13b71bbebf1ba3020e8d7ef54635b",
            "commit_message": "RFC: Built in buffer type and library (#739)\n\n[Rendered\r\ndocument](https://github.com/Rerumu/luau/blob/rfc-type-byte-array/rfcs/type-byte-buffer.md).\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Micah <dekkonot@rocketmail.com>",
            "commit_timestamp": 1697703238.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697774610.421729,
            "elapsed_time": 501.39682030677795,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "380bb7095db13b71bbebf1ba3020e8d7ef54635b",
            "commit_message": "RFC: Built in buffer type and library (#739)\n\n[Rendered\r\ndocument](https://github.com/Rerumu/luau/blob/rfc-type-byte-array/rfcs/type-byte-buffer.md).\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Micah <dekkonot@rocketmail.com>",
            "commit_timestamp": 1697703238.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697789035.128543,
            "elapsed_time": 460.38815450668335,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "380bb7095db13b71bbebf1ba3020e8d7ef54635b",
            "commit_message": "RFC: Built in buffer type and library (#739)\n\n[Rendered\r\ndocument](https://github.com/Rerumu/luau/blob/rfc-type-byte-array/rfcs/type-byte-buffer.md).\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Micah <dekkonot@rocketmail.com>",
            "commit_timestamp": 1697703238.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697803418.338999,
            "elapsed_time": 407.94341802597046,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "380bb7095db13b71bbebf1ba3020e8d7ef54635b",
            "commit_message": "RFC: Built in buffer type and library (#739)\n\n[Rendered\r\ndocument](https://github.com/Rerumu/luau/blob/rfc-type-byte-array/rfcs/type-byte-buffer.md).\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Micah <dekkonot@rocketmail.com>",
            "commit_timestamp": 1697703238.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697817806.001434,
            "elapsed_time": 461.13809514045715,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "380bb7095db13b71bbebf1ba3020e8d7ef54635b",
            "commit_message": "RFC: Built in buffer type and library (#739)\n\n[Rendered\r\ndocument](https://github.com/Rerumu/luau/blob/rfc-type-byte-array/rfcs/type-byte-buffer.md).\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Micah <dekkonot@rocketmail.com>",
            "commit_timestamp": 1697703238.0
        },
        {
            "tool_version": "233.0.20231013.113827-eap03",
            "error_mismatch": true,
            "project": null,
            "timestamp": 1697825918.210258,
            "elapsed_time": 463.3937749862671,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "380bb7095db13b71bbebf1ba3020e8d7ef54635b",
            "commit_message": "RFC: Built in buffer type and library (#739)\n\n[Rendered\r\ndocument](https://github.com/Rerumu/luau/blob/rfc-type-byte-array/rfcs/type-byte-buffer.md).\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Micah <dekkonot@rocketmail.com>",
            "commit_timestamp": 1697703238.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697826857.247825,
            "elapsed_time": 474.14673948287964,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "380bb7095db13b71bbebf1ba3020e8d7ef54635b",
            "commit_message": "RFC: Built in buffer type and library (#739)\n\n[Rendered\r\ndocument](https://github.com/Rerumu/luau/blob/rfc-type-byte-array/rfcs/type-byte-buffer.md).\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Micah <dekkonot@rocketmail.com>",
            "commit_timestamp": 1697703238.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697832195.869556,
            "elapsed_time": 362.3533675670624,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "380bb7095db13b71bbebf1ba3020e8d7ef54635b",
            "commit_message": "RFC: Built in buffer type and library (#739)\n\n[Rendered\r\ndocument](https://github.com/Rerumu/luau/blob/rfc-type-byte-array/rfcs/type-byte-buffer.md).\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Micah <dekkonot@rocketmail.com>",
            "commit_timestamp": 1697703238.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697846793.516178,
            "elapsed_time": 451.19282627105713,
            "x64": false,
            "actual_files_count": 418,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "380bb7095db13b71bbebf1ba3020e8d7ef54635b",
            "commit_message": "RFC: Built in buffer type and library (#739)\n\n[Rendered\r\ndocument](https://github.com/Rerumu/luau/blob/rfc-type-byte-array/rfcs/type-byte-buffer.md).\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Micah <dekkonot@rocketmail.com>",
            "commit_timestamp": 1697703238.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697860981.295857,
            "elapsed_time": 451.2959351539612,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "fd6250cf9d2c96eef0959f7cc01c79c954eba60a",
            "commit_message": "Sync to upstream/release/600 (#1076)\n\n### What's Changed\r\n\r\n- Improve readability of unions and intersections by limiting the number\r\nof elements of those types that can be presented on a single line (gated\r\nunder `FFlag::LuauToStringSimpleCompositeTypesSingleLine`)\r\n- Adds a new option to the compiler `--record-stats` to record and\r\noutput compilation statistics\r\n- `if...then...else` expressions are now optimized into `AND/OR` form\r\nwhen possible.\r\n\r\n### VM\r\n\r\n- Add a new `buffer` type to Luau based on the [buffer\r\nRFC](https://github.com/Roblox/luau/pull/739) and additional C API\r\nfunctions to work with it; this release does not include the library.\r\n- Internal C API to work with string buffers has been updated to align\r\nwith Lua version more closely\r\n\r\n### Native Codegen\r\n\r\n- Added support for new X64 instruction (rev) and new A64 instruction\r\n(bswap) in the assembler\r\n- Simplified the way numerical loop condition is translated to IR\r\n\r\n### New Type Solver\r\n\r\n- Operator inference now handled by type families\r\n- Created a new system called `Type Paths` to explain why subtyping\r\ntests fail in order to improve the quality of error messages.\r\n- Systematic changes to implement Data Flow analysis in the new solver\r\n(`Breadcrumb` removed and replaced with `RefinementKey`)\r\n\r\n---\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>",
            "commit_timestamp": 1697850630.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697875348.70343,
            "elapsed_time": 427.52831077575684,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "fd6250cf9d2c96eef0959f7cc01c79c954eba60a",
            "commit_message": "Sync to upstream/release/600 (#1076)\n\n### What's Changed\r\n\r\n- Improve readability of unions and intersections by limiting the number\r\nof elements of those types that can be presented on a single line (gated\r\nunder `FFlag::LuauToStringSimpleCompositeTypesSingleLine`)\r\n- Adds a new option to the compiler `--record-stats` to record and\r\noutput compilation statistics\r\n- `if...then...else` expressions are now optimized into `AND/OR` form\r\nwhen possible.\r\n\r\n### VM\r\n\r\n- Add a new `buffer` type to Luau based on the [buffer\r\nRFC](https://github.com/Roblox/luau/pull/739) and additional C API\r\nfunctions to work with it; this release does not include the library.\r\n- Internal C API to work with string buffers has been updated to align\r\nwith Lua version more closely\r\n\r\n### Native Codegen\r\n\r\n- Added support for new X64 instruction (rev) and new A64 instruction\r\n(bswap) in the assembler\r\n- Simplified the way numerical loop condition is translated to IR\r\n\r\n### New Type Solver\r\n\r\n- Operator inference now handled by type families\r\n- Created a new system called `Type Paths` to explain why subtyping\r\ntests fail in order to improve the quality of error messages.\r\n- Systematic changes to implement Data Flow analysis in the new solver\r\n(`Breadcrumb` removed and replaced with `RefinementKey`)\r\n\r\n---\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>",
            "commit_timestamp": 1697850630.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697889926.222061,
            "elapsed_time": 458.02403354644775,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "fd6250cf9d2c96eef0959f7cc01c79c954eba60a",
            "commit_message": "Sync to upstream/release/600 (#1076)\n\n### What's Changed\r\n\r\n- Improve readability of unions and intersections by limiting the number\r\nof elements of those types that can be presented on a single line (gated\r\nunder `FFlag::LuauToStringSimpleCompositeTypesSingleLine`)\r\n- Adds a new option to the compiler `--record-stats` to record and\r\noutput compilation statistics\r\n- `if...then...else` expressions are now optimized into `AND/OR` form\r\nwhen possible.\r\n\r\n### VM\r\n\r\n- Add a new `buffer` type to Luau based on the [buffer\r\nRFC](https://github.com/Roblox/luau/pull/739) and additional C API\r\nfunctions to work with it; this release does not include the library.\r\n- Internal C API to work with string buffers has been updated to align\r\nwith Lua version more closely\r\n\r\n### Native Codegen\r\n\r\n- Added support for new X64 instruction (rev) and new A64 instruction\r\n(bswap) in the assembler\r\n- Simplified the way numerical loop condition is translated to IR\r\n\r\n### New Type Solver\r\n\r\n- Operator inference now handled by type families\r\n- Created a new system called `Type Paths` to explain why subtyping\r\ntests fail in order to improve the quality of error messages.\r\n- Systematic changes to implement Data Flow analysis in the new solver\r\n(`Breadcrumb` removed and replaced with `RefinementKey`)\r\n\r\n---\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>",
            "commit_timestamp": 1697850630.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697904278.869228,
            "elapsed_time": 362.176198720932,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "fd6250cf9d2c96eef0959f7cc01c79c954eba60a",
            "commit_message": "Sync to upstream/release/600 (#1076)\n\n### What's Changed\r\n\r\n- Improve readability of unions and intersections by limiting the number\r\nof elements of those types that can be presented on a single line (gated\r\nunder `FFlag::LuauToStringSimpleCompositeTypesSingleLine`)\r\n- Adds a new option to the compiler `--record-stats` to record and\r\noutput compilation statistics\r\n- `if...then...else` expressions are now optimized into `AND/OR` form\r\nwhen possible.\r\n\r\n### VM\r\n\r\n- Add a new `buffer` type to Luau based on the [buffer\r\nRFC](https://github.com/Roblox/luau/pull/739) and additional C API\r\nfunctions to work with it; this release does not include the library.\r\n- Internal C API to work with string buffers has been updated to align\r\nwith Lua version more closely\r\n\r\n### Native Codegen\r\n\r\n- Added support for new X64 instruction (rev) and new A64 instruction\r\n(bswap) in the assembler\r\n- Simplified the way numerical loop condition is translated to IR\r\n\r\n### New Type Solver\r\n\r\n- Operator inference now handled by type families\r\n- Created a new system called `Type Paths` to explain why subtyping\r\ntests fail in order to improve the quality of error messages.\r\n- Systematic changes to implement Data Flow analysis in the new solver\r\n(`Breadcrumb` removed and replaced with `RefinementKey`)\r\n\r\n---\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>",
            "commit_timestamp": 1697850630.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697918601.843284,
            "elapsed_time": 361.2533383369446,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "fd6250cf9d2c96eef0959f7cc01c79c954eba60a",
            "commit_message": "Sync to upstream/release/600 (#1076)\n\n### What's Changed\r\n\r\n- Improve readability of unions and intersections by limiting the number\r\nof elements of those types that can be presented on a single line (gated\r\nunder `FFlag::LuauToStringSimpleCompositeTypesSingleLine`)\r\n- Adds a new option to the compiler `--record-stats` to record and\r\noutput compilation statistics\r\n- `if...then...else` expressions are now optimized into `AND/OR` form\r\nwhen possible.\r\n\r\n### VM\r\n\r\n- Add a new `buffer` type to Luau based on the [buffer\r\nRFC](https://github.com/Roblox/luau/pull/739) and additional C API\r\nfunctions to work with it; this release does not include the library.\r\n- Internal C API to work with string buffers has been updated to align\r\nwith Lua version more closely\r\n\r\n### Native Codegen\r\n\r\n- Added support for new X64 instruction (rev) and new A64 instruction\r\n(bswap) in the assembler\r\n- Simplified the way numerical loop condition is translated to IR\r\n\r\n### New Type Solver\r\n\r\n- Operator inference now handled by type families\r\n- Created a new system called `Type Paths` to explain why subtyping\r\ntests fail in order to improve the quality of error messages.\r\n- Systematic changes to implement Data Flow analysis in the new solver\r\n(`Breadcrumb` removed and replaced with `RefinementKey`)\r\n\r\n---\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>",
            "commit_timestamp": 1697850630.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697933098.834054,
            "elapsed_time": 476.6972794532776,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "fd6250cf9d2c96eef0959f7cc01c79c954eba60a",
            "commit_message": "Sync to upstream/release/600 (#1076)\n\n### What's Changed\r\n\r\n- Improve readability of unions and intersections by limiting the number\r\nof elements of those types that can be presented on a single line (gated\r\nunder `FFlag::LuauToStringSimpleCompositeTypesSingleLine`)\r\n- Adds a new option to the compiler `--record-stats` to record and\r\noutput compilation statistics\r\n- `if...then...else` expressions are now optimized into `AND/OR` form\r\nwhen possible.\r\n\r\n### VM\r\n\r\n- Add a new `buffer` type to Luau based on the [buffer\r\nRFC](https://github.com/Roblox/luau/pull/739) and additional C API\r\nfunctions to work with it; this release does not include the library.\r\n- Internal C API to work with string buffers has been updated to align\r\nwith Lua version more closely\r\n\r\n### Native Codegen\r\n\r\n- Added support for new X64 instruction (rev) and new A64 instruction\r\n(bswap) in the assembler\r\n- Simplified the way numerical loop condition is translated to IR\r\n\r\n### New Type Solver\r\n\r\n- Operator inference now handled by type families\r\n- Created a new system called `Type Paths` to explain why subtyping\r\ntests fail in order to improve the quality of error messages.\r\n- Systematic changes to implement Data Flow analysis in the new solver\r\n(`Breadcrumb` removed and replaced with `RefinementKey`)\r\n\r\n---\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>",
            "commit_timestamp": 1697850630.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697947398.929947,
            "elapsed_time": 365.38238763809204,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "fd6250cf9d2c96eef0959f7cc01c79c954eba60a",
            "commit_message": "Sync to upstream/release/600 (#1076)\n\n### What's Changed\r\n\r\n- Improve readability of unions and intersections by limiting the number\r\nof elements of those types that can be presented on a single line (gated\r\nunder `FFlag::LuauToStringSimpleCompositeTypesSingleLine`)\r\n- Adds a new option to the compiler `--record-stats` to record and\r\noutput compilation statistics\r\n- `if...then...else` expressions are now optimized into `AND/OR` form\r\nwhen possible.\r\n\r\n### VM\r\n\r\n- Add a new `buffer` type to Luau based on the [buffer\r\nRFC](https://github.com/Roblox/luau/pull/739) and additional C API\r\nfunctions to work with it; this release does not include the library.\r\n- Internal C API to work with string buffers has been updated to align\r\nwith Lua version more closely\r\n\r\n### Native Codegen\r\n\r\n- Added support for new X64 instruction (rev) and new A64 instruction\r\n(bswap) in the assembler\r\n- Simplified the way numerical loop condition is translated to IR\r\n\r\n### New Type Solver\r\n\r\n- Operator inference now handled by type families\r\n- Created a new system called `Type Paths` to explain why subtyping\r\ntests fail in order to improve the quality of error messages.\r\n- Systematic changes to implement Data Flow analysis in the new solver\r\n(`Breadcrumb` removed and replaced with `RefinementKey`)\r\n\r\n---\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>",
            "commit_timestamp": 1697850630.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697961861.592613,
            "elapsed_time": 381.4247477054596,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "fd6250cf9d2c96eef0959f7cc01c79c954eba60a",
            "commit_message": "Sync to upstream/release/600 (#1076)\n\n### What's Changed\r\n\r\n- Improve readability of unions and intersections by limiting the number\r\nof elements of those types that can be presented on a single line (gated\r\nunder `FFlag::LuauToStringSimpleCompositeTypesSingleLine`)\r\n- Adds a new option to the compiler `--record-stats` to record and\r\noutput compilation statistics\r\n- `if...then...else` expressions are now optimized into `AND/OR` form\r\nwhen possible.\r\n\r\n### VM\r\n\r\n- Add a new `buffer` type to Luau based on the [buffer\r\nRFC](https://github.com/Roblox/luau/pull/739) and additional C API\r\nfunctions to work with it; this release does not include the library.\r\n- Internal C API to work with string buffers has been updated to align\r\nwith Lua version more closely\r\n\r\n### Native Codegen\r\n\r\n- Added support for new X64 instruction (rev) and new A64 instruction\r\n(bswap) in the assembler\r\n- Simplified the way numerical loop condition is translated to IR\r\n\r\n### New Type Solver\r\n\r\n- Operator inference now handled by type families\r\n- Created a new system called `Type Paths` to explain why subtyping\r\ntests fail in order to improve the quality of error messages.\r\n- Systematic changes to implement Data Flow analysis in the new solver\r\n(`Breadcrumb` removed and replaced with `RefinementKey`)\r\n\r\n---\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>",
            "commit_timestamp": 1697850630.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697976191.139742,
            "elapsed_time": 354.51815152168274,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "fd6250cf9d2c96eef0959f7cc01c79c954eba60a",
            "commit_message": "Sync to upstream/release/600 (#1076)\n\n### What's Changed\r\n\r\n- Improve readability of unions and intersections by limiting the number\r\nof elements of those types that can be presented on a single line (gated\r\nunder `FFlag::LuauToStringSimpleCompositeTypesSingleLine`)\r\n- Adds a new option to the compiler `--record-stats` to record and\r\noutput compilation statistics\r\n- `if...then...else` expressions are now optimized into `AND/OR` form\r\nwhen possible.\r\n\r\n### VM\r\n\r\n- Add a new `buffer` type to Luau based on the [buffer\r\nRFC](https://github.com/Roblox/luau/pull/739) and additional C API\r\nfunctions to work with it; this release does not include the library.\r\n- Internal C API to work with string buffers has been updated to align\r\nwith Lua version more closely\r\n\r\n### Native Codegen\r\n\r\n- Added support for new X64 instruction (rev) and new A64 instruction\r\n(bswap) in the assembler\r\n- Simplified the way numerical loop condition is translated to IR\r\n\r\n### New Type Solver\r\n\r\n- Operator inference now handled by type families\r\n- Created a new system called `Type Paths` to explain why subtyping\r\ntests fail in order to improve the quality of error messages.\r\n- Systematic changes to implement Data Flow analysis in the new solver\r\n(`Breadcrumb` removed and replaced with `RefinementKey`)\r\n\r\n---\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>",
            "commit_timestamp": 1697850630.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1697990641.386817,
            "elapsed_time": 402.02828669548035,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "fd6250cf9d2c96eef0959f7cc01c79c954eba60a",
            "commit_message": "Sync to upstream/release/600 (#1076)\n\n### What's Changed\r\n\r\n- Improve readability of unions and intersections by limiting the number\r\nof elements of those types that can be presented on a single line (gated\r\nunder `FFlag::LuauToStringSimpleCompositeTypesSingleLine`)\r\n- Adds a new option to the compiler `--record-stats` to record and\r\noutput compilation statistics\r\n- `if...then...else` expressions are now optimized into `AND/OR` form\r\nwhen possible.\r\n\r\n### VM\r\n\r\n- Add a new `buffer` type to Luau based on the [buffer\r\nRFC](https://github.com/Roblox/luau/pull/739) and additional C API\r\nfunctions to work with it; this release does not include the library.\r\n- Internal C API to work with string buffers has been updated to align\r\nwith Lua version more closely\r\n\r\n### Native Codegen\r\n\r\n- Added support for new X64 instruction (rev) and new A64 instruction\r\n(bswap) in the assembler\r\n- Simplified the way numerical loop condition is translated to IR\r\n\r\n### New Type Solver\r\n\r\n- Operator inference now handled by type families\r\n- Created a new system called `Type Paths` to explain why subtyping\r\ntests fail in order to improve the quality of error messages.\r\n- Systematic changes to implement Data Flow analysis in the new solver\r\n(`Breadcrumb` removed and replaced with `RefinementKey`)\r\n\r\n---\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>",
            "commit_timestamp": 1697850630.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698005053.324467,
            "elapsed_time": 363.38117122650146,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "fd6250cf9d2c96eef0959f7cc01c79c954eba60a",
            "commit_message": "Sync to upstream/release/600 (#1076)\n\n### What's Changed\r\n\r\n- Improve readability of unions and intersections by limiting the number\r\nof elements of those types that can be presented on a single line (gated\r\nunder `FFlag::LuauToStringSimpleCompositeTypesSingleLine`)\r\n- Adds a new option to the compiler `--record-stats` to record and\r\noutput compilation statistics\r\n- `if...then...else` expressions are now optimized into `AND/OR` form\r\nwhen possible.\r\n\r\n### VM\r\n\r\n- Add a new `buffer` type to Luau based on the [buffer\r\nRFC](https://github.com/Roblox/luau/pull/739) and additional C API\r\nfunctions to work with it; this release does not include the library.\r\n- Internal C API to work with string buffers has been updated to align\r\nwith Lua version more closely\r\n\r\n### Native Codegen\r\n\r\n- Added support for new X64 instruction (rev) and new A64 instruction\r\n(bswap) in the assembler\r\n- Simplified the way numerical loop condition is translated to IR\r\n\r\n### New Type Solver\r\n\r\n- Operator inference now handled by type families\r\n- Created a new system called `Type Paths` to explain why subtyping\r\ntests fail in order to improve the quality of error messages.\r\n- Systematic changes to implement Data Flow analysis in the new solver\r\n(`Breadcrumb` removed and replaced with `RefinementKey`)\r\n\r\n---\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>",
            "commit_timestamp": 1697850630.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698074775.623241,
            "elapsed_time": 364.8950083255768,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "011c1afbde3a82712a4bffee1acc3bbdde319e2d",
            "commit_message": "Implement bit32.byteswap (#1075)\n\nI've decided to take a stab at implementing `bit32.byteswap` from the\r\n[recently merged\r\nRFC](https://github.com/Roblox/luau/blob/master/rfcs/function-bit32-byteswap.md).\r\nI asked on Discord for some guidance, but for the sake of posterity:\r\nthis is my first time doing this and I am likely to have made some\r\nmistakes.\r\n\r\nThe biggest gaps in this implementation are the lack of tests and the\r\nlack of native codegen support. I'd appreciate help with those since I'm\r\nnot sure what's relevant for me to touch for tests, and I'm told that\r\nrelevant assembler instructions don't exist publicly yet. Intuition\r\ntells me that Luau-side tests would go into\r\n`tests/conformance/bitwise.luau` but this is not well documented and I'm\r\nnot sure how I'm meant to test built-in implementations.\r\n\r\nThe current implementation compiles down to `bswap` and `rev` on x86 and\r\nARM respectively when optimized.\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>",
            "commit_timestamp": 1698073248.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698077008.282836,
            "elapsed_time": 445.39007449150085,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "13e3af27247020eda4759165a6f93aad122b1a7b",
            "commit_message": "Delete papers directory\n\nThe directory was moved to https://github.com/luau-lang/research\r\n\r\nSee https://github.com/Roblox/luau/issues/1074 for context",
            "commit_timestamp": 1698076928.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698091407.858,
            "elapsed_time": 416.6368896961212,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/Roblox/luau",
            "commit_ref": "13e3af27247020eda4759165a6f93aad122b1a7b",
            "commit_message": "Delete papers directory\n\nThe directory was moved to https://github.com/luau-lang/research\r\n\r\nSee https://github.com/Roblox/luau/issues/1074 for context",
            "commit_timestamp": 1698076928.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698177851.825192,
            "elapsed_time": 491.1870012283325,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "87d955d5eb579048b16542bb73ed3efd5208928b",
            "commit_message": "Fix remaining references to Roblox org outside of source code\n",
            "commit_timestamp": 1698168779.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698192282.325489,
            "elapsed_time": 376.48061180114746,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "87d955d5eb579048b16542bb73ed3efd5208928b",
            "commit_message": "Fix remaining references to Roblox org outside of source code\n",
            "commit_timestamp": 1698168779.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698206609.270756,
            "elapsed_time": 370.6836988925934,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "87d955d5eb579048b16542bb73ed3efd5208928b",
            "commit_message": "Fix remaining references to Roblox org outside of source code\n",
            "commit_timestamp": 1698168779.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698221058.567181,
            "elapsed_time": 382.7669117450714,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "87d955d5eb579048b16542bb73ed3efd5208928b",
            "commit_message": "Fix remaining references to Roblox org outside of source code\n",
            "commit_timestamp": 1698168779.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698235448.598472,
            "elapsed_time": 464.3173565864563,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "87d955d5eb579048b16542bb73ed3efd5208928b",
            "commit_message": "Fix remaining references to Roblox org outside of source code\n",
            "commit_timestamp": 1698168779.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698249828.283968,
            "elapsed_time": 370.474081993103,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "87d955d5eb579048b16542bb73ed3efd5208928b",
            "commit_message": "Fix remaining references to Roblox org outside of source code\n",
            "commit_timestamp": 1698168779.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698264232.412095,
            "elapsed_time": 371.92877769470215,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "87d955d5eb579048b16542bb73ed3efd5208928b",
            "commit_message": "Fix remaining references to Roblox org outside of source code\n",
            "commit_timestamp": 1698168779.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698278713.626776,
            "elapsed_time": 389.0617895126343,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "87d955d5eb579048b16542bb73ed3efd5208928b",
            "commit_message": "Fix remaining references to Roblox org outside of source code\n",
            "commit_timestamp": 1698168779.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698293002.784649,
            "elapsed_time": 504.1578164100647,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "87d955d5eb579048b16542bb73ed3efd5208928b",
            "commit_message": "Fix remaining references to Roblox org outside of source code\n",
            "commit_timestamp": 1698168779.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698307489.5861,
            "elapsed_time": 455.30283546447754,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "87d955d5eb579048b16542bb73ed3efd5208928b",
            "commit_message": "Fix remaining references to Roblox org outside of source code\n",
            "commit_timestamp": 1698168779.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698321876.721901,
            "elapsed_time": 454.5341522693634,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "87d955d5eb579048b16542bb73ed3efd5208928b",
            "commit_message": "Fix remaining references to Roblox org outside of source code\n",
            "commit_timestamp": 1698168779.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698336265.54378,
            "elapsed_time": 449.21637535095215,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "87d955d5eb579048b16542bb73ed3efd5208928b",
            "commit_message": "Fix remaining references to Roblox org outside of source code\n",
            "commit_timestamp": 1698168779.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698350670.632028,
            "elapsed_time": 407.20758152008057,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "87d955d5eb579048b16542bb73ed3efd5208928b",
            "commit_message": "Fix remaining references to Roblox org outside of source code\n",
            "commit_timestamp": 1698168779.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698365256.613094,
            "elapsed_time": 496.49720668792725,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "87d955d5eb579048b16542bb73ed3efd5208928b",
            "commit_message": "Fix remaining references to Roblox org outside of source code\n",
            "commit_timestamp": 1698168779.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698379404.821845,
            "elapsed_time": 365.61310625076294,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "87d955d5eb579048b16542bb73ed3efd5208928b",
            "commit_message": "Fix remaining references to Roblox org outside of source code\n",
            "commit_timestamp": 1698168779.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698393816.875289,
            "elapsed_time": 418.90461802482605,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "87d955d5eb579048b16542bb73ed3efd5208928b",
            "commit_message": "Fix remaining references to Roblox org outside of source code\n",
            "commit_timestamp": 1698168779.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698408318.019041,
            "elapsed_time": 401.0336675643921,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "87d955d5eb579048b16542bb73ed3efd5208928b",
            "commit_message": "Fix remaining references to Roblox org outside of source code\n",
            "commit_timestamp": 1698168779.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698422645.685379,
            "elapsed_time": 434.0957419872284,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "87d955d5eb579048b16542bb73ed3efd5208928b",
            "commit_message": "Fix remaining references to Roblox org outside of source code\n",
            "commit_timestamp": 1698168779.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698437033.341303,
            "elapsed_time": 436.7753071784973,
            "x64": false,
            "actual_files_count": 427,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "87d955d5eb579048b16542bb73ed3efd5208928b",
            "commit_message": "Fix remaining references to Roblox org outside of source code\n",
            "commit_timestamp": 1698168779.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698451475.467359,
            "elapsed_time": 373.7156665325165,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e5ec0cdff3cfaae6c2d2f3c0f0803ead164f12a1",
            "commit_message": "Sync to upstream/release/601 (#1084)\n\n## What's changed\r\n\r\n- `bit32.byteswap` added\r\n([RFC](https://github.com/luau-lang/rfcs/blob/4f543ec23b6a1b53396e0803dd253c83041bae62/docs/function-bit32-byteswap.md))\r\n- Buffer library implementation\r\n([RFC](https://github.com/luau-lang/rfcs/blob/4f543ec23b6a1b53396e0803dd253c83041bae62/docs/type-byte-buffer.md))\r\n- Fixed a missing `stdint.h` include\r\n- Fixed parser limiter for recursive type annotations being kind of\r\nweird (fixes #645)\r\n\r\n### Native Codegen\r\n- Fixed a pair of issues when lowering `bit32.extract`\r\n- Fixed a narrow edge case that could result in an infinite loop without\r\nan interruption\r\n- Fixed a negative array out-of-bounds access issue\r\n- Temporarily reverted linear block predecessor value propagation\r\n\r\n### New type solver\r\n- We now type check assignments to annotated variables\r\n- Fixed some test cases under local type inference\r\n- Moved `isPending` checks for type families to improve performance\r\n- Optimized our process for testing if a free type is sufficiently\r\nsolved\r\n- Removed \"none ptr\" from lea instruction disassembly logging\r\n\r\n### Build system & tooling\r\n- CMake configuration now validates dependencies to maintain separation\r\nbetween components\r\n- Improvements to the fuzzer coverage\r\n- Deduplicator for fuzzed callstacks\r\n\r\n---------\r\n\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>",
            "commit_timestamp": 1698441521.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698465807.819811,
            "elapsed_time": 375.5361785888672,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "45f4b87991cb5de409a17d3330c0a834fd87be3c",
            "commit_message": "Attempt to disable codecov patch status check\n",
            "commit_timestamp": 1698451877.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698480166.698056,
            "elapsed_time": 468.8356204032898,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "45f4b87991cb5de409a17d3330c0a834fd87be3c",
            "commit_message": "Attempt to disable codecov patch status check\n",
            "commit_timestamp": 1698451877.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698494683.889956,
            "elapsed_time": 352.25433897972107,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "45f4b87991cb5de409a17d3330c0a834fd87be3c",
            "commit_message": "Attempt to disable codecov patch status check\n",
            "commit_timestamp": 1698451877.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698508947.576162,
            "elapsed_time": 410.95720505714417,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "45f4b87991cb5de409a17d3330c0a834fd87be3c",
            "commit_message": "Attempt to disable codecov patch status check\n",
            "commit_timestamp": 1698451877.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698523419.173385,
            "elapsed_time": 372.8347101211548,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "45f4b87991cb5de409a17d3330c0a834fd87be3c",
            "commit_message": "Attempt to disable codecov patch status check\n",
            "commit_timestamp": 1698451877.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698537854.254532,
            "elapsed_time": 347.36947107315063,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "45f4b87991cb5de409a17d3330c0a834fd87be3c",
            "commit_message": "Attempt to disable codecov patch status check\n",
            "commit_timestamp": 1698451877.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698552185.851407,
            "elapsed_time": 356.9764335155487,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "45f4b87991cb5de409a17d3330c0a834fd87be3c",
            "commit_message": "Attempt to disable codecov patch status check\n",
            "commit_timestamp": 1698451877.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698566568.717953,
            "elapsed_time": 348.03133964538574,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "45f4b87991cb5de409a17d3330c0a834fd87be3c",
            "commit_message": "Attempt to disable codecov patch status check\n",
            "commit_timestamp": 1698451877.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698580995.335442,
            "elapsed_time": 461.7114770412445,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "45f4b87991cb5de409a17d3330c0a834fd87be3c",
            "commit_message": "Attempt to disable codecov patch status check\n",
            "commit_timestamp": 1698451877.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698595407.532695,
            "elapsed_time": 447.2556359767914,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "45f4b87991cb5de409a17d3330c0a834fd87be3c",
            "commit_message": "Attempt to disable codecov patch status check\n",
            "commit_timestamp": 1698451877.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698599444.877677,
            "elapsed_time": 372.4869146347046,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "45f4b87991cb5de409a17d3330c0a834fd87be3c",
            "commit_message": "Attempt to disable codecov patch status check\n",
            "commit_timestamp": 1698451877.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698599674.321443,
            "elapsed_time": 395.1422142982483,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "45f4b87991cb5de409a17d3330c0a834fd87be3c",
            "commit_message": "Attempt to disable codecov patch status check\n",
            "commit_timestamp": 1698451877.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698602935.851903,
            "elapsed_time": 420.795969247818,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "45f4b87991cb5de409a17d3330c0a834fd87be3c",
            "commit_message": "Attempt to disable codecov patch status check\n",
            "commit_timestamp": 1698451877.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698607010.856715,
            "elapsed_time": 532.2702021598816,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "45f4b87991cb5de409a17d3330c0a834fd87be3c",
            "commit_message": "Attempt to disable codecov patch status check\n",
            "commit_timestamp": 1698451877.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698609821.327221,
            "elapsed_time": 370.6120045185089,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "45f4b87991cb5de409a17d3330c0a834fd87be3c",
            "commit_message": "Attempt to disable codecov patch status check\n",
            "commit_timestamp": 1698451877.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698611593.584384,
            "elapsed_time": 405.52399921417236,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "45f4b87991cb5de409a17d3330c0a834fd87be3c",
            "commit_message": "Attempt to disable codecov patch status check\n",
            "commit_timestamp": 1698451877.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698624319.167788,
            "elapsed_time": 372.6347348690033,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "45f4b87991cb5de409a17d3330c0a834fd87be3c",
            "commit_message": "Attempt to disable codecov patch status check\n",
            "commit_timestamp": 1698451877.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698638605.438001,
            "elapsed_time": 368.5959553718567,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "45f4b87991cb5de409a17d3330c0a834fd87be3c",
            "commit_message": "Attempt to disable codecov patch status check\n",
            "commit_timestamp": 1698451877.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698653040.191903,
            "elapsed_time": 383.093382358551,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "45f4b87991cb5de409a17d3330c0a834fd87be3c",
            "commit_message": "Attempt to disable codecov patch status check\n",
            "commit_timestamp": 1698451877.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698667423.684733,
            "elapsed_time": 462.3965845108032,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "45f4b87991cb5de409a17d3330c0a834fd87be3c",
            "commit_message": "Attempt to disable codecov patch status check\n",
            "commit_timestamp": 1698451877.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698681852.187625,
            "elapsed_time": 476.4463458061218,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "6d564abf81d9967658beb344ec3a504e07915fd7",
            "commit_message": "Update README.md\n\nCorrect links and language to docs and RFCs repository and mention usage in non-Roblox games.",
            "commit_timestamp": 1698681742.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698696199.563011,
            "elapsed_time": 383.7036118507385,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "b647288375e032405f57eaf14cd47dce81e4fa03",
            "commit_message": "Delete rfcs directory\n\nThis folder is now hosted in a separate repository https://github.com/luau-lang/rfcs (see https://github.com/luau-lang/luau/issues/1074 for details)",
            "commit_timestamp": 1698688176.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698710726.676558,
            "elapsed_time": 454.34839487075806,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "b647288375e032405f57eaf14cd47dce81e4fa03",
            "commit_message": "Delete rfcs directory\n\nThis folder is now hosted in a separate repository https://github.com/luau-lang/rfcs (see https://github.com/luau-lang/luau/issues/1074 for details)",
            "commit_timestamp": 1698688176.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698724981.18571,
            "elapsed_time": 385.6070463657379,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "b647288375e032405f57eaf14cd47dce81e4fa03",
            "commit_message": "Delete rfcs directory\n\nThis folder is now hosted in a separate repository https://github.com/luau-lang/rfcs (see https://github.com/luau-lang/luau/issues/1074 for details)",
            "commit_timestamp": 1698688176.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698739416.941284,
            "elapsed_time": 468.2317945957184,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "b647288375e032405f57eaf14cd47dce81e4fa03",
            "commit_message": "Delete rfcs directory\n\nThis folder is now hosted in a separate repository https://github.com/luau-lang/rfcs (see https://github.com/luau-lang/luau/issues/1074 for details)",
            "commit_timestamp": 1698688176.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698753822.575854,
            "elapsed_time": 452.3418173789978,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "b647288375e032405f57eaf14cd47dce81e4fa03",
            "commit_message": "Delete rfcs directory\n\nThis folder is now hosted in a separate repository https://github.com/luau-lang/rfcs (see https://github.com/luau-lang/luau/issues/1074 for details)",
            "commit_timestamp": 1698688176.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698768207.40331,
            "elapsed_time": 448.6608476638794,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "b647288375e032405f57eaf14cd47dce81e4fa03",
            "commit_message": "Delete rfcs directory\n\nThis folder is now hosted in a separate repository https://github.com/luau-lang/rfcs (see https://github.com/luau-lang/luau/issues/1074 for details)",
            "commit_timestamp": 1698688176.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698782574.925769,
            "elapsed_time": 283.42790842056274,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "b647288375e032405f57eaf14cd47dce81e4fa03",
            "commit_message": "Delete rfcs directory\n\nThis folder is now hosted in a separate repository https://github.com/luau-lang/rfcs (see https://github.com/luau-lang/luau/issues/1074 for details)",
            "commit_timestamp": 1698688176.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698797107.219663,
            "elapsed_time": 418.25154066085815,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "b647288375e032405f57eaf14cd47dce81e4fa03",
            "commit_message": "Delete rfcs directory\n\nThis folder is now hosted in a separate repository https://github.com/luau-lang/rfcs (see https://github.com/luau-lang/luau/issues/1074 for details)",
            "commit_timestamp": 1698688176.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698811365.672474,
            "elapsed_time": 264.98117756843567,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "b647288375e032405f57eaf14cd47dce81e4fa03",
            "commit_message": "Delete rfcs directory\n\nThis folder is now hosted in a separate repository https://github.com/luau-lang/rfcs (see https://github.com/luau-lang/luau/issues/1074 for details)",
            "commit_timestamp": 1698688176.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698825888.019523,
            "elapsed_time": 497.1708974838257,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "b647288375e032405f57eaf14cd47dce81e4fa03",
            "commit_message": "Delete rfcs directory\n\nThis folder is now hosted in a separate repository https://github.com/luau-lang/rfcs (see https://github.com/luau-lang/luau/issues/1074 for details)",
            "commit_timestamp": 1698688176.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698840202.618229,
            "elapsed_time": 363.8324980735779,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "b647288375e032405f57eaf14cd47dce81e4fa03",
            "commit_message": "Delete rfcs directory\n\nThis folder is now hosted in a separate repository https://github.com/luau-lang/rfcs (see https://github.com/luau-lang/luau/issues/1074 for details)",
            "commit_timestamp": 1698688176.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698848973.165324,
            "elapsed_time": 418.21219062805176,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "b647288375e032405f57eaf14cd47dce81e4fa03",
            "commit_message": "Delete rfcs directory\n\nThis folder is now hosted in a separate repository https://github.com/luau-lang/rfcs (see https://github.com/luau-lang/luau/issues/1074 for details)",
            "commit_timestamp": 1698688176.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698855226.553645,
            "elapsed_time": 457.2891843318939,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "b647288375e032405f57eaf14cd47dce81e4fa03",
            "commit_message": "Delete rfcs directory\n\nThis folder is now hosted in a separate repository https://github.com/luau-lang/rfcs (see https://github.com/luau-lang/luau/issues/1074 for details)",
            "commit_timestamp": 1698688176.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698854584.971038,
            "elapsed_time": 444.9888617992401,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "b647288375e032405f57eaf14cd47dce81e4fa03",
            "commit_message": "Delete rfcs directory\n\nThis folder is now hosted in a separate repository https://github.com/luau-lang/rfcs (see https://github.com/luau-lang/luau/issues/1074 for details)",
            "commit_timestamp": 1698688176.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698868973.153982,
            "elapsed_time": 357.42788767814636,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "b647288375e032405f57eaf14cd47dce81e4fa03",
            "commit_message": "Delete rfcs directory\n\nThis folder is now hosted in a separate repository https://github.com/luau-lang/rfcs (see https://github.com/luau-lang/luau/issues/1074 for details)",
            "commit_timestamp": 1698688176.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698883513.995738,
            "elapsed_time": 376.7176606655121,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "b647288375e032405f57eaf14cd47dce81e4fa03",
            "commit_message": "Delete rfcs directory\n\nThis folder is now hosted in a separate repository https://github.com/luau-lang/rfcs (see https://github.com/luau-lang/luau/issues/1074 for details)",
            "commit_timestamp": 1698688176.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698897744.540553,
            "elapsed_time": 264.54484963417053,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "5622474b6a3159bb94bcaedbb1633482f7338fde",
            "commit_message": "Merge remote-tracking branch 'origin/merge'\n",
            "commit_timestamp": 1698887477.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698912208.636676,
            "elapsed_time": 461.57542753219604,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "5622474b6a3159bb94bcaedbb1633482f7338fde",
            "commit_message": "Merge remote-tracking branch 'origin/merge'\n",
            "commit_timestamp": 1698887477.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698926566.57853,
            "elapsed_time": 500.22208881378174,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "5622474b6a3159bb94bcaedbb1633482f7338fde",
            "commit_message": "Merge remote-tracking branch 'origin/merge'\n",
            "commit_timestamp": 1698887477.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698941024.098887,
            "elapsed_time": 471.9496159553528,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "5622474b6a3159bb94bcaedbb1633482f7338fde",
            "commit_message": "Merge remote-tracking branch 'origin/merge'\n",
            "commit_timestamp": 1698887477.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698955397.545715,
            "elapsed_time": 302.76117038726807,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1a9159daff5fabfb3419a9cf728434d9a8e5d876",
            "commit_message": "Record table type alias property locations (#1046)\n\nFor table type aliases, records the location of the property in the\r\nalias declaration.\r\n\r\nThis is an alternate solution to the particular case noted in #802.\r\nInstead of tracking the type alias definition for FTVs, it tracks it for\r\nthe encompassing property instead.\r\n\r\nNote that we still don't have positions in the following case:\r\n\r\n```\r\ntype Func = () -> ()\r\n```\r\n\r\nCloses #802 (Although not completely...)",
            "commit_timestamp": 1698941691.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698969943.431627,
            "elapsed_time": 401.3844873905182,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1a9159daff5fabfb3419a9cf728434d9a8e5d876",
            "commit_message": "Record table type alias property locations (#1046)\n\nFor table type aliases, records the location of the property in the\r\nalias declaration.\r\n\r\nThis is an alternate solution to the particular case noted in #802.\r\nInstead of tracking the type alias definition for FTVs, it tracks it for\r\nthe encompassing property instead.\r\n\r\nNote that we still don't have positions in the following case:\r\n\r\n```\r\ntype Func = () -> ()\r\n```\r\n\r\nCloses #802 (Although not completely...)",
            "commit_timestamp": 1698941691.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698984193.989052,
            "elapsed_time": 268.5579447746277,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1a9159daff5fabfb3419a9cf728434d9a8e5d876",
            "commit_message": "Record table type alias property locations (#1046)\n\nFor table type aliases, records the location of the property in the\r\nalias declaration.\r\n\r\nThis is an alternate solution to the particular case noted in #802.\r\nInstead of tracking the type alias definition for FTVs, it tracks it for\r\nthe encompassing property instead.\r\n\r\nNote that we still don't have positions in the following case:\r\n\r\n```\r\ntype Func = () -> ()\r\n```\r\n\r\nCloses #802 (Although not completely...)",
            "commit_timestamp": 1698941691.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1698998545.902134,
            "elapsed_time": 261.45902013778687,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1a9159daff5fabfb3419a9cf728434d9a8e5d876",
            "commit_message": "Record table type alias property locations (#1046)\n\nFor table type aliases, records the location of the property in the\r\nalias declaration.\r\n\r\nThis is an alternate solution to the particular case noted in #802.\r\nInstead of tracking the type alias definition for FTVs, it tracks it for\r\nthe encompassing property instead.\r\n\r\nNote that we still don't have positions in the following case:\r\n\r\n```\r\ntype Func = () -> ()\r\n```\r\n\r\nCloses #802 (Although not completely...)",
            "commit_timestamp": 1698941691.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699013027.398464,
            "elapsed_time": 267.0148823261261,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1a9159daff5fabfb3419a9cf728434d9a8e5d876",
            "commit_message": "Record table type alias property locations (#1046)\n\nFor table type aliases, records the location of the property in the\r\nalias declaration.\r\n\r\nThis is an alternate solution to the particular case noted in #802.\r\nInstead of tracking the type alias definition for FTVs, it tracks it for\r\nthe encompassing property instead.\r\n\r\nNote that we still don't have positions in the following case:\r\n\r\n```\r\ntype Func = () -> ()\r\n```\r\n\r\nCloses #802 (Although not completely...)",
            "commit_timestamp": 1698941691.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699027415.476538,
            "elapsed_time": 405.89847445487976,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1a9159daff5fabfb3419a9cf728434d9a8e5d876",
            "commit_message": "Record table type alias property locations (#1046)\n\nFor table type aliases, records the location of the property in the\r\nalias declaration.\r\n\r\nThis is an alternate solution to the particular case noted in #802.\r\nInstead of tracking the type alias definition for FTVs, it tracks it for\r\nthe encompassing property instead.\r\n\r\nNote that we still don't have positions in the following case:\r\n\r\n```\r\ntype Func = () -> ()\r\n```\r\n\r\nCloses #802 (Although not completely...)",
            "commit_timestamp": 1698941691.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699041776.986774,
            "elapsed_time": 266.00726437568665,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1a9159daff5fabfb3419a9cf728434d9a8e5d876",
            "commit_message": "Record table type alias property locations (#1046)\n\nFor table type aliases, records the location of the property in the\r\nalias declaration.\r\n\r\nThis is an alternate solution to the particular case noted in #802.\r\nInstead of tracking the type alias definition for FTVs, it tracks it for\r\nthe encompassing property instead.\r\n\r\nNote that we still don't have positions in the following case:\r\n\r\n```\r\ntype Func = () -> ()\r\n```\r\n\r\nCloses #802 (Although not completely...)",
            "commit_timestamp": 1698941691.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699056329.924872,
            "elapsed_time": 392.47029542922974,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699070537.837197,
            "elapsed_time": 262.8059048652649,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699084949.144975,
            "elapsed_time": 503.8722937107086,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699099458.620083,
            "elapsed_time": 433.12497878074646,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699113735.918406,
            "elapsed_time": 348.97323989868164,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699128127.9624,
            "elapsed_time": 261.6604106426239,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699142640.116741,
            "elapsed_time": 430.5143485069275,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699157013.93921,
            "elapsed_time": 397.5255777835846,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699171359.317894,
            "elapsed_time": 268.6747057437897,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699185789.365955,
            "elapsed_time": 352.6422212123871,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699200133.022122,
            "elapsed_time": 260.73574924468994,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699214552.312292,
            "elapsed_time": 260.6584906578064,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699229059.785938,
            "elapsed_time": 274.2345790863037,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699243420.852687,
            "elapsed_time": 291.5147776603699,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699257753.381444,
            "elapsed_time": 260.9023184776306,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699272231.996742,
            "elapsed_time": 376.9527280330658,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699286620.835918,
            "elapsed_time": 401.7778489589691,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699301023.693455,
            "elapsed_time": 285.94939041137695,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699315417.167989,
            "elapsed_time": 264.02731490135193,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699329780.290788,
            "elapsed_time": 287.79904413223267,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699344228.071404,
            "elapsed_time": 283.8813614845276,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699358648.12275,
            "elapsed_time": 470.7968053817749,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699372984.549144,
            "elapsed_time": 288.0176651477814,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699387389.195725,
            "elapsed_time": 283.4878890514374,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699401821.392741,
            "elapsed_time": 261.2662627696991,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699416146.662774,
            "elapsed_time": 267.4507520198822,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699430595.849481,
            "elapsed_time": 281.92033553123474,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699444998.567015,
            "elapsed_time": 270.3714108467102,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699459351.025996,
            "elapsed_time": 267.4551327228546,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699473885.752298,
            "elapsed_time": 459.3633167743683,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699488285.036554,
            "elapsed_time": 377.13608598709106,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699502622.795113,
            "elapsed_time": 298.7344889640808,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699517023.001727,
            "elapsed_time": 391.17527985572815,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699531462.129551,
            "elapsed_time": 301.1099326610565,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699545817.331175,
            "elapsed_time": 377.5524892807007,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699560161.670982,
            "elapsed_time": 280.42560172080994,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699574700.820074,
            "elapsed_time": 291.60414028167725,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699588942.929222,
            "elapsed_time": 265.4036719799042,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699603430.056539,
            "elapsed_time": 403.4475932121277,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699617867.373343,
            "elapsed_time": 462.4369342327118,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699632173.890545,
            "elapsed_time": 462.26689052581787,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699646557.461203,
            "elapsed_time": 423.9184889793396,
            "x64": false,
            "actual_files_count": 428,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7105c815797cbc5404566db22b807b0579b75ca5",
            "commit_message": "Sync to upstream/release/602 (#1089)\n\n# What's changed?\r\n\r\n* Fixed a bug in type cloning by maintaining persistent types.\r\n* We now parse imprecise integer literals to report the imprecision as a\r\nwarning to developers.\r\n* Add a compiler flag to specify the name of the statistics output file.\r\n\r\n### New type solver\r\n\r\n* Renamed `ConstraintGraphBuilder` to `ConstraintGenerator`\r\n* LValues now take into account the type being assigned during\r\nconstraint generation.\r\n* Normalization performance has been improved by 33% by replacing the an\r\ninternal usage of `std::unordered_set` with `DenseHashMap`.\r\n* Normalization now has a helper to identify types that are equivalent\r\nto `unknown`, which is being used to fix some bugs in subtyping.\r\n* Uses of the old unifier in the new type solver have been eliminated.\r\n* Improved error explanations for subtyping errors in `TypeChecker2`.\r\n\r\n### Native code generation\r\n\r\n* Expanded some of the statistics recorded during compilation to include\r\nthe number of instructions and blocks.\r\n* Introduce instruction and block count limiters for controlling what\r\nbytecode is translated into native code.\r\n* Implement code generation for byteswap instruction.\r\n\r\n### Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>",
            "commit_timestamp": 1699055104.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699661149.658388,
            "elapsed_time": 507.62415194511414,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c2ba1058c35315a71e6f4b3fdf5b415a9a45bc80",
            "commit_message": "Sync to upstream/release/603 (#1097)\n\n# What's changed?\r\n\r\n- Record the location of properties for table types (closes #802)\r\n- Implement stricter UTF-8 validations as per the RFC\r\n(https://github.com/luau-lang/rfcs/pull/1)\r\n- Implement `buffer` as a new type in both the old and new solvers.\r\n- Changed errors produced by some `buffer` builtins to be a bit more\r\ngeneric to avoid platform-dependent error messages.\r\n- Fixed a bug where `Unifier` would copy some persistent types, tripping\r\nsome internal assertions.\r\n- Type checking rules on relational operators is now a little bit more\r\nlax.\r\n- Improve dead code elimination for some `if` statements with complex\r\nalways-false conditions\r\n\r\n## New type solver\r\n\r\n- Dataflow analysis now generates phi nodes on exit of branches.\r\n- Dataflow analysis avoids producing a new definition for locals or\r\nproperties that are not owned by that loop.\r\n- If a function parameter has been constrained to `never`, report errors\r\nat all uses of that parameter within that function.\r\n- Switch to using the new `Luau::Set` to replace `std::unordered_set` to\r\nalleviate some poor allocation characteristics which was negatively\r\naffecting overall performance.\r\n- Subtyping can now report many failing reasons instead of just the\r\nfirst one that we happened to find during the test.\r\n- Subtyping now also report reasons for type pack mismatches.\r\n- When visiting `if` statements or expressions, the resulting context\r\nare the common terms in both branches.\r\n\r\n## Native codegen\r\n\r\n- Implement support for `buffer` builtins to its IR for x64 and A64.\r\n- Optimized `table.insert` by not inserting a table barrier if it is\r\nfastcalled with a constant.\r\n\r\n## Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1699650607.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699675378.264741,
            "elapsed_time": 373.53369545936584,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c2ba1058c35315a71e6f4b3fdf5b415a9a45bc80",
            "commit_message": "Sync to upstream/release/603 (#1097)\n\n# What's changed?\r\n\r\n- Record the location of properties for table types (closes #802)\r\n- Implement stricter UTF-8 validations as per the RFC\r\n(https://github.com/luau-lang/rfcs/pull/1)\r\n- Implement `buffer` as a new type in both the old and new solvers.\r\n- Changed errors produced by some `buffer` builtins to be a bit more\r\ngeneric to avoid platform-dependent error messages.\r\n- Fixed a bug where `Unifier` would copy some persistent types, tripping\r\nsome internal assertions.\r\n- Type checking rules on relational operators is now a little bit more\r\nlax.\r\n- Improve dead code elimination for some `if` statements with complex\r\nalways-false conditions\r\n\r\n## New type solver\r\n\r\n- Dataflow analysis now generates phi nodes on exit of branches.\r\n- Dataflow analysis avoids producing a new definition for locals or\r\nproperties that are not owned by that loop.\r\n- If a function parameter has been constrained to `never`, report errors\r\nat all uses of that parameter within that function.\r\n- Switch to using the new `Luau::Set` to replace `std::unordered_set` to\r\nalleviate some poor allocation characteristics which was negatively\r\naffecting overall performance.\r\n- Subtyping can now report many failing reasons instead of just the\r\nfirst one that we happened to find during the test.\r\n- Subtyping now also report reasons for type pack mismatches.\r\n- When visiting `if` statements or expressions, the resulting context\r\nare the common terms in both branches.\r\n\r\n## Native codegen\r\n\r\n- Implement support for `buffer` builtins to its IR for x64 and A64.\r\n- Optimized `table.insert` by not inserting a table barrier if it is\r\nfastcalled with a constant.\r\n\r\n## Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1699650607.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699689806.989949,
            "elapsed_time": 444.505898475647,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c2ba1058c35315a71e6f4b3fdf5b415a9a45bc80",
            "commit_message": "Sync to upstream/release/603 (#1097)\n\n# What's changed?\r\n\r\n- Record the location of properties for table types (closes #802)\r\n- Implement stricter UTF-8 validations as per the RFC\r\n(https://github.com/luau-lang/rfcs/pull/1)\r\n- Implement `buffer` as a new type in both the old and new solvers.\r\n- Changed errors produced by some `buffer` builtins to be a bit more\r\ngeneric to avoid platform-dependent error messages.\r\n- Fixed a bug where `Unifier` would copy some persistent types, tripping\r\nsome internal assertions.\r\n- Type checking rules on relational operators is now a little bit more\r\nlax.\r\n- Improve dead code elimination for some `if` statements with complex\r\nalways-false conditions\r\n\r\n## New type solver\r\n\r\n- Dataflow analysis now generates phi nodes on exit of branches.\r\n- Dataflow analysis avoids producing a new definition for locals or\r\nproperties that are not owned by that loop.\r\n- If a function parameter has been constrained to `never`, report errors\r\nat all uses of that parameter within that function.\r\n- Switch to using the new `Luau::Set` to replace `std::unordered_set` to\r\nalleviate some poor allocation characteristics which was negatively\r\naffecting overall performance.\r\n- Subtyping can now report many failing reasons instead of just the\r\nfirst one that we happened to find during the test.\r\n- Subtyping now also report reasons for type pack mismatches.\r\n- When visiting `if` statements or expressions, the resulting context\r\nare the common terms in both branches.\r\n\r\n## Native codegen\r\n\r\n- Implement support for `buffer` builtins to its IR for x64 and A64.\r\n- Optimized `table.insert` by not inserting a table barrier if it is\r\nfastcalled with a constant.\r\n\r\n## Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1699650607.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699704217.18171,
            "elapsed_time": 481.24203157424927,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c2ba1058c35315a71e6f4b3fdf5b415a9a45bc80",
            "commit_message": "Sync to upstream/release/603 (#1097)\n\n# What's changed?\r\n\r\n- Record the location of properties for table types (closes #802)\r\n- Implement stricter UTF-8 validations as per the RFC\r\n(https://github.com/luau-lang/rfcs/pull/1)\r\n- Implement `buffer` as a new type in both the old and new solvers.\r\n- Changed errors produced by some `buffer` builtins to be a bit more\r\ngeneric to avoid platform-dependent error messages.\r\n- Fixed a bug where `Unifier` would copy some persistent types, tripping\r\nsome internal assertions.\r\n- Type checking rules on relational operators is now a little bit more\r\nlax.\r\n- Improve dead code elimination for some `if` statements with complex\r\nalways-false conditions\r\n\r\n## New type solver\r\n\r\n- Dataflow analysis now generates phi nodes on exit of branches.\r\n- Dataflow analysis avoids producing a new definition for locals or\r\nproperties that are not owned by that loop.\r\n- If a function parameter has been constrained to `never`, report errors\r\nat all uses of that parameter within that function.\r\n- Switch to using the new `Luau::Set` to replace `std::unordered_set` to\r\nalleviate some poor allocation characteristics which was negatively\r\naffecting overall performance.\r\n- Subtyping can now report many failing reasons instead of just the\r\nfirst one that we happened to find during the test.\r\n- Subtyping now also report reasons for type pack mismatches.\r\n- When visiting `if` statements or expressions, the resulting context\r\nare the common terms in both branches.\r\n\r\n## Native codegen\r\n\r\n- Implement support for `buffer` builtins to its IR for x64 and A64.\r\n- Optimized `table.insert` by not inserting a table barrier if it is\r\nfastcalled with a constant.\r\n\r\n## Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1699650607.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699718605.752399,
            "elapsed_time": 277.06722950935364,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c2ba1058c35315a71e6f4b3fdf5b415a9a45bc80",
            "commit_message": "Sync to upstream/release/603 (#1097)\n\n# What's changed?\r\n\r\n- Record the location of properties for table types (closes #802)\r\n- Implement stricter UTF-8 validations as per the RFC\r\n(https://github.com/luau-lang/rfcs/pull/1)\r\n- Implement `buffer` as a new type in both the old and new solvers.\r\n- Changed errors produced by some `buffer` builtins to be a bit more\r\ngeneric to avoid platform-dependent error messages.\r\n- Fixed a bug where `Unifier` would copy some persistent types, tripping\r\nsome internal assertions.\r\n- Type checking rules on relational operators is now a little bit more\r\nlax.\r\n- Improve dead code elimination for some `if` statements with complex\r\nalways-false conditions\r\n\r\n## New type solver\r\n\r\n- Dataflow analysis now generates phi nodes on exit of branches.\r\n- Dataflow analysis avoids producing a new definition for locals or\r\nproperties that are not owned by that loop.\r\n- If a function parameter has been constrained to `never`, report errors\r\nat all uses of that parameter within that function.\r\n- Switch to using the new `Luau::Set` to replace `std::unordered_set` to\r\nalleviate some poor allocation characteristics which was negatively\r\naffecting overall performance.\r\n- Subtyping can now report many failing reasons instead of just the\r\nfirst one that we happened to find during the test.\r\n- Subtyping now also report reasons for type pack mismatches.\r\n- When visiting `if` statements or expressions, the resulting context\r\nare the common terms in both branches.\r\n\r\n## Native codegen\r\n\r\n- Implement support for `buffer` builtins to its IR for x64 and A64.\r\n- Optimized `table.insert` by not inserting a table barrier if it is\r\nfastcalled with a constant.\r\n\r\n## Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1699650607.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699732984.904918,
            "elapsed_time": 285.52278661727905,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c2ba1058c35315a71e6f4b3fdf5b415a9a45bc80",
            "commit_message": "Sync to upstream/release/603 (#1097)\n\n# What's changed?\r\n\r\n- Record the location of properties for table types (closes #802)\r\n- Implement stricter UTF-8 validations as per the RFC\r\n(https://github.com/luau-lang/rfcs/pull/1)\r\n- Implement `buffer` as a new type in both the old and new solvers.\r\n- Changed errors produced by some `buffer` builtins to be a bit more\r\ngeneric to avoid platform-dependent error messages.\r\n- Fixed a bug where `Unifier` would copy some persistent types, tripping\r\nsome internal assertions.\r\n- Type checking rules on relational operators is now a little bit more\r\nlax.\r\n- Improve dead code elimination for some `if` statements with complex\r\nalways-false conditions\r\n\r\n## New type solver\r\n\r\n- Dataflow analysis now generates phi nodes on exit of branches.\r\n- Dataflow analysis avoids producing a new definition for locals or\r\nproperties that are not owned by that loop.\r\n- If a function parameter has been constrained to `never`, report errors\r\nat all uses of that parameter within that function.\r\n- Switch to using the new `Luau::Set` to replace `std::unordered_set` to\r\nalleviate some poor allocation characteristics which was negatively\r\naffecting overall performance.\r\n- Subtyping can now report many failing reasons instead of just the\r\nfirst one that we happened to find during the test.\r\n- Subtyping now also report reasons for type pack mismatches.\r\n- When visiting `if` statements or expressions, the resulting context\r\nare the common terms in both branches.\r\n\r\n## Native codegen\r\n\r\n- Implement support for `buffer` builtins to its IR for x64 and A64.\r\n- Optimized `table.insert` by not inserting a table barrier if it is\r\nfastcalled with a constant.\r\n\r\n## Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1699650607.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699747436.33573,
            "elapsed_time": 276.92267298698425,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c2ba1058c35315a71e6f4b3fdf5b415a9a45bc80",
            "commit_message": "Sync to upstream/release/603 (#1097)\n\n# What's changed?\r\n\r\n- Record the location of properties for table types (closes #802)\r\n- Implement stricter UTF-8 validations as per the RFC\r\n(https://github.com/luau-lang/rfcs/pull/1)\r\n- Implement `buffer` as a new type in both the old and new solvers.\r\n- Changed errors produced by some `buffer` builtins to be a bit more\r\ngeneric to avoid platform-dependent error messages.\r\n- Fixed a bug where `Unifier` would copy some persistent types, tripping\r\nsome internal assertions.\r\n- Type checking rules on relational operators is now a little bit more\r\nlax.\r\n- Improve dead code elimination for some `if` statements with complex\r\nalways-false conditions\r\n\r\n## New type solver\r\n\r\n- Dataflow analysis now generates phi nodes on exit of branches.\r\n- Dataflow analysis avoids producing a new definition for locals or\r\nproperties that are not owned by that loop.\r\n- If a function parameter has been constrained to `never`, report errors\r\nat all uses of that parameter within that function.\r\n- Switch to using the new `Luau::Set` to replace `std::unordered_set` to\r\nalleviate some poor allocation characteristics which was negatively\r\naffecting overall performance.\r\n- Subtyping can now report many failing reasons instead of just the\r\nfirst one that we happened to find during the test.\r\n- Subtyping now also report reasons for type pack mismatches.\r\n- When visiting `if` statements or expressions, the resulting context\r\nare the common terms in both branches.\r\n\r\n## Native codegen\r\n\r\n- Implement support for `buffer` builtins to its IR for x64 and A64.\r\n- Optimized `table.insert` by not inserting a table barrier if it is\r\nfastcalled with a constant.\r\n\r\n## Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1699650607.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699761789.873014,
            "elapsed_time": 272.2876441478729,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c2ba1058c35315a71e6f4b3fdf5b415a9a45bc80",
            "commit_message": "Sync to upstream/release/603 (#1097)\n\n# What's changed?\r\n\r\n- Record the location of properties for table types (closes #802)\r\n- Implement stricter UTF-8 validations as per the RFC\r\n(https://github.com/luau-lang/rfcs/pull/1)\r\n- Implement `buffer` as a new type in both the old and new solvers.\r\n- Changed errors produced by some `buffer` builtins to be a bit more\r\ngeneric to avoid platform-dependent error messages.\r\n- Fixed a bug where `Unifier` would copy some persistent types, tripping\r\nsome internal assertions.\r\n- Type checking rules on relational operators is now a little bit more\r\nlax.\r\n- Improve dead code elimination for some `if` statements with complex\r\nalways-false conditions\r\n\r\n## New type solver\r\n\r\n- Dataflow analysis now generates phi nodes on exit of branches.\r\n- Dataflow analysis avoids producing a new definition for locals or\r\nproperties that are not owned by that loop.\r\n- If a function parameter has been constrained to `never`, report errors\r\nat all uses of that parameter within that function.\r\n- Switch to using the new `Luau::Set` to replace `std::unordered_set` to\r\nalleviate some poor allocation characteristics which was negatively\r\naffecting overall performance.\r\n- Subtyping can now report many failing reasons instead of just the\r\nfirst one that we happened to find during the test.\r\n- Subtyping now also report reasons for type pack mismatches.\r\n- When visiting `if` statements or expressions, the resulting context\r\nare the common terms in both branches.\r\n\r\n## Native codegen\r\n\r\n- Implement support for `buffer` builtins to its IR for x64 and A64.\r\n- Optimized `table.insert` by not inserting a table barrier if it is\r\nfastcalled with a constant.\r\n\r\n## Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1699650607.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699776199.215433,
            "elapsed_time": 377.6178677082062,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c2ba1058c35315a71e6f4b3fdf5b415a9a45bc80",
            "commit_message": "Sync to upstream/release/603 (#1097)\n\n# What's changed?\r\n\r\n- Record the location of properties for table types (closes #802)\r\n- Implement stricter UTF-8 validations as per the RFC\r\n(https://github.com/luau-lang/rfcs/pull/1)\r\n- Implement `buffer` as a new type in both the old and new solvers.\r\n- Changed errors produced by some `buffer` builtins to be a bit more\r\ngeneric to avoid platform-dependent error messages.\r\n- Fixed a bug where `Unifier` would copy some persistent types, tripping\r\nsome internal assertions.\r\n- Type checking rules on relational operators is now a little bit more\r\nlax.\r\n- Improve dead code elimination for some `if` statements with complex\r\nalways-false conditions\r\n\r\n## New type solver\r\n\r\n- Dataflow analysis now generates phi nodes on exit of branches.\r\n- Dataflow analysis avoids producing a new definition for locals or\r\nproperties that are not owned by that loop.\r\n- If a function parameter has been constrained to `never`, report errors\r\nat all uses of that parameter within that function.\r\n- Switch to using the new `Luau::Set` to replace `std::unordered_set` to\r\nalleviate some poor allocation characteristics which was negatively\r\naffecting overall performance.\r\n- Subtyping can now report many failing reasons instead of just the\r\nfirst one that we happened to find during the test.\r\n- Subtyping now also report reasons for type pack mismatches.\r\n- When visiting `if` statements or expressions, the resulting context\r\nare the common terms in both branches.\r\n\r\n## Native codegen\r\n\r\n- Implement support for `buffer` builtins to its IR for x64 and A64.\r\n- Optimized `table.insert` by not inserting a table barrier if it is\r\nfastcalled with a constant.\r\n\r\n## Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1699650607.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699787173.249906,
            "elapsed_time": 413.72819209098816,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c2ba1058c35315a71e6f4b3fdf5b415a9a45bc80",
            "commit_message": "Sync to upstream/release/603 (#1097)\n\n# What's changed?\r\n\r\n- Record the location of properties for table types (closes #802)\r\n- Implement stricter UTF-8 validations as per the RFC\r\n(https://github.com/luau-lang/rfcs/pull/1)\r\n- Implement `buffer` as a new type in both the old and new solvers.\r\n- Changed errors produced by some `buffer` builtins to be a bit more\r\ngeneric to avoid platform-dependent error messages.\r\n- Fixed a bug where `Unifier` would copy some persistent types, tripping\r\nsome internal assertions.\r\n- Type checking rules on relational operators is now a little bit more\r\nlax.\r\n- Improve dead code elimination for some `if` statements with complex\r\nalways-false conditions\r\n\r\n## New type solver\r\n\r\n- Dataflow analysis now generates phi nodes on exit of branches.\r\n- Dataflow analysis avoids producing a new definition for locals or\r\nproperties that are not owned by that loop.\r\n- If a function parameter has been constrained to `never`, report errors\r\nat all uses of that parameter within that function.\r\n- Switch to using the new `Luau::Set` to replace `std::unordered_set` to\r\nalleviate some poor allocation characteristics which was negatively\r\naffecting overall performance.\r\n- Subtyping can now report many failing reasons instead of just the\r\nfirst one that we happened to find during the test.\r\n- Subtyping now also report reasons for type pack mismatches.\r\n- When visiting `if` statements or expressions, the resulting context\r\nare the common terms in both branches.\r\n\r\n## Native codegen\r\n\r\n- Implement support for `buffer` builtins to its IR for x64 and A64.\r\n- Optimized `table.insert` by not inserting a table barrier if it is\r\nfastcalled with a constant.\r\n\r\n## Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1699650607.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699790557.733921,
            "elapsed_time": 272.9361844062805,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c2ba1058c35315a71e6f4b3fdf5b415a9a45bc80",
            "commit_message": "Sync to upstream/release/603 (#1097)\n\n# What's changed?\r\n\r\n- Record the location of properties for table types (closes #802)\r\n- Implement stricter UTF-8 validations as per the RFC\r\n(https://github.com/luau-lang/rfcs/pull/1)\r\n- Implement `buffer` as a new type in both the old and new solvers.\r\n- Changed errors produced by some `buffer` builtins to be a bit more\r\ngeneric to avoid platform-dependent error messages.\r\n- Fixed a bug where `Unifier` would copy some persistent types, tripping\r\nsome internal assertions.\r\n- Type checking rules on relational operators is now a little bit more\r\nlax.\r\n- Improve dead code elimination for some `if` statements with complex\r\nalways-false conditions\r\n\r\n## New type solver\r\n\r\n- Dataflow analysis now generates phi nodes on exit of branches.\r\n- Dataflow analysis avoids producing a new definition for locals or\r\nproperties that are not owned by that loop.\r\n- If a function parameter has been constrained to `never`, report errors\r\nat all uses of that parameter within that function.\r\n- Switch to using the new `Luau::Set` to replace `std::unordered_set` to\r\nalleviate some poor allocation characteristics which was negatively\r\naffecting overall performance.\r\n- Subtyping can now report many failing reasons instead of just the\r\nfirst one that we happened to find during the test.\r\n- Subtyping now also report reasons for type pack mismatches.\r\n- When visiting `if` statements or expressions, the resulting context\r\nare the common terms in both branches.\r\n\r\n## Native codegen\r\n\r\n- Implement support for `buffer` builtins to its IR for x64 and A64.\r\n- Optimized `table.insert` by not inserting a table barrier if it is\r\nfastcalled with a constant.\r\n\r\n## Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1699650607.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699798573.875714,
            "elapsed_time": 437.39381527900696,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c2ba1058c35315a71e6f4b3fdf5b415a9a45bc80",
            "commit_message": "Sync to upstream/release/603 (#1097)\n\n# What's changed?\r\n\r\n- Record the location of properties for table types (closes #802)\r\n- Implement stricter UTF-8 validations as per the RFC\r\n(https://github.com/luau-lang/rfcs/pull/1)\r\n- Implement `buffer` as a new type in both the old and new solvers.\r\n- Changed errors produced by some `buffer` builtins to be a bit more\r\ngeneric to avoid platform-dependent error messages.\r\n- Fixed a bug where `Unifier` would copy some persistent types, tripping\r\nsome internal assertions.\r\n- Type checking rules on relational operators is now a little bit more\r\nlax.\r\n- Improve dead code elimination for some `if` statements with complex\r\nalways-false conditions\r\n\r\n## New type solver\r\n\r\n- Dataflow analysis now generates phi nodes on exit of branches.\r\n- Dataflow analysis avoids producing a new definition for locals or\r\nproperties that are not owned by that loop.\r\n- If a function parameter has been constrained to `never`, report errors\r\nat all uses of that parameter within that function.\r\n- Switch to using the new `Luau::Set` to replace `std::unordered_set` to\r\nalleviate some poor allocation characteristics which was negatively\r\naffecting overall performance.\r\n- Subtyping can now report many failing reasons instead of just the\r\nfirst one that we happened to find during the test.\r\n- Subtyping now also report reasons for type pack mismatches.\r\n- When visiting `if` statements or expressions, the resulting context\r\nare the common terms in both branches.\r\n\r\n## Native codegen\r\n\r\n- Implement support for `buffer` builtins to its IR for x64 and A64.\r\n- Optimized `table.insert` by not inserting a table barrier if it is\r\nfastcalled with a constant.\r\n\r\n## Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1699650607.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699804983.824066,
            "elapsed_time": 269.33247327804565,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c2ba1058c35315a71e6f4b3fdf5b415a9a45bc80",
            "commit_message": "Sync to upstream/release/603 (#1097)\n\n# What's changed?\r\n\r\n- Record the location of properties for table types (closes #802)\r\n- Implement stricter UTF-8 validations as per the RFC\r\n(https://github.com/luau-lang/rfcs/pull/1)\r\n- Implement `buffer` as a new type in both the old and new solvers.\r\n- Changed errors produced by some `buffer` builtins to be a bit more\r\ngeneric to avoid platform-dependent error messages.\r\n- Fixed a bug where `Unifier` would copy some persistent types, tripping\r\nsome internal assertions.\r\n- Type checking rules on relational operators is now a little bit more\r\nlax.\r\n- Improve dead code elimination for some `if` statements with complex\r\nalways-false conditions\r\n\r\n## New type solver\r\n\r\n- Dataflow analysis now generates phi nodes on exit of branches.\r\n- Dataflow analysis avoids producing a new definition for locals or\r\nproperties that are not owned by that loop.\r\n- If a function parameter has been constrained to `never`, report errors\r\nat all uses of that parameter within that function.\r\n- Switch to using the new `Luau::Set` to replace `std::unordered_set` to\r\nalleviate some poor allocation characteristics which was negatively\r\naffecting overall performance.\r\n- Subtyping can now report many failing reasons instead of just the\r\nfirst one that we happened to find during the test.\r\n- Subtyping now also report reasons for type pack mismatches.\r\n- When visiting `if` statements or expressions, the resulting context\r\nare the common terms in both branches.\r\n\r\n## Native codegen\r\n\r\n- Implement support for `buffer` builtins to its IR for x64 and A64.\r\n- Optimized `table.insert` by not inserting a table barrier if it is\r\nfastcalled with a constant.\r\n\r\n## Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1699650607.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699819381.687681,
            "elapsed_time": 256.5997371673584,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c2ba1058c35315a71e6f4b3fdf5b415a9a45bc80",
            "commit_message": "Sync to upstream/release/603 (#1097)\n\n# What's changed?\r\n\r\n- Record the location of properties for table types (closes #802)\r\n- Implement stricter UTF-8 validations as per the RFC\r\n(https://github.com/luau-lang/rfcs/pull/1)\r\n- Implement `buffer` as a new type in both the old and new solvers.\r\n- Changed errors produced by some `buffer` builtins to be a bit more\r\ngeneric to avoid platform-dependent error messages.\r\n- Fixed a bug where `Unifier` would copy some persistent types, tripping\r\nsome internal assertions.\r\n- Type checking rules on relational operators is now a little bit more\r\nlax.\r\n- Improve dead code elimination for some `if` statements with complex\r\nalways-false conditions\r\n\r\n## New type solver\r\n\r\n- Dataflow analysis now generates phi nodes on exit of branches.\r\n- Dataflow analysis avoids producing a new definition for locals or\r\nproperties that are not owned by that loop.\r\n- If a function parameter has been constrained to `never`, report errors\r\nat all uses of that parameter within that function.\r\n- Switch to using the new `Luau::Set` to replace `std::unordered_set` to\r\nalleviate some poor allocation characteristics which was negatively\r\naffecting overall performance.\r\n- Subtyping can now report many failing reasons instead of just the\r\nfirst one that we happened to find during the test.\r\n- Subtyping now also report reasons for type pack mismatches.\r\n- When visiting `if` statements or expressions, the resulting context\r\nare the common terms in both branches.\r\n\r\n## Native codegen\r\n\r\n- Implement support for `buffer` builtins to its IR for x64 and A64.\r\n- Optimized `table.insert` by not inserting a table barrier if it is\r\nfastcalled with a constant.\r\n\r\n## Internal Contributors\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1699650607.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699833856.793967,
            "elapsed_time": 272.80166935920715,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "4b2af900c28598a18221e4798b72b16010ce7f2a",
            "commit_message": "Fix link to `.luaurc` info in README (#1101)\n\n",
            "commit_timestamp": 1699825721.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699848206.795759,
            "elapsed_time": 520.9257683753967,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "4b2af900c28598a18221e4798b72b16010ce7f2a",
            "commit_message": "Fix link to `.luaurc` info in README (#1101)\n\n",
            "commit_timestamp": 1699825721.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699862625.132405,
            "elapsed_time": 485.1012623310089,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "4b2af900c28598a18221e4798b72b16010ce7f2a",
            "commit_message": "Fix link to `.luaurc` info in README (#1101)\n\n",
            "commit_timestamp": 1699825721.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699877017.571959,
            "elapsed_time": 297.93664503097534,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "4b2af900c28598a18221e4798b72b16010ce7f2a",
            "commit_message": "Fix link to `.luaurc` info in README (#1101)\n\n",
            "commit_timestamp": 1699825721.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699891398.37355,
            "elapsed_time": 494.23034620285034,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "64d2d0fb76609947dd89ff93f4e68aa4e6e327b3",
            "commit_message": "Update README.md\n\nUse rfcs.luau-lang.org for the .luaurc link",
            "commit_timestamp": 1699890075.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699905767.862393,
            "elapsed_time": 353.28812313079834,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "64d2d0fb76609947dd89ff93f4e68aa4e6e327b3",
            "commit_message": "Update README.md\n\nUse rfcs.luau-lang.org for the .luaurc link",
            "commit_timestamp": 1699890075.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699920241.140895,
            "elapsed_time": 257.0370409488678,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "64d2d0fb76609947dd89ff93f4e68aa4e6e327b3",
            "commit_message": "Update README.md\n\nUse rfcs.luau-lang.org for the .luaurc link",
            "commit_timestamp": 1699890075.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699934580.262313,
            "elapsed_time": 277.50534224510193,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "64d2d0fb76609947dd89ff93f4e68aa4e6e327b3",
            "commit_message": "Update README.md\n\nUse rfcs.luau-lang.org for the .luaurc link",
            "commit_timestamp": 1699890075.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699949005.837174,
            "elapsed_time": 262.6586821079254,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "64d2d0fb76609947dd89ff93f4e68aa4e6e327b3",
            "commit_message": "Update README.md\n\nUse rfcs.luau-lang.org for the .luaurc link",
            "commit_timestamp": 1699890075.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699963481.427476,
            "elapsed_time": 299.90372943878174,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "64d2d0fb76609947dd89ff93f4e68aa4e6e327b3",
            "commit_message": "Update README.md\n\nUse rfcs.luau-lang.org for the .luaurc link",
            "commit_timestamp": 1699890075.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699977850.969766,
            "elapsed_time": 286.6760540008545,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "64d2d0fb76609947dd89ff93f4e68aa4e6e327b3",
            "commit_message": "Update README.md\n\nUse rfcs.luau-lang.org for the .luaurc link",
            "commit_timestamp": 1699890075.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1699992141.959405,
            "elapsed_time": 272.32180881500244,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "64d2d0fb76609947dd89ff93f4e68aa4e6e327b3",
            "commit_message": "Update README.md\n\nUse rfcs.luau-lang.org for the .luaurc link",
            "commit_timestamp": 1699890075.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700006661.835174,
            "elapsed_time": 261.0735363960266,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "64d2d0fb76609947dd89ff93f4e68aa4e6e327b3",
            "commit_message": "Update README.md\n\nUse rfcs.luau-lang.org for the .luaurc link",
            "commit_timestamp": 1699890075.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700021022.49876,
            "elapsed_time": 285.45269203186035,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "64d2d0fb76609947dd89ff93f4e68aa4e6e327b3",
            "commit_message": "Update README.md\n\nUse rfcs.luau-lang.org for the .luaurc link",
            "commit_timestamp": 1699890075.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700035477.830214,
            "elapsed_time": 464.3408615589142,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "64d2d0fb76609947dd89ff93f4e68aa4e6e327b3",
            "commit_message": "Update README.md\n\nUse rfcs.luau-lang.org for the .luaurc link",
            "commit_timestamp": 1699890075.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700036208.6978,
            "elapsed_time": 495.6152639389038,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "64d2d0fb76609947dd89ff93f4e68aa4e6e327b3",
            "commit_message": "Update README.md\n\nUse rfcs.luau-lang.org for the .luaurc link",
            "commit_timestamp": 1699890075.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700064184.496043,
            "elapsed_time": 284.5722370147705,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "d2059dd50ddd3005ee3f4a3a7141d424fa83f2e2",
            "commit_message": "Update codecov.yml\n\nMake status checks informational",
            "commit_timestamp": 1700058640.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700049785.5343,
            "elapsed_time": 275.59422540664673,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "64d2d0fb76609947dd89ff93f4e68aa4e6e327b3",
            "commit_message": "Update README.md\n\nUse rfcs.luau-lang.org for the .luaurc link",
            "commit_timestamp": 1699890075.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700078612.440478,
            "elapsed_time": 284.7907154560089,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "d2059dd50ddd3005ee3f4a3a7141d424fa83f2e2",
            "commit_message": "Update codecov.yml\n\nMake status checks informational",
            "commit_timestamp": 1700058640.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700093196.571872,
            "elapsed_time": 336.0286045074463,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "d2059dd50ddd3005ee3f4a3a7141d424fa83f2e2",
            "commit_message": "Update codecov.yml\n\nMake status checks informational",
            "commit_timestamp": 1700058640.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700107437.50722,
            "elapsed_time": 286.551552772522,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "d2059dd50ddd3005ee3f4a3a7141d424fa83f2e2",
            "commit_message": "Update codecov.yml\n\nMake status checks informational",
            "commit_timestamp": 1700058640.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700121911.594439,
            "elapsed_time": 321.40501642227173,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "d2059dd50ddd3005ee3f4a3a7141d424fa83f2e2",
            "commit_message": "Update codecov.yml\n\nMake status checks informational",
            "commit_timestamp": 1700058640.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700136217.256367,
            "elapsed_time": 307.22948122024536,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "d2059dd50ddd3005ee3f4a3a7141d424fa83f2e2",
            "commit_message": "Update codecov.yml\n\nMake status checks informational",
            "commit_timestamp": 1700058640.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700150606.554609,
            "elapsed_time": 286.8291096687317,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "d2059dd50ddd3005ee3f4a3a7141d424fa83f2e2",
            "commit_message": "Update codecov.yml\n\nMake status checks informational",
            "commit_timestamp": 1700058640.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700165023.035406,
            "elapsed_time": 285.19427704811096,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "0492ecffdfae8c838067494f5761627b5563cb5a",
            "commit_message": "Add #include <algorithm> to fix building with gcc 14 (#1104)\n\nWith gcc 14 some C++ Standard Library headers have been changed to no\r\nlonger include other headers that were used internally by the library.\r\nIn luau's case it is the `<algorithm>` header.\r\n",
            "commit_timestamp": 1700164276.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700179520.021247,
            "elapsed_time": 308.4841203689575,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "0492ecffdfae8c838067494f5761627b5563cb5a",
            "commit_message": "Add #include <algorithm> to fix building with gcc 14 (#1104)\n\nWith gcc 14 some C++ Standard Library headers have been changed to no\r\nlonger include other headers that were used internally by the library.\r\nIn luau's case it is the `<algorithm>` header.\r\n",
            "commit_timestamp": 1700164276.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700193878.659551,
            "elapsed_time": 302.5714747905731,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "0492ecffdfae8c838067494f5761627b5563cb5a",
            "commit_message": "Add #include <algorithm> to fix building with gcc 14 (#1104)\n\nWith gcc 14 some C++ Standard Library headers have been changed to no\r\nlonger include other headers that were used internally by the library.\r\nIn luau's case it is the `<algorithm>` header.\r\n",
            "commit_timestamp": 1700164276.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700208339.029851,
            "elapsed_time": 382.4069640636444,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "0492ecffdfae8c838067494f5761627b5563cb5a",
            "commit_message": "Add #include <algorithm> to fix building with gcc 14 (#1104)\n\nWith gcc 14 some C++ Standard Library headers have been changed to no\r\nlonger include other headers that were used internally by the library.\r\nIn luau's case it is the `<algorithm>` header.\r\n",
            "commit_timestamp": 1700164276.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700222586.226377,
            "elapsed_time": 277.7054069042206,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "0492ecffdfae8c838067494f5761627b5563cb5a",
            "commit_message": "Add #include <algorithm> to fix building with gcc 14 (#1104)\n\nWith gcc 14 some C++ Standard Library headers have been changed to no\r\nlonger include other headers that were used internally by the library.\r\nIn luau's case it is the `<algorithm>` header.\r\n",
            "commit_timestamp": 1700164276.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700236997.634586,
            "elapsed_time": 281.210001707077,
            "x64": false,
            "actual_files_count": 430,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "298cd70154dfa83dac8b4ee02acd77e48448fea2",
            "commit_message": "Optimize vector literals by storing them in the constant table (#1096)\n\nWith this optimization, built-in vector constructor calls with 3/4 arguments are detected by the compiler and turned into vector constants when the arguments are constant numbers.\r\nRequires optimization level 2 because built-ins are not folded otherwise by the compiler.\r\nBytecode version is bumped because of the new constant type, but old bytecode versions can still be loaded.\r\n\r\nThe following synthetic benchmark shows ~6.6x improvement.\r\n```\r\nlocal v\r\nfor i = 1, 10000000 do\r\n\tv = vector(1, 2, 3)\r\n\tv = vector(1, 2, 3)\r\n\tv = vector(1, 2, 3)\r\n\tv = vector(1, 2, 3)\r\n\tv = vector(1, 2, 3)\r\n\tv = vector(1, 2, 3)\r\n\tv = vector(1, 2, 3)\r\n\tv = vector(1, 2, 3)\r\n\tv = vector(1, 2, 3)\r\n\tv = vector(1, 2, 3)\r\nend\r\n```\r\n\r\nAlso tried a more real world scenario and could see a few percent improvement.\r\n\r\nAdded a new fast flag LuauVectorLiterals for enabling the feature.\r\n\r\n---------\r\n\r\nCo-authored-by: Petri H\u00e4kkinen <petrih@rmd.remedy.fi>\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>\r\nCo-authored-by: Arseny Kapoulkine <arseny.kapoulkine@gmail.com>",
            "commit_timestamp": 1700225672.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700265919.096933,
            "elapsed_time": 299.9446814060211,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700251390.752502,
            "elapsed_time": 293.79589009284973,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700280153.359175,
            "elapsed_time": 273.5927474498749,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700294652.382371,
            "elapsed_time": 312.9976680278778,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700308981.936559,
            "elapsed_time": 283.7937059402466,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700323372.084499,
            "elapsed_time": 289.2425217628479,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700337809.368163,
            "elapsed_time": 312.8075342178345,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700352232.90301,
            "elapsed_time": 268.82460045814514,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700366558.162531,
            "elapsed_time": 272.1525900363922,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700380965.542224,
            "elapsed_time": 279.08649492263794,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700395379.938462,
            "elapsed_time": 263.55850052833557,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700409740.903858,
            "elapsed_time": 269.0824046134949,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700424186.949969,
            "elapsed_time": 305.6113896369934,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700438652.025195,
            "elapsed_time": 279.6056492328644,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700453042.914187,
            "elapsed_time": 280.7846553325653,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700467503.385061,
            "elapsed_time": 308.48812460899353,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700481853.67642,
            "elapsed_time": 298.3978707790375,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700496221.398485,
            "elapsed_time": 287.1108298301697,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700510613.627638,
            "elapsed_time": 285.5964238643646,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700525034.096533,
            "elapsed_time": 266.65957975387573,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700539430.289607,
            "elapsed_time": 297.6330289840698,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700553846.318217,
            "elapsed_time": 296.1125388145447,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700568181.499977,
            "elapsed_time": 264.180956363678,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "232.0.20231101.135615",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700566332.414468,
            "elapsed_time": 288.12741470336914,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "241.0.20231120.201033-eap01d",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700574324.501873,
            "elapsed_time": 307.2879672050476,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "241.0.20231121.214-eap01d",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700575865.518508,
            "elapsed_time": 297.4197735786438,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700582567.500991,
            "elapsed_time": 286.814688205719,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "74c532053f829d31bb000c16d3c12732e37dbf3f",
            "commit_message": "Sync to upstream/release/604 (#1106)\n\nNew Solver\r\n\r\n* New algorithm for inferring the types of locals that have no\r\nannotations. This\r\nalgorithm is very conservative by default, but is augmented with some\r\ncontrol\r\n  flow awareness to handle most common scenarios.\r\n* Fix bugs in type inference of tables\r\n* Improve performance of by switching out standard C++ containers for\r\n`DenseHashMap`\r\n* Infrastructure to support clearer error messages in strict mode\r\n\r\nNative Code Generation\r\n\r\n* Fix a lowering issue with buffer.writeu8 and 0x80-0xff values: A\r\nconstant\r\n  argument wasn't truncated to the target type range and that causes an\r\n  assertion failure in `build.mov`.\r\n* Store full lightuserdata value in loop iteration protocol lowering\r\n* Add analysis to compute function bytecode distribution\r\n* This includes a class to analyze the bytecode operator distribution\r\nper\r\nfunction and a CLI tool that produces a JSON report. See the new cmake\r\n      target `Luau.Bytecode.CLI`\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1700246778.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700597000.165264,
            "elapsed_time": 270.5936393737793,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700611552.424628,
            "elapsed_time": 295.34150981903076,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700625771.887449,
            "elapsed_time": 263.3809370994568,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231122.307-eap09d",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700640949.595052,
            "elapsed_time": 242.97947525978088,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700640155.836046,
            "elapsed_time": 273.8947083950043,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700654621.843768,
            "elapsed_time": 286.8958513736725,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700669033.330812,
            "elapsed_time": 279.1827805042267,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700683512.337111,
            "elapsed_time": 456.906188249588,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700697961.483589,
            "elapsed_time": 310.9931676387787,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700712239.116781,
            "elapsed_time": 287.9670295715332,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700726614.068568,
            "elapsed_time": 271.39370346069336,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700741174.73331,
            "elapsed_time": 288.25001335144043,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700740762.029137,
            "elapsed_time": 269.35525918006897,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700755464.613472,
            "elapsed_time": 290.211797952652,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700769790.536555,
            "elapsed_time": 281.79501819610596,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700784380.061861,
            "elapsed_time": 320.5110740661621,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700798580.239728,
            "elapsed_time": 293.24804759025574,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700812959.110858,
            "elapsed_time": 270.0620062351227,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700827420.534408,
            "elapsed_time": 291.35411190986633,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700841759.262158,
            "elapsed_time": 265.28123235702515,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700856140.915865,
            "elapsed_time": 277.0994212627411,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700870673.271038,
            "elapsed_time": 300.0623834133148,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700885023.761774,
            "elapsed_time": 285.0191879272461,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700899365.401574,
            "elapsed_time": 257.255166053772,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700913844.973153,
            "elapsed_time": 297.9273750782013,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700928207.461782,
            "elapsed_time": 293.5134003162384,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700942604.382167,
            "elapsed_time": 280.9085364341736,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700957087.570194,
            "elapsed_time": 283.2733380794525,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700971356.239112,
            "elapsed_time": 271.66558265686035,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1700985731.539065,
            "elapsed_time": 265.0763032436371,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701000169.492283,
            "elapsed_time": 258.41258811950684,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701014598.786023,
            "elapsed_time": 278.31252121925354,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701028963.524924,
            "elapsed_time": 277.871684551239,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701043502.445803,
            "elapsed_time": 292.976970911026,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701057761.713645,
            "elapsed_time": 273.4015324115753,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701072230.969809,
            "elapsed_time": 288.8239896297455,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "1cda8304bf085b955109f9cc32cd51b581cdff54",
            "commit_message": "Add missing include file to BytecodeSummary.h (#1110)\n\n",
            "commit_timestamp": 1700584134.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701086646.663566,
            "elapsed_time": 288.7545518875122,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7fb7f4382dd4fde31e0e044ef3a9b4f63646bd96",
            "commit_message": "Use ubuntu-latest on GHA when possible (#1112)\n\nWe need ubuntu-20.04 for coverage analysis (clang after 10 doesn't seem\r\nto properly interact with gcov version used for codecov) and for\r\nreleases (to produce binaries targeting earlier glibc).\r\n\r\nHowever, we still should be verifying that Luau builds on latest,\r\nbecause newer toolchains have stricter standard library headers and/or\r\nwarnings; without this we're at risk of constantly regressing the build\r\nfor packaging or external applications.\r\n\r\nNote that release.yml can probably just be deleted but for now we simply\r\nadjust it.",
            "commit_timestamp": 1701084297.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701100960.564872,
            "elapsed_time": 271.62748861312866,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7fb7f4382dd4fde31e0e044ef3a9b4f63646bd96",
            "commit_message": "Use ubuntu-latest on GHA when possible (#1112)\n\nWe need ubuntu-20.04 for coverage analysis (clang after 10 doesn't seem\r\nto properly interact with gcov version used for codecov) and for\r\nreleases (to produce binaries targeting earlier glibc).\r\n\r\nHowever, we still should be verifying that Luau builds on latest,\r\nbecause newer toolchains have stricter standard library headers and/or\r\nwarnings; without this we're at risk of constantly regressing the build\r\nfor packaging or external applications.\r\n\r\nNote that release.yml can probably just be deleted but for now we simply\r\nadjust it.",
            "commit_timestamp": 1701084297.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701115412.145274,
            "elapsed_time": 297.4248068332672,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7fb7f4382dd4fde31e0e044ef3a9b4f63646bd96",
            "commit_message": "Use ubuntu-latest on GHA when possible (#1112)\n\nWe need ubuntu-20.04 for coverage analysis (clang after 10 doesn't seem\r\nto properly interact with gcov version used for codecov) and for\r\nreleases (to produce binaries targeting earlier glibc).\r\n\r\nHowever, we still should be verifying that Luau builds on latest,\r\nbecause newer toolchains have stricter standard library headers and/or\r\nwarnings; without this we're at risk of constantly regressing the build\r\nfor packaging or external applications.\r\n\r\nNote that release.yml can probably just be deleted but for now we simply\r\nadjust it.",
            "commit_timestamp": 1701084297.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701129909.205844,
            "elapsed_time": 303.8827645778656,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7fb7f4382dd4fde31e0e044ef3a9b4f63646bd96",
            "commit_message": "Use ubuntu-latest on GHA when possible (#1112)\n\nWe need ubuntu-20.04 for coverage analysis (clang after 10 doesn't seem\r\nto properly interact with gcov version used for codecov) and for\r\nreleases (to produce binaries targeting earlier glibc).\r\n\r\nHowever, we still should be verifying that Luau builds on latest,\r\nbecause newer toolchains have stricter standard library headers and/or\r\nwarnings; without this we're at risk of constantly regressing the build\r\nfor packaging or external applications.\r\n\r\nNote that release.yml can probably just be deleted but for now we simply\r\nadjust it.",
            "commit_timestamp": 1701084297.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701144199.855543,
            "elapsed_time": 274.7763261795044,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7fb7f4382dd4fde31e0e044ef3a9b4f63646bd96",
            "commit_message": "Use ubuntu-latest on GHA when possible (#1112)\n\nWe need ubuntu-20.04 for coverage analysis (clang after 10 doesn't seem\r\nto properly interact with gcov version used for codecov) and for\r\nreleases (to produce binaries targeting earlier glibc).\r\n\r\nHowever, we still should be verifying that Luau builds on latest,\r\nbecause newer toolchains have stricter standard library headers and/or\r\nwarnings; without this we're at risk of constantly regressing the build\r\nfor packaging or external applications.\r\n\r\nNote that release.yml can probably just be deleted but for now we simply\r\nadjust it.",
            "commit_timestamp": 1701084297.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701158578.795243,
            "elapsed_time": 290.05369782447815,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7fb7f4382dd4fde31e0e044ef3a9b4f63646bd96",
            "commit_message": "Use ubuntu-latest on GHA when possible (#1112)\n\nWe need ubuntu-20.04 for coverage analysis (clang after 10 doesn't seem\r\nto properly interact with gcov version used for codecov) and for\r\nreleases (to produce binaries targeting earlier glibc).\r\n\r\nHowever, we still should be verifying that Luau builds on latest,\r\nbecause newer toolchains have stricter standard library headers and/or\r\nwarnings; without this we're at risk of constantly regressing the build\r\nfor packaging or external applications.\r\n\r\nNote that release.yml can probably just be deleted but for now we simply\r\nadjust it.",
            "commit_timestamp": 1701084297.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701173030.048884,
            "elapsed_time": 290.45297050476074,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "7fb7f4382dd4fde31e0e044ef3a9b4f63646bd96",
            "commit_message": "Use ubuntu-latest on GHA when possible (#1112)\n\nWe need ubuntu-20.04 for coverage analysis (clang after 10 doesn't seem\r\nto properly interact with gcov version used for codecov) and for\r\nreleases (to produce binaries targeting earlier glibc).\r\n\r\nHowever, we still should be verifying that Luau builds on latest,\r\nbecause newer toolchains have stricter standard library headers and/or\r\nwarnings; without this we're at risk of constantly regressing the build\r\nfor packaging or external applications.\r\n\r\nNote that release.yml can probably just be deleted but for now we simply\r\nadjust it.",
            "commit_timestamp": 1701084297.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701187460.535226,
            "elapsed_time": 303.0695824623108,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "89b437bb4edd63f4ee6cca3f5dcfcd734b5c3209",
            "commit_message": "Add SUBRK and DIVRK bytecode instructions to bytecode v5 (#1115)\n\nRight now, we can compile R\\*K for all arithmetic instructions, but K\\*R\r\ngets compiled into two instructions (LOADN/LOADK + arithmetic opcode).\r\n\r\nThis is problematic since it leads to reduced performance for some code.\r\nHowever, we'd like to avoid adding reverse variants of ADDK et al for\r\nall opcodes to avoid the increase in I$ footprint for interpreter.\r\n\r\nLooking at the arithmetic instructions, % and // don't have interesting\r\nuse cases for K\\*V; ^ is sometimes used with constant on the left hand\r\nside but this would need to call pow() by necessity in all cases so it\r\nwould be slow regardless of the dispatch overhead. This leaves the four\r\nbasic arithmetic operations.\r\n\r\nFor + and \\*, we can implement a compiler-side optimization in the\r\nfuture that transforms K\\*R to R\\*K automatically. This could either be\r\ndone unconditionally at -O2, or conditionally based on the type of the\r\nvalue (driven by type annotations / inference) -- this technically\r\nchanges behavior in presence of metamethods, although it might be\r\nsensible to just always do this because non-commutative +/* are evil.\r\n\r\nHowever, for - and / it is impossible for the compiler to optimize this\r\nin the future, so we need dedicated opcodes. This only increases the\r\ninterpreter size by ~300 bytes (~1.5%) on X64.\r\n\r\nThis makes spectral-norm and math-partial-sums 6% faster; maybe more\r\nimportantly, voxelgen gets 1.5% faster (so this change does have\r\nreal-world impact).\r\n\r\nTo avoid the proliferation of bytecode versions this change piggybacks\r\non the bytecode version bump that was just made in 604 for vector\r\nconstants; we would still be able to enable these independently but\r\nwe'll consider v5 complete when both are enabled.\r\n\r\nRelated: #626\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>",
            "commit_timestamp": 1701185701.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701201817.174353,
            "elapsed_time": 301.2312273979187,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "89b437bb4edd63f4ee6cca3f5dcfcd734b5c3209",
            "commit_message": "Add SUBRK and DIVRK bytecode instructions to bytecode v5 (#1115)\n\nRight now, we can compile R\\*K for all arithmetic instructions, but K\\*R\r\ngets compiled into two instructions (LOADN/LOADK + arithmetic opcode).\r\n\r\nThis is problematic since it leads to reduced performance for some code.\r\nHowever, we'd like to avoid adding reverse variants of ADDK et al for\r\nall opcodes to avoid the increase in I$ footprint for interpreter.\r\n\r\nLooking at the arithmetic instructions, % and // don't have interesting\r\nuse cases for K\\*V; ^ is sometimes used with constant on the left hand\r\nside but this would need to call pow() by necessity in all cases so it\r\nwould be slow regardless of the dispatch overhead. This leaves the four\r\nbasic arithmetic operations.\r\n\r\nFor + and \\*, we can implement a compiler-side optimization in the\r\nfuture that transforms K\\*R to R\\*K automatically. This could either be\r\ndone unconditionally at -O2, or conditionally based on the type of the\r\nvalue (driven by type annotations / inference) -- this technically\r\nchanges behavior in presence of metamethods, although it might be\r\nsensible to just always do this because non-commutative +/* are evil.\r\n\r\nHowever, for - and / it is impossible for the compiler to optimize this\r\nin the future, so we need dedicated opcodes. This only increases the\r\ninterpreter size by ~300 bytes (~1.5%) on X64.\r\n\r\nThis makes spectral-norm and math-partial-sums 6% faster; maybe more\r\nimportantly, voxelgen gets 1.5% faster (so this change does have\r\nreal-world impact).\r\n\r\nTo avoid the proliferation of bytecode versions this change piggybacks\r\non the bytecode version bump that was just made in 604 for vector\r\nconstants; we would still be able to enable these independently but\r\nwe'll consider v5 complete when both are enabled.\r\n\r\nRelated: #626\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>",
            "commit_timestamp": 1701185701.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701216265.853332,
            "elapsed_time": 295.27401781082153,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "89b437bb4edd63f4ee6cca3f5dcfcd734b5c3209",
            "commit_message": "Add SUBRK and DIVRK bytecode instructions to bytecode v5 (#1115)\n\nRight now, we can compile R\\*K for all arithmetic instructions, but K\\*R\r\ngets compiled into two instructions (LOADN/LOADK + arithmetic opcode).\r\n\r\nThis is problematic since it leads to reduced performance for some code.\r\nHowever, we'd like to avoid adding reverse variants of ADDK et al for\r\nall opcodes to avoid the increase in I$ footprint for interpreter.\r\n\r\nLooking at the arithmetic instructions, % and // don't have interesting\r\nuse cases for K\\*V; ^ is sometimes used with constant on the left hand\r\nside but this would need to call pow() by necessity in all cases so it\r\nwould be slow regardless of the dispatch overhead. This leaves the four\r\nbasic arithmetic operations.\r\n\r\nFor + and \\*, we can implement a compiler-side optimization in the\r\nfuture that transforms K\\*R to R\\*K automatically. This could either be\r\ndone unconditionally at -O2, or conditionally based on the type of the\r\nvalue (driven by type annotations / inference) -- this technically\r\nchanges behavior in presence of metamethods, although it might be\r\nsensible to just always do this because non-commutative +/* are evil.\r\n\r\nHowever, for - and / it is impossible for the compiler to optimize this\r\nin the future, so we need dedicated opcodes. This only increases the\r\ninterpreter size by ~300 bytes (~1.5%) on X64.\r\n\r\nThis makes spectral-norm and math-partial-sums 6% faster; maybe more\r\nimportantly, voxelgen gets 1.5% faster (so this change does have\r\nreal-world impact).\r\n\r\nTo avoid the proliferation of bytecode versions this change piggybacks\r\non the bytecode version bump that was just made in 604 for vector\r\nconstants; we would still be able to enable these independently but\r\nwe'll consider v5 complete when both are enabled.\r\n\r\nRelated: #626\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>",
            "commit_timestamp": 1701185701.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701230633.942469,
            "elapsed_time": 282.48300194740295,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "89b437bb4edd63f4ee6cca3f5dcfcd734b5c3209",
            "commit_message": "Add SUBRK and DIVRK bytecode instructions to bytecode v5 (#1115)\n\nRight now, we can compile R\\*K for all arithmetic instructions, but K\\*R\r\ngets compiled into two instructions (LOADN/LOADK + arithmetic opcode).\r\n\r\nThis is problematic since it leads to reduced performance for some code.\r\nHowever, we'd like to avoid adding reverse variants of ADDK et al for\r\nall opcodes to avoid the increase in I$ footprint for interpreter.\r\n\r\nLooking at the arithmetic instructions, % and // don't have interesting\r\nuse cases for K\\*V; ^ is sometimes used with constant on the left hand\r\nside but this would need to call pow() by necessity in all cases so it\r\nwould be slow regardless of the dispatch overhead. This leaves the four\r\nbasic arithmetic operations.\r\n\r\nFor + and \\*, we can implement a compiler-side optimization in the\r\nfuture that transforms K\\*R to R\\*K automatically. This could either be\r\ndone unconditionally at -O2, or conditionally based on the type of the\r\nvalue (driven by type annotations / inference) -- this technically\r\nchanges behavior in presence of metamethods, although it might be\r\nsensible to just always do this because non-commutative +/* are evil.\r\n\r\nHowever, for - and / it is impossible for the compiler to optimize this\r\nin the future, so we need dedicated opcodes. This only increases the\r\ninterpreter size by ~300 bytes (~1.5%) on X64.\r\n\r\nThis makes spectral-norm and math-partial-sums 6% faster; maybe more\r\nimportantly, voxelgen gets 1.5% faster (so this change does have\r\nreal-world impact).\r\n\r\nTo avoid the proliferation of bytecode versions this change piggybacks\r\non the bytecode version bump that was just made in 604 for vector\r\nconstants; we would still be able to enable these independently but\r\nwe'll consider v5 complete when both are enabled.\r\n\r\nRelated: #626\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>",
            "commit_timestamp": 1701185701.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701244986.443945,
            "elapsed_time": 278.6471426486969,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "89b437bb4edd63f4ee6cca3f5dcfcd734b5c3209",
            "commit_message": "Add SUBRK and DIVRK bytecode instructions to bytecode v5 (#1115)\n\nRight now, we can compile R\\*K for all arithmetic instructions, but K\\*R\r\ngets compiled into two instructions (LOADN/LOADK + arithmetic opcode).\r\n\r\nThis is problematic since it leads to reduced performance for some code.\r\nHowever, we'd like to avoid adding reverse variants of ADDK et al for\r\nall opcodes to avoid the increase in I$ footprint for interpreter.\r\n\r\nLooking at the arithmetic instructions, % and // don't have interesting\r\nuse cases for K\\*V; ^ is sometimes used with constant on the left hand\r\nside but this would need to call pow() by necessity in all cases so it\r\nwould be slow regardless of the dispatch overhead. This leaves the four\r\nbasic arithmetic operations.\r\n\r\nFor + and \\*, we can implement a compiler-side optimization in the\r\nfuture that transforms K\\*R to R\\*K automatically. This could either be\r\ndone unconditionally at -O2, or conditionally based on the type of the\r\nvalue (driven by type annotations / inference) -- this technically\r\nchanges behavior in presence of metamethods, although it might be\r\nsensible to just always do this because non-commutative +/* are evil.\r\n\r\nHowever, for - and / it is impossible for the compiler to optimize this\r\nin the future, so we need dedicated opcodes. This only increases the\r\ninterpreter size by ~300 bytes (~1.5%) on X64.\r\n\r\nThis makes spectral-norm and math-partial-sums 6% faster; maybe more\r\nimportantly, voxelgen gets 1.5% faster (so this change does have\r\nreal-world impact).\r\n\r\nTo avoid the proliferation of bytecode versions this change piggybacks\r\non the bytecode version bump that was just made in 604 for vector\r\nconstants; we would still be able to enable these independently but\r\nwe'll consider v5 complete when both are enabled.\r\n\r\nRelated: #626\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>",
            "commit_timestamp": 1701185701.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701259407.746823,
            "elapsed_time": 277.1041166782379,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "89b437bb4edd63f4ee6cca3f5dcfcd734b5c3209",
            "commit_message": "Add SUBRK and DIVRK bytecode instructions to bytecode v5 (#1115)\n\nRight now, we can compile R\\*K for all arithmetic instructions, but K\\*R\r\ngets compiled into two instructions (LOADN/LOADK + arithmetic opcode).\r\n\r\nThis is problematic since it leads to reduced performance for some code.\r\nHowever, we'd like to avoid adding reverse variants of ADDK et al for\r\nall opcodes to avoid the increase in I$ footprint for interpreter.\r\n\r\nLooking at the arithmetic instructions, % and // don't have interesting\r\nuse cases for K\\*V; ^ is sometimes used with constant on the left hand\r\nside but this would need to call pow() by necessity in all cases so it\r\nwould be slow regardless of the dispatch overhead. This leaves the four\r\nbasic arithmetic operations.\r\n\r\nFor + and \\*, we can implement a compiler-side optimization in the\r\nfuture that transforms K\\*R to R\\*K automatically. This could either be\r\ndone unconditionally at -O2, or conditionally based on the type of the\r\nvalue (driven by type annotations / inference) -- this technically\r\nchanges behavior in presence of metamethods, although it might be\r\nsensible to just always do this because non-commutative +/* are evil.\r\n\r\nHowever, for - and / it is impossible for the compiler to optimize this\r\nin the future, so we need dedicated opcodes. This only increases the\r\ninterpreter size by ~300 bytes (~1.5%) on X64.\r\n\r\nThis makes spectral-norm and math-partial-sums 6% faster; maybe more\r\nimportantly, voxelgen gets 1.5% faster (so this change does have\r\nreal-world impact).\r\n\r\nTo avoid the proliferation of bytecode versions this change piggybacks\r\non the bytecode version bump that was just made in 604 for vector\r\nconstants; we would still be able to enable these independently but\r\nwe'll consider v5 complete when both are enabled.\r\n\r\nRelated: #626\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>",
            "commit_timestamp": 1701185701.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701288209.242081,
            "elapsed_time": 288.46460938453674,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "89b437bb4edd63f4ee6cca3f5dcfcd734b5c3209",
            "commit_message": "Add SUBRK and DIVRK bytecode instructions to bytecode v5 (#1115)\n\nRight now, we can compile R\\*K for all arithmetic instructions, but K\\*R\r\ngets compiled into two instructions (LOADN/LOADK + arithmetic opcode).\r\n\r\nThis is problematic since it leads to reduced performance for some code.\r\nHowever, we'd like to avoid adding reverse variants of ADDK et al for\r\nall opcodes to avoid the increase in I$ footprint for interpreter.\r\n\r\nLooking at the arithmetic instructions, % and // don't have interesting\r\nuse cases for K\\*V; ^ is sometimes used with constant on the left hand\r\nside but this would need to call pow() by necessity in all cases so it\r\nwould be slow regardless of the dispatch overhead. This leaves the four\r\nbasic arithmetic operations.\r\n\r\nFor + and \\*, we can implement a compiler-side optimization in the\r\nfuture that transforms K\\*R to R\\*K automatically. This could either be\r\ndone unconditionally at -O2, or conditionally based on the type of the\r\nvalue (driven by type annotations / inference) -- this technically\r\nchanges behavior in presence of metamethods, although it might be\r\nsensible to just always do this because non-commutative +/* are evil.\r\n\r\nHowever, for - and / it is impossible for the compiler to optimize this\r\nin the future, so we need dedicated opcodes. This only increases the\r\ninterpreter size by ~300 bytes (~1.5%) on X64.\r\n\r\nThis makes spectral-norm and math-partial-sums 6% faster; maybe more\r\nimportantly, voxelgen gets 1.5% faster (so this change does have\r\nreal-world impact).\r\n\r\nTo avoid the proliferation of bytecode versions this change piggybacks\r\non the bytecode version bump that was just made in 604 for vector\r\nconstants; we would still be able to enable these independently but\r\nwe'll consider v5 complete when both are enabled.\r\n\r\nRelated: #626\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>",
            "commit_timestamp": 1701185701.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701273786.59299,
            "elapsed_time": 289.82960391044617,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "89b437bb4edd63f4ee6cca3f5dcfcd734b5c3209",
            "commit_message": "Add SUBRK and DIVRK bytecode instructions to bytecode v5 (#1115)\n\nRight now, we can compile R\\*K for all arithmetic instructions, but K\\*R\r\ngets compiled into two instructions (LOADN/LOADK + arithmetic opcode).\r\n\r\nThis is problematic since it leads to reduced performance for some code.\r\nHowever, we'd like to avoid adding reverse variants of ADDK et al for\r\nall opcodes to avoid the increase in I$ footprint for interpreter.\r\n\r\nLooking at the arithmetic instructions, % and // don't have interesting\r\nuse cases for K\\*V; ^ is sometimes used with constant on the left hand\r\nside but this would need to call pow() by necessity in all cases so it\r\nwould be slow regardless of the dispatch overhead. This leaves the four\r\nbasic arithmetic operations.\r\n\r\nFor + and \\*, we can implement a compiler-side optimization in the\r\nfuture that transforms K\\*R to R\\*K automatically. This could either be\r\ndone unconditionally at -O2, or conditionally based on the type of the\r\nvalue (driven by type annotations / inference) -- this technically\r\nchanges behavior in presence of metamethods, although it might be\r\nsensible to just always do this because non-commutative +/* are evil.\r\n\r\nHowever, for - and / it is impossible for the compiler to optimize this\r\nin the future, so we need dedicated opcodes. This only increases the\r\ninterpreter size by ~300 bytes (~1.5%) on X64.\r\n\r\nThis makes spectral-norm and math-partial-sums 6% faster; maybe more\r\nimportantly, voxelgen gets 1.5% faster (so this change does have\r\nreal-world impact).\r\n\r\nTo avoid the proliferation of bytecode versions this change piggybacks\r\non the bytecode version bump that was just made in 604 for vector\r\nconstants; we would still be able to enable these independently but\r\nwe'll consider v5 complete when both are enabled.\r\n\r\nRelated: #626\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>",
            "commit_timestamp": 1701185701.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701302661.959963,
            "elapsed_time": 290.91418528556824,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "89b437bb4edd63f4ee6cca3f5dcfcd734b5c3209",
            "commit_message": "Add SUBRK and DIVRK bytecode instructions to bytecode v5 (#1115)\n\nRight now, we can compile R\\*K for all arithmetic instructions, but K\\*R\r\ngets compiled into two instructions (LOADN/LOADK + arithmetic opcode).\r\n\r\nThis is problematic since it leads to reduced performance for some code.\r\nHowever, we'd like to avoid adding reverse variants of ADDK et al for\r\nall opcodes to avoid the increase in I$ footprint for interpreter.\r\n\r\nLooking at the arithmetic instructions, % and // don't have interesting\r\nuse cases for K\\*V; ^ is sometimes used with constant on the left hand\r\nside but this would need to call pow() by necessity in all cases so it\r\nwould be slow regardless of the dispatch overhead. This leaves the four\r\nbasic arithmetic operations.\r\n\r\nFor + and \\*, we can implement a compiler-side optimization in the\r\nfuture that transforms K\\*R to R\\*K automatically. This could either be\r\ndone unconditionally at -O2, or conditionally based on the type of the\r\nvalue (driven by type annotations / inference) -- this technically\r\nchanges behavior in presence of metamethods, although it might be\r\nsensible to just always do this because non-commutative +/* are evil.\r\n\r\nHowever, for - and / it is impossible for the compiler to optimize this\r\nin the future, so we need dedicated opcodes. This only increases the\r\ninterpreter size by ~300 bytes (~1.5%) on X64.\r\n\r\nThis makes spectral-norm and math-partial-sums 6% faster; maybe more\r\nimportantly, voxelgen gets 1.5% faster (so this change does have\r\nreal-world impact).\r\n\r\nTo avoid the proliferation of bytecode versions this change piggybacks\r\non the bytecode version bump that was just made in 604 for vector\r\nconstants; we would still be able to enable these independently but\r\nwe'll consider v5 complete when both are enabled.\r\n\r\nRelated: #626\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>",
            "commit_timestamp": 1701185701.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701317011.913222,
            "elapsed_time": 274.65576934814453,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "89b437bb4edd63f4ee6cca3f5dcfcd734b5c3209",
            "commit_message": "Add SUBRK and DIVRK bytecode instructions to bytecode v5 (#1115)\n\nRight now, we can compile R\\*K for all arithmetic instructions, but K\\*R\r\ngets compiled into two instructions (LOADN/LOADK + arithmetic opcode).\r\n\r\nThis is problematic since it leads to reduced performance for some code.\r\nHowever, we'd like to avoid adding reverse variants of ADDK et al for\r\nall opcodes to avoid the increase in I$ footprint for interpreter.\r\n\r\nLooking at the arithmetic instructions, % and // don't have interesting\r\nuse cases for K\\*V; ^ is sometimes used with constant on the left hand\r\nside but this would need to call pow() by necessity in all cases so it\r\nwould be slow regardless of the dispatch overhead. This leaves the four\r\nbasic arithmetic operations.\r\n\r\nFor + and \\*, we can implement a compiler-side optimization in the\r\nfuture that transforms K\\*R to R\\*K automatically. This could either be\r\ndone unconditionally at -O2, or conditionally based on the type of the\r\nvalue (driven by type annotations / inference) -- this technically\r\nchanges behavior in presence of metamethods, although it might be\r\nsensible to just always do this because non-commutative +/* are evil.\r\n\r\nHowever, for - and / it is impossible for the compiler to optimize this\r\nin the future, so we need dedicated opcodes. This only increases the\r\ninterpreter size by ~300 bytes (~1.5%) on X64.\r\n\r\nThis makes spectral-norm and math-partial-sums 6% faster; maybe more\r\nimportantly, voxelgen gets 1.5% faster (so this change does have\r\nreal-world impact).\r\n\r\nTo avoid the proliferation of bytecode versions this change piggybacks\r\non the bytecode version bump that was just made in 604 for vector\r\nconstants; we would still be able to enable these independently but\r\nwe'll consider v5 complete when both are enabled.\r\n\r\nRelated: #626\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>",
            "commit_timestamp": 1701185701.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701331387.079563,
            "elapsed_time": 281.32348465919495,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "89b437bb4edd63f4ee6cca3f5dcfcd734b5c3209",
            "commit_message": "Add SUBRK and DIVRK bytecode instructions to bytecode v5 (#1115)\n\nRight now, we can compile R\\*K for all arithmetic instructions, but K\\*R\r\ngets compiled into two instructions (LOADN/LOADK + arithmetic opcode).\r\n\r\nThis is problematic since it leads to reduced performance for some code.\r\nHowever, we'd like to avoid adding reverse variants of ADDK et al for\r\nall opcodes to avoid the increase in I$ footprint for interpreter.\r\n\r\nLooking at the arithmetic instructions, % and // don't have interesting\r\nuse cases for K\\*V; ^ is sometimes used with constant on the left hand\r\nside but this would need to call pow() by necessity in all cases so it\r\nwould be slow regardless of the dispatch overhead. This leaves the four\r\nbasic arithmetic operations.\r\n\r\nFor + and \\*, we can implement a compiler-side optimization in the\r\nfuture that transforms K\\*R to R\\*K automatically. This could either be\r\ndone unconditionally at -O2, or conditionally based on the type of the\r\nvalue (driven by type annotations / inference) -- this technically\r\nchanges behavior in presence of metamethods, although it might be\r\nsensible to just always do this because non-commutative +/* are evil.\r\n\r\nHowever, for - and / it is impossible for the compiler to optimize this\r\nin the future, so we need dedicated opcodes. This only increases the\r\ninterpreter size by ~300 bytes (~1.5%) on X64.\r\n\r\nThis makes spectral-norm and math-partial-sums 6% faster; maybe more\r\nimportantly, voxelgen gets 1.5% faster (so this change does have\r\nreal-world impact).\r\n\r\nTo avoid the proliferation of bytecode versions this change piggybacks\r\non the bytecode version bump that was just made in 604 for vector\r\nconstants; we would still be able to enable these independently but\r\nwe'll consider v5 complete when both are enabled.\r\n\r\nRelated: #626\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>",
            "commit_timestamp": 1701185701.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701345945.886034,
            "elapsed_time": 332.644811630249,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "89b437bb4edd63f4ee6cca3f5dcfcd734b5c3209",
            "commit_message": "Add SUBRK and DIVRK bytecode instructions to bytecode v5 (#1115)\n\nRight now, we can compile R\\*K for all arithmetic instructions, but K\\*R\r\ngets compiled into two instructions (LOADN/LOADK + arithmetic opcode).\r\n\r\nThis is problematic since it leads to reduced performance for some code.\r\nHowever, we'd like to avoid adding reverse variants of ADDK et al for\r\nall opcodes to avoid the increase in I$ footprint for interpreter.\r\n\r\nLooking at the arithmetic instructions, % and // don't have interesting\r\nuse cases for K\\*V; ^ is sometimes used with constant on the left hand\r\nside but this would need to call pow() by necessity in all cases so it\r\nwould be slow regardless of the dispatch overhead. This leaves the four\r\nbasic arithmetic operations.\r\n\r\nFor + and \\*, we can implement a compiler-side optimization in the\r\nfuture that transforms K\\*R to R\\*K automatically. This could either be\r\ndone unconditionally at -O2, or conditionally based on the type of the\r\nvalue (driven by type annotations / inference) -- this technically\r\nchanges behavior in presence of metamethods, although it might be\r\nsensible to just always do this because non-commutative +/* are evil.\r\n\r\nHowever, for - and / it is impossible for the compiler to optimize this\r\nin the future, so we need dedicated opcodes. This only increases the\r\ninterpreter size by ~300 bytes (~1.5%) on X64.\r\n\r\nThis makes spectral-norm and math-partial-sums 6% faster; maybe more\r\nimportantly, voxelgen gets 1.5% faster (so this change does have\r\nreal-world impact).\r\n\r\nTo avoid the proliferation of bytecode versions this change piggybacks\r\non the bytecode version bump that was just made in 604 for vector\r\nconstants; we would still be able to enable these independently but\r\nwe'll consider v5 complete when both are enabled.\r\n\r\nRelated: #626\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>",
            "commit_timestamp": 1701185701.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701360184.544277,
            "elapsed_time": 277.2292368412018,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "89b437bb4edd63f4ee6cca3f5dcfcd734b5c3209",
            "commit_message": "Add SUBRK and DIVRK bytecode instructions to bytecode v5 (#1115)\n\nRight now, we can compile R\\*K for all arithmetic instructions, but K\\*R\r\ngets compiled into two instructions (LOADN/LOADK + arithmetic opcode).\r\n\r\nThis is problematic since it leads to reduced performance for some code.\r\nHowever, we'd like to avoid adding reverse variants of ADDK et al for\r\nall opcodes to avoid the increase in I$ footprint for interpreter.\r\n\r\nLooking at the arithmetic instructions, % and // don't have interesting\r\nuse cases for K\\*V; ^ is sometimes used with constant on the left hand\r\nside but this would need to call pow() by necessity in all cases so it\r\nwould be slow regardless of the dispatch overhead. This leaves the four\r\nbasic arithmetic operations.\r\n\r\nFor + and \\*, we can implement a compiler-side optimization in the\r\nfuture that transforms K\\*R to R\\*K automatically. This could either be\r\ndone unconditionally at -O2, or conditionally based on the type of the\r\nvalue (driven by type annotations / inference) -- this technically\r\nchanges behavior in presence of metamethods, although it might be\r\nsensible to just always do this because non-commutative +/* are evil.\r\n\r\nHowever, for - and / it is impossible for the compiler to optimize this\r\nin the future, so we need dedicated opcodes. This only increases the\r\ninterpreter size by ~300 bytes (~1.5%) on X64.\r\n\r\nThis makes spectral-norm and math-partial-sums 6% faster; maybe more\r\nimportantly, voxelgen gets 1.5% faster (so this change does have\r\nreal-world impact).\r\n\r\nTo avoid the proliferation of bytecode versions this change piggybacks\r\non the bytecode version bump that was just made in 604 for vector\r\nconstants; we would still be able to enable these independently but\r\nwe'll consider v5 complete when both are enabled.\r\n\r\nRelated: #626\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>",
            "commit_timestamp": 1701185701.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701374684.577561,
            "elapsed_time": 335.1339147090912,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "89b437bb4edd63f4ee6cca3f5dcfcd734b5c3209",
            "commit_message": "Add SUBRK and DIVRK bytecode instructions to bytecode v5 (#1115)\n\nRight now, we can compile R\\*K for all arithmetic instructions, but K\\*R\r\ngets compiled into two instructions (LOADN/LOADK + arithmetic opcode).\r\n\r\nThis is problematic since it leads to reduced performance for some code.\r\nHowever, we'd like to avoid adding reverse variants of ADDK et al for\r\nall opcodes to avoid the increase in I$ footprint for interpreter.\r\n\r\nLooking at the arithmetic instructions, % and // don't have interesting\r\nuse cases for K\\*V; ^ is sometimes used with constant on the left hand\r\nside but this would need to call pow() by necessity in all cases so it\r\nwould be slow regardless of the dispatch overhead. This leaves the four\r\nbasic arithmetic operations.\r\n\r\nFor + and \\*, we can implement a compiler-side optimization in the\r\nfuture that transforms K\\*R to R\\*K automatically. This could either be\r\ndone unconditionally at -O2, or conditionally based on the type of the\r\nvalue (driven by type annotations / inference) -- this technically\r\nchanges behavior in presence of metamethods, although it might be\r\nsensible to just always do this because non-commutative +/* are evil.\r\n\r\nHowever, for - and / it is impossible for the compiler to optimize this\r\nin the future, so we need dedicated opcodes. This only increases the\r\ninterpreter size by ~300 bytes (~1.5%) on X64.\r\n\r\nThis makes spectral-norm and math-partial-sums 6% faster; maybe more\r\nimportantly, voxelgen gets 1.5% faster (so this change does have\r\nreal-world impact).\r\n\r\nTo avoid the proliferation of bytecode versions this change piggybacks\r\non the bytecode version bump that was just made in 604 for vector\r\nconstants; we would still be able to enable these independently but\r\nwe'll consider v5 complete when both are enabled.\r\n\r\nRelated: #626\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>",
            "commit_timestamp": 1701185701.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701389123.956743,
            "elapsed_time": 309.3664529323578,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "89b437bb4edd63f4ee6cca3f5dcfcd734b5c3209",
            "commit_message": "Add SUBRK and DIVRK bytecode instructions to bytecode v5 (#1115)\n\nRight now, we can compile R\\*K for all arithmetic instructions, but K\\*R\r\ngets compiled into two instructions (LOADN/LOADK + arithmetic opcode).\r\n\r\nThis is problematic since it leads to reduced performance for some code.\r\nHowever, we'd like to avoid adding reverse variants of ADDK et al for\r\nall opcodes to avoid the increase in I$ footprint for interpreter.\r\n\r\nLooking at the arithmetic instructions, % and // don't have interesting\r\nuse cases for K\\*V; ^ is sometimes used with constant on the left hand\r\nside but this would need to call pow() by necessity in all cases so it\r\nwould be slow regardless of the dispatch overhead. This leaves the four\r\nbasic arithmetic operations.\r\n\r\nFor + and \\*, we can implement a compiler-side optimization in the\r\nfuture that transforms K\\*R to R\\*K automatically. This could either be\r\ndone unconditionally at -O2, or conditionally based on the type of the\r\nvalue (driven by type annotations / inference) -- this technically\r\nchanges behavior in presence of metamethods, although it might be\r\nsensible to just always do this because non-commutative +/* are evil.\r\n\r\nHowever, for - and / it is impossible for the compiler to optimize this\r\nin the future, so we need dedicated opcodes. This only increases the\r\ninterpreter size by ~300 bytes (~1.5%) on X64.\r\n\r\nThis makes spectral-norm and math-partial-sums 6% faster; maybe more\r\nimportantly, voxelgen gets 1.5% faster (so this change does have\r\nreal-world impact).\r\n\r\nTo avoid the proliferation of bytecode versions this change piggybacks\r\non the bytecode version bump that was just made in 604 for vector\r\nconstants; we would still be able to enable these independently but\r\nwe'll consider v5 complete when both are enabled.\r\n\r\nRelated: #626\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>",
            "commit_timestamp": 1701185701.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701403405.788717,
            "elapsed_time": 280.4657940864563,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "89b437bb4edd63f4ee6cca3f5dcfcd734b5c3209",
            "commit_message": "Add SUBRK and DIVRK bytecode instructions to bytecode v5 (#1115)\n\nRight now, we can compile R\\*K for all arithmetic instructions, but K\\*R\r\ngets compiled into two instructions (LOADN/LOADK + arithmetic opcode).\r\n\r\nThis is problematic since it leads to reduced performance for some code.\r\nHowever, we'd like to avoid adding reverse variants of ADDK et al for\r\nall opcodes to avoid the increase in I$ footprint for interpreter.\r\n\r\nLooking at the arithmetic instructions, % and // don't have interesting\r\nuse cases for K\\*V; ^ is sometimes used with constant on the left hand\r\nside but this would need to call pow() by necessity in all cases so it\r\nwould be slow regardless of the dispatch overhead. This leaves the four\r\nbasic arithmetic operations.\r\n\r\nFor + and \\*, we can implement a compiler-side optimization in the\r\nfuture that transforms K\\*R to R\\*K automatically. This could either be\r\ndone unconditionally at -O2, or conditionally based on the type of the\r\nvalue (driven by type annotations / inference) -- this technically\r\nchanges behavior in presence of metamethods, although it might be\r\nsensible to just always do this because non-commutative +/* are evil.\r\n\r\nHowever, for - and / it is impossible for the compiler to optimize this\r\nin the future, so we need dedicated opcodes. This only increases the\r\ninterpreter size by ~300 bytes (~1.5%) on X64.\r\n\r\nThis makes spectral-norm and math-partial-sums 6% faster; maybe more\r\nimportantly, voxelgen gets 1.5% faster (so this change does have\r\nreal-world impact).\r\n\r\nTo avoid the proliferation of bytecode versions this change piggybacks\r\non the bytecode version bump that was just made in 604 for vector\r\nconstants; we would still be able to enable these independently but\r\nwe'll consider v5 complete when both are enabled.\r\n\r\nRelated: #626\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>",
            "commit_timestamp": 1701185701.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701417881.058175,
            "elapsed_time": 290.5722336769104,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "89b437bb4edd63f4ee6cca3f5dcfcd734b5c3209",
            "commit_message": "Add SUBRK and DIVRK bytecode instructions to bytecode v5 (#1115)\n\nRight now, we can compile R\\*K for all arithmetic instructions, but K\\*R\r\ngets compiled into two instructions (LOADN/LOADK + arithmetic opcode).\r\n\r\nThis is problematic since it leads to reduced performance for some code.\r\nHowever, we'd like to avoid adding reverse variants of ADDK et al for\r\nall opcodes to avoid the increase in I$ footprint for interpreter.\r\n\r\nLooking at the arithmetic instructions, % and // don't have interesting\r\nuse cases for K\\*V; ^ is sometimes used with constant on the left hand\r\nside but this would need to call pow() by necessity in all cases so it\r\nwould be slow regardless of the dispatch overhead. This leaves the four\r\nbasic arithmetic operations.\r\n\r\nFor + and \\*, we can implement a compiler-side optimization in the\r\nfuture that transforms K\\*R to R\\*K automatically. This could either be\r\ndone unconditionally at -O2, or conditionally based on the type of the\r\nvalue (driven by type annotations / inference) -- this technically\r\nchanges behavior in presence of metamethods, although it might be\r\nsensible to just always do this because non-commutative +/* are evil.\r\n\r\nHowever, for - and / it is impossible for the compiler to optimize this\r\nin the future, so we need dedicated opcodes. This only increases the\r\ninterpreter size by ~300 bytes (~1.5%) on X64.\r\n\r\nThis makes spectral-norm and math-partial-sums 6% faster; maybe more\r\nimportantly, voxelgen gets 1.5% faster (so this change does have\r\nreal-world impact).\r\n\r\nTo avoid the proliferation of bytecode versions this change piggybacks\r\non the bytecode version bump that was just made in 604 for vector\r\nconstants; we would still be able to enable these independently but\r\nwe'll consider v5 complete when both are enabled.\r\n\r\nRelated: #626\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>",
            "commit_timestamp": 1701185701.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701432224.936346,
            "elapsed_time": 283.41405391693115,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "89b437bb4edd63f4ee6cca3f5dcfcd734b5c3209",
            "commit_message": "Add SUBRK and DIVRK bytecode instructions to bytecode v5 (#1115)\n\nRight now, we can compile R\\*K for all arithmetic instructions, but K\\*R\r\ngets compiled into two instructions (LOADN/LOADK + arithmetic opcode).\r\n\r\nThis is problematic since it leads to reduced performance for some code.\r\nHowever, we'd like to avoid adding reverse variants of ADDK et al for\r\nall opcodes to avoid the increase in I$ footprint for interpreter.\r\n\r\nLooking at the arithmetic instructions, % and // don't have interesting\r\nuse cases for K\\*V; ^ is sometimes used with constant on the left hand\r\nside but this would need to call pow() by necessity in all cases so it\r\nwould be slow regardless of the dispatch overhead. This leaves the four\r\nbasic arithmetic operations.\r\n\r\nFor + and \\*, we can implement a compiler-side optimization in the\r\nfuture that transforms K\\*R to R\\*K automatically. This could either be\r\ndone unconditionally at -O2, or conditionally based on the type of the\r\nvalue (driven by type annotations / inference) -- this technically\r\nchanges behavior in presence of metamethods, although it might be\r\nsensible to just always do this because non-commutative +/* are evil.\r\n\r\nHowever, for - and / it is impossible for the compiler to optimize this\r\nin the future, so we need dedicated opcodes. This only increases the\r\ninterpreter size by ~300 bytes (~1.5%) on X64.\r\n\r\nThis makes spectral-norm and math-partial-sums 6% faster; maybe more\r\nimportantly, voxelgen gets 1.5% faster (so this change does have\r\nreal-world impact).\r\n\r\nTo avoid the proliferation of bytecode versions this change piggybacks\r\non the bytecode version bump that was just made in 604 for vector\r\nconstants; we would still be able to enable these independently but\r\nwe'll consider v5 complete when both are enabled.\r\n\r\nRelated: #626\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>",
            "commit_timestamp": 1701185701.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701446590.921869,
            "elapsed_time": 278.9313931465149,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "89b437bb4edd63f4ee6cca3f5dcfcd734b5c3209",
            "commit_message": "Add SUBRK and DIVRK bytecode instructions to bytecode v5 (#1115)\n\nRight now, we can compile R\\*K for all arithmetic instructions, but K\\*R\r\ngets compiled into two instructions (LOADN/LOADK + arithmetic opcode).\r\n\r\nThis is problematic since it leads to reduced performance for some code.\r\nHowever, we'd like to avoid adding reverse variants of ADDK et al for\r\nall opcodes to avoid the increase in I$ footprint for interpreter.\r\n\r\nLooking at the arithmetic instructions, % and // don't have interesting\r\nuse cases for K\\*V; ^ is sometimes used with constant on the left hand\r\nside but this would need to call pow() by necessity in all cases so it\r\nwould be slow regardless of the dispatch overhead. This leaves the four\r\nbasic arithmetic operations.\r\n\r\nFor + and \\*, we can implement a compiler-side optimization in the\r\nfuture that transforms K\\*R to R\\*K automatically. This could either be\r\ndone unconditionally at -O2, or conditionally based on the type of the\r\nvalue (driven by type annotations / inference) -- this technically\r\nchanges behavior in presence of metamethods, although it might be\r\nsensible to just always do this because non-commutative +/* are evil.\r\n\r\nHowever, for - and / it is impossible for the compiler to optimize this\r\nin the future, so we need dedicated opcodes. This only increases the\r\ninterpreter size by ~300 bytes (~1.5%) on X64.\r\n\r\nThis makes spectral-norm and math-partial-sums 6% faster; maybe more\r\nimportantly, voxelgen gets 1.5% faster (so this change does have\r\nreal-world impact).\r\n\r\nTo avoid the proliferation of bytecode versions this change piggybacks\r\non the bytecode version bump that was just made in 604 for vector\r\nconstants; we would still be able to enable these independently but\r\nwe'll consider v5 complete when both are enabled.\r\n\r\nRelated: #626\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>",
            "commit_timestamp": 1701185701.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701460979.573503,
            "elapsed_time": 279.42199301719666,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "89b437bb4edd63f4ee6cca3f5dcfcd734b5c3209",
            "commit_message": "Add SUBRK and DIVRK bytecode instructions to bytecode v5 (#1115)\n\nRight now, we can compile R\\*K for all arithmetic instructions, but K\\*R\r\ngets compiled into two instructions (LOADN/LOADK + arithmetic opcode).\r\n\r\nThis is problematic since it leads to reduced performance for some code.\r\nHowever, we'd like to avoid adding reverse variants of ADDK et al for\r\nall opcodes to avoid the increase in I$ footprint for interpreter.\r\n\r\nLooking at the arithmetic instructions, % and // don't have interesting\r\nuse cases for K\\*V; ^ is sometimes used with constant on the left hand\r\nside but this would need to call pow() by necessity in all cases so it\r\nwould be slow regardless of the dispatch overhead. This leaves the four\r\nbasic arithmetic operations.\r\n\r\nFor + and \\*, we can implement a compiler-side optimization in the\r\nfuture that transforms K\\*R to R\\*K automatically. This could either be\r\ndone unconditionally at -O2, or conditionally based on the type of the\r\nvalue (driven by type annotations / inference) -- this technically\r\nchanges behavior in presence of metamethods, although it might be\r\nsensible to just always do this because non-commutative +/* are evil.\r\n\r\nHowever, for - and / it is impossible for the compiler to optimize this\r\nin the future, so we need dedicated opcodes. This only increases the\r\ninterpreter size by ~300 bytes (~1.5%) on X64.\r\n\r\nThis makes spectral-norm and math-partial-sums 6% faster; maybe more\r\nimportantly, voxelgen gets 1.5% faster (so this change does have\r\nreal-world impact).\r\n\r\nTo avoid the proliferation of bytecode versions this change piggybacks\r\non the bytecode version bump that was just made in 604 for vector\r\nconstants; we would still be able to enable these independently but\r\nwe'll consider v5 complete when both are enabled.\r\n\r\nRelated: #626\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>",
            "commit_timestamp": 1701185701.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701475478.683929,
            "elapsed_time": 299.70510268211365,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "89b437bb4edd63f4ee6cca3f5dcfcd734b5c3209",
            "commit_message": "Add SUBRK and DIVRK bytecode instructions to bytecode v5 (#1115)\n\nRight now, we can compile R\\*K for all arithmetic instructions, but K\\*R\r\ngets compiled into two instructions (LOADN/LOADK + arithmetic opcode).\r\n\r\nThis is problematic since it leads to reduced performance for some code.\r\nHowever, we'd like to avoid adding reverse variants of ADDK et al for\r\nall opcodes to avoid the increase in I$ footprint for interpreter.\r\n\r\nLooking at the arithmetic instructions, % and // don't have interesting\r\nuse cases for K\\*V; ^ is sometimes used with constant on the left hand\r\nside but this would need to call pow() by necessity in all cases so it\r\nwould be slow regardless of the dispatch overhead. This leaves the four\r\nbasic arithmetic operations.\r\n\r\nFor + and \\*, we can implement a compiler-side optimization in the\r\nfuture that transforms K\\*R to R\\*K automatically. This could either be\r\ndone unconditionally at -O2, or conditionally based on the type of the\r\nvalue (driven by type annotations / inference) -- this technically\r\nchanges behavior in presence of metamethods, although it might be\r\nsensible to just always do this because non-commutative +/* are evil.\r\n\r\nHowever, for - and / it is impossible for the compiler to optimize this\r\nin the future, so we need dedicated opcodes. This only increases the\r\ninterpreter size by ~300 bytes (~1.5%) on X64.\r\n\r\nThis makes spectral-norm and math-partial-sums 6% faster; maybe more\r\nimportantly, voxelgen gets 1.5% faster (so this change does have\r\nreal-world impact).\r\n\r\nTo avoid the proliferation of bytecode versions this change piggybacks\r\non the bytecode version bump that was just made in 604 for vector\r\nconstants; we would still be able to enable these independently but\r\nwe'll consider v5 complete when both are enabled.\r\n\r\nRelated: #626\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>",
            "commit_timestamp": 1701185701.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701489803.040848,
            "elapsed_time": 299.12305545806885,
            "x64": false,
            "actual_files_count": 437,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "89b437bb4edd63f4ee6cca3f5dcfcd734b5c3209",
            "commit_message": "Add SUBRK and DIVRK bytecode instructions to bytecode v5 (#1115)\n\nRight now, we can compile R\\*K for all arithmetic instructions, but K\\*R\r\ngets compiled into two instructions (LOADN/LOADK + arithmetic opcode).\r\n\r\nThis is problematic since it leads to reduced performance for some code.\r\nHowever, we'd like to avoid adding reverse variants of ADDK et al for\r\nall opcodes to avoid the increase in I$ footprint for interpreter.\r\n\r\nLooking at the arithmetic instructions, % and // don't have interesting\r\nuse cases for K\\*V; ^ is sometimes used with constant on the left hand\r\nside but this would need to call pow() by necessity in all cases so it\r\nwould be slow regardless of the dispatch overhead. This leaves the four\r\nbasic arithmetic operations.\r\n\r\nFor + and \\*, we can implement a compiler-side optimization in the\r\nfuture that transforms K\\*R to R\\*K automatically. This could either be\r\ndone unconditionally at -O2, or conditionally based on the type of the\r\nvalue (driven by type annotations / inference) -- this technically\r\nchanges behavior in presence of metamethods, although it might be\r\nsensible to just always do this because non-commutative +/* are evil.\r\n\r\nHowever, for - and / it is impossible for the compiler to optimize this\r\nin the future, so we need dedicated opcodes. This only increases the\r\ninterpreter size by ~300 bytes (~1.5%) on X64.\r\n\r\nThis makes spectral-norm and math-partial-sums 6% faster; maybe more\r\nimportantly, voxelgen gets 1.5% faster (so this change does have\r\nreal-world impact).\r\n\r\nTo avoid the proliferation of bytecode versions this change piggybacks\r\non the bytecode version bump that was just made in 604 for vector\r\nconstants; we would still be able to enable these independently but\r\nwe'll consider v5 complete when both are enabled.\r\n\r\nRelated: #626\r\n\r\n---------\r\n\r\nCo-authored-by: vegorov-rbx <75688451+vegorov-rbx@users.noreply.github.com>",
            "commit_timestamp": 1701185701.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701504228.785467,
            "elapsed_time": 300.04658794403076,
            "x64": false,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c755875479fe8b0d46473317802f5440bb7d1723",
            "commit_message": "Sync to upstream/release/605 (#1118)\n\n- Implemented [Require by String with Relative\r\nPaths](https://github.com/luau-lang/rfcs/blob/master/docs/new-require-by-string-semantics.md)\r\nRFC\r\n- Implemented [Require by String with\r\nAliases](https://github.com/luau-lang/rfcs/blob/master/docs/require-by-string-aliases.md)\r\nRFC with support for `paths` and `alias` arrays in .luarc\r\n- Added SUBRK and DIVRK bytecode instructions to speed up\r\nconstant-number and constant/number operations\r\n- Added `--vector-lib`, `--vector-ctor` and `--vector-type` options to\r\nluau-compile to support code with vectors\r\n \r\nNew Solver\r\n- Correctness fixes to subtyping\r\n- Improvements to dataflow analysis\r\n\r\nNative Code Generation\r\n- Added bytecode analysis pass to predict type tags used in operations\r\n- Fixed rare cases of numerical loops being generated without an\r\ninterrupt instruction\r\n- Restored optimization data propagation into the linear block\r\n- Duplicate buffer length checks are optimized away\r\n\r\nMiscellaneous\r\n- Small performance improvements to new non-strict mode\r\n- Introduced more scripts for fuzzing Luau and processing the results,\r\nincluding fuzzer build support for CMake\r\n\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: David Cope <dcope@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: David Cope <dcope@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1701503217.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701518609.138413,
            "elapsed_time": 277.5364124774933,
            "x64": false,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c755875479fe8b0d46473317802f5440bb7d1723",
            "commit_message": "Sync to upstream/release/605 (#1118)\n\n- Implemented [Require by String with Relative\r\nPaths](https://github.com/luau-lang/rfcs/blob/master/docs/new-require-by-string-semantics.md)\r\nRFC\r\n- Implemented [Require by String with\r\nAliases](https://github.com/luau-lang/rfcs/blob/master/docs/require-by-string-aliases.md)\r\nRFC with support for `paths` and `alias` arrays in .luarc\r\n- Added SUBRK and DIVRK bytecode instructions to speed up\r\nconstant-number and constant/number operations\r\n- Added `--vector-lib`, `--vector-ctor` and `--vector-type` options to\r\nluau-compile to support code with vectors\r\n \r\nNew Solver\r\n- Correctness fixes to subtyping\r\n- Improvements to dataflow analysis\r\n\r\nNative Code Generation\r\n- Added bytecode analysis pass to predict type tags used in operations\r\n- Fixed rare cases of numerical loops being generated without an\r\ninterrupt instruction\r\n- Restored optimization data propagation into the linear block\r\n- Duplicate buffer length checks are optimized away\r\n\r\nMiscellaneous\r\n- Small performance improvements to new non-strict mode\r\n- Introduced more scripts for fuzzing Luau and processing the results,\r\nincluding fuzzer build support for CMake\r\n\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: David Cope <dcope@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: David Cope <dcope@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1701503217.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701532983.245944,
            "elapsed_time": 288.2648181915283,
            "x64": false,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c755875479fe8b0d46473317802f5440bb7d1723",
            "commit_message": "Sync to upstream/release/605 (#1118)\n\n- Implemented [Require by String with Relative\r\nPaths](https://github.com/luau-lang/rfcs/blob/master/docs/new-require-by-string-semantics.md)\r\nRFC\r\n- Implemented [Require by String with\r\nAliases](https://github.com/luau-lang/rfcs/blob/master/docs/require-by-string-aliases.md)\r\nRFC with support for `paths` and `alias` arrays in .luarc\r\n- Added SUBRK and DIVRK bytecode instructions to speed up\r\nconstant-number and constant/number operations\r\n- Added `--vector-lib`, `--vector-ctor` and `--vector-type` options to\r\nluau-compile to support code with vectors\r\n \r\nNew Solver\r\n- Correctness fixes to subtyping\r\n- Improvements to dataflow analysis\r\n\r\nNative Code Generation\r\n- Added bytecode analysis pass to predict type tags used in operations\r\n- Fixed rare cases of numerical loops being generated without an\r\ninterrupt instruction\r\n- Restored optimization data propagation into the linear block\r\n- Duplicate buffer length checks are optimized away\r\n\r\nMiscellaneous\r\n- Small performance improvements to new non-strict mode\r\n- Introduced more scripts for fuzzing Luau and processing the results,\r\nincluding fuzzer build support for CMake\r\n\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: David Cope <dcope@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: David Cope <dcope@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1701503217.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701547410.632192,
            "elapsed_time": 301.5716121196747,
            "x64": false,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c755875479fe8b0d46473317802f5440bb7d1723",
            "commit_message": "Sync to upstream/release/605 (#1118)\n\n- Implemented [Require by String with Relative\r\nPaths](https://github.com/luau-lang/rfcs/blob/master/docs/new-require-by-string-semantics.md)\r\nRFC\r\n- Implemented [Require by String with\r\nAliases](https://github.com/luau-lang/rfcs/blob/master/docs/require-by-string-aliases.md)\r\nRFC with support for `paths` and `alias` arrays in .luarc\r\n- Added SUBRK and DIVRK bytecode instructions to speed up\r\nconstant-number and constant/number operations\r\n- Added `--vector-lib`, `--vector-ctor` and `--vector-type` options to\r\nluau-compile to support code with vectors\r\n \r\nNew Solver\r\n- Correctness fixes to subtyping\r\n- Improvements to dataflow analysis\r\n\r\nNative Code Generation\r\n- Added bytecode analysis pass to predict type tags used in operations\r\n- Fixed rare cases of numerical loops being generated without an\r\ninterrupt instruction\r\n- Restored optimization data propagation into the linear block\r\n- Duplicate buffer length checks are optimized away\r\n\r\nMiscellaneous\r\n- Small performance improvements to new non-strict mode\r\n- Introduced more scripts for fuzzing Luau and processing the results,\r\nincluding fuzzer build support for CMake\r\n\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: David Cope <dcope@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vighnesh Vijay <vvijay@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Weiss <aaronweiss@roblox.com>\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: David Cope <dcope@roblox.com>\r\nCo-authored-by: Lily Brown <lbrown@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1701503217.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701561922.792332,
            "elapsed_time": 305.92495679855347,
            "x64": false,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "ce1800746bc2da0b8c2e0d4746b6dfcdf74bcbb4",
            "commit_message": "Fix 'require' in benchmarks to work with new relative system (#1120)\n\nOld style require is now called with `pcall` to support comparing\r\nagainst Lua.\r\nNew style require is now a third option.\r\n\r\nEdit: this will be a temporary solution until the 'paths' support in\r\n.luaurc is fixed.",
            "commit_timestamp": 1701555654.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701576228.862788,
            "elapsed_time": 297.99482107162476,
            "x64": false,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "ce1800746bc2da0b8c2e0d4746b6dfcdf74bcbb4",
            "commit_message": "Fix 'require' in benchmarks to work with new relative system (#1120)\n\nOld style require is now called with `pcall` to support comparing\r\nagainst Lua.\r\nNew style require is now a third option.\r\n\r\nEdit: this will be a temporary solution until the 'paths' support in\r\n.luaurc is fixed.",
            "commit_timestamp": 1701555654.0
        },
        {
            "tool_version": "233.0.20231128.202159-rc01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701590970.196469,
            "elapsed_time": 287.4409921169281,
            "x64": false,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "ce1800746bc2da0b8c2e0d4746b6dfcdf74bcbb4",
            "commit_message": "Fix 'require' in benchmarks to work with new relative system (#1120)\n\nOld style require is now called with `pcall` to support comparing\r\nagainst Lua.\r\nNew style require is now a third option.\r\n\r\nEdit: this will be a temporary solution until the 'paths' support in\r\n.luaurc is fixed.",
            "commit_timestamp": 1701555654.0
        },
        {
            "tool_version": "233.0.20231128.202159-rc01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701591366.451615,
            "elapsed_time": 251.54168128967285,
            "x64": false,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "ce1800746bc2da0b8c2e0d4746b6dfcdf74bcbb4",
            "commit_message": "Fix 'require' in benchmarks to work with new relative system (#1120)\n\nOld style require is now called with `pcall` to support comparing\r\nagainst Lua.\r\nNew style require is now a third option.\r\n\r\nEdit: this will be a temporary solution until the 'paths' support in\r\n.luaurc is fixed.",
            "commit_timestamp": 1701555654.0
        },
        {
            "tool_version": "233.0.20231128.202159-rc01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701598421.906762,
            "elapsed_time": 280.0126872062683,
            "x64": false,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "ce1800746bc2da0b8c2e0d4746b6dfcdf74bcbb4",
            "commit_message": "Fix 'require' in benchmarks to work with new relative system (#1120)\n\nOld style require is now called with `pcall` to support comparing\r\nagainst Lua.\r\nNew style require is now a third option.\r\n\r\nEdit: this will be a temporary solution until the 'paths' support in\r\n.luaurc is fixed.",
            "commit_timestamp": 1701555654.0
        },
        {
            "tool_version": "233.0.20231128.202159-rc01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701604504.369923,
            "elapsed_time": 274.33416652679443,
            "x64": false,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "ce1800746bc2da0b8c2e0d4746b6dfcdf74bcbb4",
            "commit_message": "Fix 'require' in benchmarks to work with new relative system (#1120)\n\nOld style require is now called with `pcall` to support comparing\r\nagainst Lua.\r\nNew style require is now a third option.\r\n\r\nEdit: this will be a temporary solution until the 'paths' support in\r\n.luaurc is fixed.",
            "commit_timestamp": 1701555654.0
        },
        {
            "tool_version": "233.0.20231128.202159-rc01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701605012.930273,
            "elapsed_time": 272.0268437862396,
            "x64": false,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "ce1800746bc2da0b8c2e0d4746b6dfcdf74bcbb4",
            "commit_message": "Fix 'require' in benchmarks to work with new relative system (#1120)\n\nOld style require is now called with `pcall` to support comparing\r\nagainst Lua.\r\nNew style require is now a third option.\r\n\r\nEdit: this will be a temporary solution until the 'paths' support in\r\n.luaurc is fixed.",
            "commit_timestamp": 1701555654.0
        },
        {
            "tool_version": "233.0.20231128.202159-rc01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701619389.369446,
            "elapsed_time": 273.5134274959564,
            "x64": false,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "ce1800746bc2da0b8c2e0d4746b6dfcdf74bcbb4",
            "commit_message": "Fix 'require' in benchmarks to work with new relative system (#1120)\n\nOld style require is now called with `pcall` to support comparing\r\nagainst Lua.\r\nNew style require is now a third option.\r\n\r\nEdit: this will be a temporary solution until the 'paths' support in\r\n.luaurc is fixed.",
            "commit_timestamp": 1701555654.0
        },
        {
            "tool_version": "233.0.20231128.202159-rc01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701633819.543527,
            "elapsed_time": 281.75804591178894,
            "x64": false,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "ce1800746bc2da0b8c2e0d4746b6dfcdf74bcbb4",
            "commit_message": "Fix 'require' in benchmarks to work with new relative system (#1120)\n\nOld style require is now called with `pcall` to support comparing\r\nagainst Lua.\r\nNew style require is now a third option.\r\n\r\nEdit: this will be a temporary solution until the 'paths' support in\r\n.luaurc is fixed.",
            "commit_timestamp": 1701555654.0
        },
        {
            "tool_version": "233.0.20231128.202159-rc01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701648254.576126,
            "elapsed_time": 261.6960883140564,
            "x64": false,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "ce1800746bc2da0b8c2e0d4746b6dfcdf74bcbb4",
            "commit_message": "Fix 'require' in benchmarks to work with new relative system (#1120)\n\nOld style require is now called with `pcall` to support comparing\r\nagainst Lua.\r\nNew style require is now a third option.\r\n\r\nEdit: this will be a temporary solution until the 'paths' support in\r\n.luaurc is fixed.",
            "commit_timestamp": 1701555654.0
        },
        {
            "tool_version": "233.0.20231128.202159-rc01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701662618.897403,
            "elapsed_time": 314.6921262741089,
            "x64": false,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "ce1800746bc2da0b8c2e0d4746b6dfcdf74bcbb4",
            "commit_message": "Fix 'require' in benchmarks to work with new relative system (#1120)\n\nOld style require is now called with `pcall` to support comparing\r\nagainst Lua.\r\nNew style require is now a third option.\r\n\r\nEdit: this will be a temporary solution until the 'paths' support in\r\n.luaurc is fixed.",
            "commit_timestamp": 1701555654.0
        },
        {
            "tool_version": "233.0.20231128.202159-rc01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701674152.564713,
            "elapsed_time": 272.7174940109253,
            "x64": false,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "ce1800746bc2da0b8c2e0d4746b6dfcdf74bcbb4",
            "commit_message": "Fix 'require' in benchmarks to work with new relative system (#1120)\n\nOld style require is now called with `pcall` to support comparing\r\nagainst Lua.\r\nNew style require is now a third option.\r\n\r\nEdit: this will be a temporary solution until the 'paths' support in\r\n.luaurc is fixed.",
            "commit_timestamp": 1701555654.0
        },
        {
            "tool_version": "233.0.20231128.202159-rc01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701677011.453917,
            "elapsed_time": 269.11723470687866,
            "x64": false,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "ce1800746bc2da0b8c2e0d4746b6dfcdf74bcbb4",
            "commit_message": "Fix 'require' in benchmarks to work with new relative system (#1120)\n\nOld style require is now called with `pcall` to support comparing\r\nagainst Lua.\r\nNew style require is now a third option.\r\n\r\nEdit: this will be a temporary solution until the 'paths' support in\r\n.luaurc is fixed.",
            "commit_timestamp": 1701555654.0
        },
        {
            "tool_version": "233.0.20231128.202159-rc01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701678353.196146,
            "elapsed_time": 290.1029143333435,
            "x64": false,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "ce1800746bc2da0b8c2e0d4746b6dfcdf74bcbb4",
            "commit_message": "Fix 'require' in benchmarks to work with new relative system (#1120)\n\nOld style require is now called with `pcall` to support comparing\r\nagainst Lua.\r\nNew style require is now a third option.\r\n\r\nEdit: this will be a temporary solution until the 'paths' support in\r\n.luaurc is fixed.",
            "commit_timestamp": 1701555654.0
        },
        {
            "tool_version": "233.0.20231128.202159-rc01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701679193.844976,
            "elapsed_time": 267.00113439559937,
            "x64": false,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "ce1800746bc2da0b8c2e0d4746b6dfcdf74bcbb4",
            "commit_message": "Fix 'require' in benchmarks to work with new relative system (#1120)\n\nOld style require is now called with `pcall` to support comparing\r\nagainst Lua.\r\nNew style require is now a third option.\r\n\r\nEdit: this will be a temporary solution until the 'paths' support in\r\n.luaurc is fixed.",
            "commit_timestamp": 1701555654.0
        },
        {
            "tool_version": "233.0.20231128.202159-rc01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701702388.824703,
            "elapsed_time": 269.0935661792755,
            "x64": false,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "ce1800746bc2da0b8c2e0d4746b6dfcdf74bcbb4",
            "commit_message": "Fix 'require' in benchmarks to work with new relative system (#1120)\n\nOld style require is now called with `pcall` to support comparing\r\nagainst Lua.\r\nNew style require is now a third option.\r\n\r\nEdit: this will be a temporary solution until the 'paths' support in\r\n.luaurc is fixed.",
            "commit_timestamp": 1701555654.0
        },
        {
            "tool_version": "233.0.20231128.202159-rc01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701745550.141428,
            "elapsed_time": 280.40537190437317,
            "x64": false,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "aafea36235a7014047ad95cc82d56d54a562f82f",
            "commit_message": "Fixed the backwards compatible benchmark support library require (#1125)\n\nPrevious benchmark require fix wasn't actually working correctly for the\r\nold style require (or running in Lua).",
            "commit_timestamp": 1701722911.0
        },
        {
            "tool_version": "233.0.20231128.202159-rc01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701779895.883582,
            "elapsed_time": 258.14547204971313,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32694.13414001465,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "aafea36235a7014047ad95cc82d56d54a562f82f",
            "commit_message": "Fixed the backwards compatible benchmark support library require (#1125)\n\nPrevious benchmark require fix wasn't actually working correctly for the\r\nold style require (or running in Lua).",
            "commit_timestamp": 1701722911.0
        },
        {
            "tool_version": "233.0.20231128.202159-rc01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701788742.877696,
            "elapsed_time": 265.6009101867676,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32699.501106262207,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "aafea36235a7014047ad95cc82d56d54a562f82f",
            "commit_message": "Fixed the backwards compatible benchmark support library require (#1125)\n\nPrevious benchmark require fix wasn't actually working correctly for the\r\nold style require (or running in Lua).",
            "commit_timestamp": 1701722911.0
        },
        {
            "tool_version": "233.0.20231128.202159-rc01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701831996.550576,
            "elapsed_time": 284.31749987602234,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32732.563682556152,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "2ea7193777c3f5fa5011be83eb354d42351f753d",
            "commit_message": "Resolve RequireByString test suite failures on Ubuntu CI (#1124)\n\nThis PR resolves the RequireByString test suite failures in CI on\r\nUbuntu. The issue was that paths on linux are case sensitive and thus\r\nMacOS/Windows machines simply behaved as if the paths to the test files\r\nwere case-insensitive, but the linux machine was unable to find the test\r\nfiles. Those tests were `#ifdef'd` out, and have been un `#ifdef'd` to\r\ndemonstrate these changes work.",
            "commit_timestamp": 1701815462.0
        },
        {
            "tool_version": "233.0.20231128.202159-rc01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701875124.373538,
            "elapsed_time": 262.45333337783813,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32759.279121398926,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "2ea7193777c3f5fa5011be83eb354d42351f753d",
            "commit_message": "Resolve RequireByString test suite failures on Ubuntu CI (#1124)\n\nThis PR resolves the RequireByString test suite failures in CI on\r\nUbuntu. The issue was that paths on linux are case sensitive and thus\r\nMacOS/Windows machines simply behaved as if the paths to the test files\r\nwere case-insensitive, but the linux machine was unable to find the test\r\nfiles. Those tests were `#ifdef'd` out, and have been un `#ifdef'd` to\r\ndemonstrate these changes work.",
            "commit_timestamp": 1701815462.0
        },
        {
            "tool_version": "233.0.20231128.202159-rc01",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701918336.485143,
            "elapsed_time": 263.5777060985565,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32717.841911315918,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "2ea7193777c3f5fa5011be83eb354d42351f753d",
            "commit_message": "Resolve RequireByString test suite failures on Ubuntu CI (#1124)\n\nThis PR resolves the RequireByString test suite failures in CI on\r\nUbuntu. The issue was that paths on linux are case sensitive and thus\r\nMacOS/Windows machines simply behaved as if the paths to the test files\r\nwere case-insensitive, but the linux machine was unable to find the test\r\nfiles. Those tests were `#ifdef'd` out, and have been un `#ifdef'd` to\r\ndemonstrate these changes work.",
            "commit_timestamp": 1701815462.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701943369.53251,
            "elapsed_time": 252.74508452415466,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32728.765014648438,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "2ea7193777c3f5fa5011be83eb354d42351f753d",
            "commit_message": "Resolve RequireByString test suite failures on Ubuntu CI (#1124)\n\nThis PR resolves the RequireByString test suite failures in CI on\r\nUbuntu. The issue was that paths on linux are case sensitive and thus\r\nMacOS/Windows machines simply behaved as if the paths to the test files\r\nwere case-insensitive, but the linux machine was unable to find the test\r\nfiles. Those tests were `#ifdef'd` out, and have been un `#ifdef'd` to\r\ndemonstrate these changes work.",
            "commit_timestamp": 1701815462.0
        },
        {
            "tool_version": "241.0.20231206.222733-eap01d",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701944569.359075,
            "elapsed_time": 221.292906999588,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 26901.837577819824,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "2ea7193777c3f5fa5011be83eb354d42351f753d",
            "commit_message": "Resolve RequireByString test suite failures on Ubuntu CI (#1124)\n\nThis PR resolves the RequireByString test suite failures in CI on\r\nUbuntu. The issue was that paths on linux are case sensitive and thus\r\nMacOS/Windows machines simply behaved as if the paths to the test files\r\nwere case-insensitive, but the linux machine was unable to find the test\r\nfiles. Those tests were `#ifdef'd` out, and have been un `#ifdef'd` to\r\ndemonstrate these changes work.",
            "commit_timestamp": 1701815462.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1701961541.64289,
            "elapsed_time": 273.0635941028595,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32715.06053161621,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "2ea7193777c3f5fa5011be83eb354d42351f753d",
            "commit_message": "Resolve RequireByString test suite failures on Ubuntu CI (#1124)\n\nThis PR resolves the RequireByString test suite failures in CI on\r\nUbuntu. The issue was that paths on linux are case sensitive and thus\r\nMacOS/Windows machines simply behaved as if the paths to the test files\r\nwere case-insensitive, but the linux machine was unable to find the test\r\nfiles. Those tests were `#ifdef'd` out, and have been un `#ifdef'd` to\r\ndemonstrate these changes work.",
            "commit_timestamp": 1701815462.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1702004721.943003,
            "elapsed_time": 245.54462265968323,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32739.48533630371,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "2ea7193777c3f5fa5011be83eb354d42351f753d",
            "commit_message": "Resolve RequireByString test suite failures on Ubuntu CI (#1124)\n\nThis PR resolves the RequireByString test suite failures in CI on\r\nUbuntu. The issue was that paths on linux are case sensitive and thus\r\nMacOS/Windows machines simply behaved as if the paths to the test files\r\nwere case-insensitive, but the linux machine was unable to find the test\r\nfiles. Those tests were `#ifdef'd` out, and have been un `#ifdef'd` to\r\ndemonstrate these changes work.",
            "commit_timestamp": 1701815462.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1702048018.508308,
            "elapsed_time": 255.93681693077087,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32733.274490356445,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "2ea7193777c3f5fa5011be83eb354d42351f753d",
            "commit_message": "Resolve RequireByString test suite failures on Ubuntu CI (#1124)\n\nThis PR resolves the RequireByString test suite failures in CI on\r\nUbuntu. The issue was that paths on linux are case sensitive and thus\r\nMacOS/Windows machines simply behaved as if the paths to the test files\r\nwere case-insensitive, but the linux machine was unable to find the test\r\nfiles. Those tests were `#ifdef'd` out, and have been un `#ifdef'd` to\r\ndemonstrate these changes work.",
            "commit_timestamp": 1701815462.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1702091178.29754,
            "elapsed_time": 258.5038855075836,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32814.84100341797,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c26d820902ac66740bf2054e0822b7024a67c4cf",
            "commit_message": "Sync to upstream/release/606 (#1127)\n\nNew Solver\r\n* Improvements to data flow analysis\r\n\r\nNative Code Generation\r\n* Block limit is now per-function instead of per-module\r\n\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1702072216.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1702134303.425982,
            "elapsed_time": 244.59868574142456,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32840.75393676758,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c26d820902ac66740bf2054e0822b7024a67c4cf",
            "commit_message": "Sync to upstream/release/606 (#1127)\n\nNew Solver\r\n* Improvements to data flow analysis\r\n\r\nNative Code Generation\r\n* Block limit is now per-function instead of per-module\r\n\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1702072216.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1702177524.621124,
            "elapsed_time": 250.58491444587708,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32844.01946258545,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c26d820902ac66740bf2054e0822b7024a67c4cf",
            "commit_message": "Sync to upstream/release/606 (#1127)\n\nNew Solver\r\n* Improvements to data flow analysis\r\n\r\nNative Code Generation\r\n* Block limit is now per-function instead of per-module\r\n\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1702072216.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1702220744.313605,
            "elapsed_time": 252.53806614875793,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32732.925750732422,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c26d820902ac66740bf2054e0822b7024a67c4cf",
            "commit_message": "Sync to upstream/release/606 (#1127)\n\nNew Solver\r\n* Improvements to data flow analysis\r\n\r\nNative Code Generation\r\n* Block limit is now per-function instead of per-module\r\n\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1702072216.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1702264004.664089,
            "elapsed_time": 267.47819209098816,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32828.16354370117,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c26d820902ac66740bf2054e0822b7024a67c4cf",
            "commit_message": "Sync to upstream/release/606 (#1127)\n\nNew Solver\r\n* Improvements to data flow analysis\r\n\r\nNative Code Generation\r\n* Block limit is now per-function instead of per-module\r\n\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1702072216.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1702307245.518873,
            "elapsed_time": 285.487517118454,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32720.044326782227,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c26d820902ac66740bf2054e0822b7024a67c4cf",
            "commit_message": "Sync to upstream/release/606 (#1127)\n\nNew Solver\r\n* Improvements to data flow analysis\r\n\r\nNative Code Generation\r\n* Block limit is now per-function instead of per-module\r\n\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1702072216.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1702350407.326812,
            "elapsed_time": 255.68563175201416,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32805.13529968262,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c26d820902ac66740bf2054e0822b7024a67c4cf",
            "commit_message": "Sync to upstream/release/606 (#1127)\n\nNew Solver\r\n* Improvements to data flow analysis\r\n\r\nNative Code Generation\r\n* Block limit is now per-function instead of per-module\r\n\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1702072216.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1702393558.29013,
            "elapsed_time": 256.8267135620117,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32813.459815979004,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c26d820902ac66740bf2054e0822b7024a67c4cf",
            "commit_message": "Sync to upstream/release/606 (#1127)\n\nNew Solver\r\n* Improvements to data flow analysis\r\n\r\nNative Code Generation\r\n* Block limit is now per-function instead of per-module\r\n\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1702072216.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1702436714.573638,
            "elapsed_time": 246.78253889083862,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32834.81244659424,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c26d820902ac66740bf2054e0822b7024a67c4cf",
            "commit_message": "Sync to upstream/release/606 (#1127)\n\nNew Solver\r\n* Improvements to data flow analysis\r\n\r\nNative Code Generation\r\n* Block limit is now per-function instead of per-module\r\n\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1702072216.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1702479965.26418,
            "elapsed_time": 262.95063400268555,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32578.886207580566,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c26d820902ac66740bf2054e0822b7024a67c4cf",
            "commit_message": "Sync to upstream/release/606 (#1127)\n\nNew Solver\r\n* Improvements to data flow analysis\r\n\r\nNative Code Generation\r\n* Block limit is now per-function instead of per-module\r\n\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1702072216.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1702523126.17921,
            "elapsed_time": 258.14034366607666,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32799.94635772705,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c26d820902ac66740bf2054e0822b7024a67c4cf",
            "commit_message": "Sync to upstream/release/606 (#1127)\n\nNew Solver\r\n* Improvements to data flow analysis\r\n\r\nNative Code Generation\r\n* Block limit is now per-function instead of per-module\r\n\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1702072216.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1702566337.775001,
            "elapsed_time": 261.9987123012543,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32837.3864440918,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "c26d820902ac66740bf2054e0822b7024a67c4cf",
            "commit_message": "Sync to upstream/release/606 (#1127)\n\nNew Solver\r\n* Improvements to data flow analysis\r\n\r\nNative Code Generation\r\n* Block limit is now per-function instead of per-module\r\n\r\nCo-authored-by: Alexander McCord <amccord@roblox.com>\r\nCo-authored-by: Andy Friesen <afriesen@roblox.com>\r\nCo-authored-by: Aviral Goel <agoel@roblox.com>\r\nCo-authored-by: Vyacheslav Egorov <vegorov@roblox.com>",
            "commit_timestamp": 1702072216.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1702609559.971015,
            "elapsed_time": 272.94470405578613,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32792.748390197754,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "2173938eb08ed35d4dc3eea86ddabcfc01fe5b9b",
            "commit_message": "Add tagged lightuserdata (#1087)\n\nThis change adds support for tagged lightuserdata and optional custom\r\ntypenames for lightuserdata.\r\n\r\nBackground: Lightuserdata is an efficient representation for many kinds\r\nof unmanaged handles and resources in a game engine. However, currently\r\nthe VM only supports one kind of lightuserdata, which makes it\r\nproblematic in practice. For example, it's not possible to distinguish\r\nbetween different kinds of lightuserdata in Lua bindings, which can lead\r\nto unsafe practices and even crashes when a wrong kind of lightuserdata\r\nis passed to a binding function. Tagged lightuserdata work similarly to\r\ntagged userdata, i.e. they allow checking the tag quickly using\r\nlua_tolightuserdatatagged (or lua_lightuserdatatag).\r\n\r\nThe tag is stored in the 'extra' field of TValue so it will add no cost\r\nto the (untagged) lightuserdata type.\r\n\r\nAlternatives would be to use full userdata values or use bitpacking to\r\nembed type information into lightuserdata on application level.\r\nUnfortunately these options are not that great in practice: full\r\nuserdata have major performance implications and bitpacking fails in\r\ncases where full 64 bits are already used (e.g. pointers or 64-bit\r\nhashes).\r\n\r\nLightuserdata names are not strictly necessary but they are rather\r\nconvenient when debugging Lua code. More precise error messages and\r\ntostring returning more specific typename are useful to have in practice\r\n(e.g. \"resource\" or \"entity\" instead of the more generic \"userdata\").\r\n\r\nImpl note: I did not add support for renaming tags in\r\nlua_setlightuserdataname as I'm not sure if it's possible to free fixed\r\nstrings. If it's simple enough, maybe we should allow renaming (although\r\nI can't think of a specific need for it)?\r\n\r\n---------\r\n\r\nCo-authored-by: Petri H\u00e4kkinen <petrih@rmd.remedy.fi>",
            "commit_timestamp": 1702595151.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1702652786.233945,
            "elapsed_time": 260.46059799194336,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32883.76623535156,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "2173938eb08ed35d4dc3eea86ddabcfc01fe5b9b",
            "commit_message": "Add tagged lightuserdata (#1087)\n\nThis change adds support for tagged lightuserdata and optional custom\r\ntypenames for lightuserdata.\r\n\r\nBackground: Lightuserdata is an efficient representation for many kinds\r\nof unmanaged handles and resources in a game engine. However, currently\r\nthe VM only supports one kind of lightuserdata, which makes it\r\nproblematic in practice. For example, it's not possible to distinguish\r\nbetween different kinds of lightuserdata in Lua bindings, which can lead\r\nto unsafe practices and even crashes when a wrong kind of lightuserdata\r\nis passed to a binding function. Tagged lightuserdata work similarly to\r\ntagged userdata, i.e. they allow checking the tag quickly using\r\nlua_tolightuserdatatagged (or lua_lightuserdatatag).\r\n\r\nThe tag is stored in the 'extra' field of TValue so it will add no cost\r\nto the (untagged) lightuserdata type.\r\n\r\nAlternatives would be to use full userdata values or use bitpacking to\r\nembed type information into lightuserdata on application level.\r\nUnfortunately these options are not that great in practice: full\r\nuserdata have major performance implications and bitpacking fails in\r\ncases where full 64 bits are already used (e.g. pointers or 64-bit\r\nhashes).\r\n\r\nLightuserdata names are not strictly necessary but they are rather\r\nconvenient when debugging Lua code. More precise error messages and\r\ntostring returning more specific typename are useful to have in practice\r\n(e.g. \"resource\" or \"entity\" instead of the more generic \"userdata\").\r\n\r\nImpl note: I did not add support for renaming tags in\r\nlua_setlightuserdataname as I'm not sure if it's possible to free fixed\r\nstrings. If it's simple enough, maybe we should allow renaming (although\r\nI can't think of a specific need for it)?\r\n\r\n---------\r\n\r\nCo-authored-by: Petri H\u00e4kkinen <petrih@rmd.remedy.fi>",
            "commit_timestamp": 1702595151.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1702695960.38066,
            "elapsed_time": 257.6707012653351,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32842.82530975342,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1702739100.377233,
            "elapsed_time": 260.5054485797882,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32896.69017791748,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1702782373.794104,
            "elapsed_time": 268.714236497879,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32827.040672302246,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1702825526.993399,
            "elapsed_time": 257.9746153354645,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32878.54481506348,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1702868737.163973,
            "elapsed_time": 246.12271571159363,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32854.1438369751,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1702911978.389769,
            "elapsed_time": 257.23442101478577,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32843.04299926758,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1702955237.198423,
            "elapsed_time": 279.1560688018799,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32927.703620910645,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1702998303.974237,
            "elapsed_time": 250.76360964775085,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32978.78944396973,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703041536.660259,
            "elapsed_time": 264.55063366889954,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32884.89813232422,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703084812.7599,
            "elapsed_time": 267.9839951992035,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32889.63383483887,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231204.3905",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703127899.11735,
            "elapsed_time": 255.79797458648682,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32875.4260559082,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703161671.448509,
            "elapsed_time": 270.8571813106537,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32641.827278137207,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703171168.259962,
            "elapsed_time": 266.56888794898987,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32893.91013336182,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703214409.755608,
            "elapsed_time": 265.00310826301575,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32890.41694641113,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703257554.83923,
            "elapsed_time": 273.4821193218231,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32805.05545043945,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703300758.360826,
            "elapsed_time": 268.0721251964569,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32846.38137054443,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703343953.836749,
            "elapsed_time": 272.8961453437805,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32846.86624145508,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703387129.827974,
            "elapsed_time": 257.50170254707336,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32892.54335021973,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703430302.456663,
            "elapsed_time": 243.16207313537598,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32876.5237197876,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703473555.016646,
            "elapsed_time": 260.9938335418701,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32802.038414001465,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703516784.725698,
            "elapsed_time": 257.39628887176514,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32848.36570739746,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703559924.593842,
            "elapsed_time": 246.35903453826904,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32885.66524505615,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703603138.475495,
            "elapsed_time": 253.29260540008545,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32838.08631896973,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703646349.79426,
            "elapsed_time": 257.5301887989044,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32852.233322143555,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703672970.911615,
            "elapsed_time": 256.85208797454834,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32870.38845825195,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703689551.400453,
            "elapsed_time": 278.37935876846313,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32897.07709503174,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703732791.007104,
            "elapsed_time": 257.4946286678314,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32954.5086517334,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703775960.376159,
            "elapsed_time": 258.9369649887085,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32872.61478424072,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703819153.057364,
            "elapsed_time": 262.15890192985535,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32906.64884185791,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703862379.477981,
            "elapsed_time": 256.36826610565186,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32871.62336730957,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703905548.601885,
            "elapsed_time": 262.7980353832245,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32919.569107055664,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703948762.888613,
            "elapsed_time": 270.891649723053,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32854.255310058594,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1703991899.956208,
            "elapsed_time": 249.74204516410828,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32921.770751953125,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1704035142.539295,
            "elapsed_time": 258.3984274864197,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32765.87786102295,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1704078387.833834,
            "elapsed_time": 260.26257729530334,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32947.10401916504,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1704121506.447966,
            "elapsed_time": 255.8428316116333,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32964.033515930176,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1704164757.608685,
            "elapsed_time": 252.44261479377747,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32765.79584503174,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        },
        {
            "tool_version": "233.0.20231218.102231",
            "error_mismatch": false,
            "project": null,
            "timestamp": 1704207906.016263,
            "elapsed_time": 255.17532682418823,
            "x64": true,
            "actual_files_count": 442,
            "expected_files_count": 379,
            "memory_traffic": 32998.650802612305,
            "repo_url": "https://github.com/luau-lang/luau",
            "commit_ref": "e76802f2ce698ca090a793b24c07e336b21ade9f",
            "commit_message": "Add a prefix to TaggedLuData flag to have it auto-enabled in flags ON mode (#1130)\n\n",
            "commit_timestamp": 1702677074.0
        }
    ]
}