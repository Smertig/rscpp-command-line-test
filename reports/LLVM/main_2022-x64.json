{
    "v1": [
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1684603737.956203,
            "elapsed_time": 1686.055385351181,
            "x64": true,
            "actual_files_count": 1661,
            "expected_files_count": null
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1684610077.385662,
            "elapsed_time": 4011.8417756557465,
            "x64": true,
            "actual_files_count": 1661,
            "expected_files_count": null
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684617782.754098,
            "elapsed_time": 4125.218888044357,
            "x64": true,
            "actual_files_count": 1661,
            "expected_files_count": 1661
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684632365.571352,
            "elapsed_time": 4131.389887332916,
            "x64": true,
            "actual_files_count": 1661,
            "expected_files_count": 1661
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684646507.460228,
            "elapsed_time": 4050.072568655014,
            "x64": true,
            "actual_files_count": 1661,
            "expected_files_count": 1661
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684660783.781127,
            "elapsed_time": 3890.4404566287994,
            "x64": true,
            "actual_files_count": 1661,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "287dd0142c08caad5b32628f3842dfd5d5c59d03",
            "commit_message": "[X86][MC] Simplify some code in X86AsmBackend.cpp, NFCI\n",
            "commit_timestamp": 1684647829.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684675244.317621,
            "elapsed_time": 3994.0369441509247,
            "x64": true,
            "actual_files_count": 1661,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8b1727f8d9104df5ced4bdfdc065dea85ff84baf",
            "commit_message": "[NFC] remove duplicated dash in release note for #62447\n",
            "commit_timestamp": 1684661176.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684689611.651695,
            "elapsed_time": 3978.406282186508,
            "x64": true,
            "actual_files_count": 1661,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "3b272039a88cc9952e5bad71b6b02a62b2c22098",
            "commit_message": "[ubsan][test] Unsupport function.cpp in Android non-x86 on sanitizer-x86_64-linux-android after D148573\n\nThe qemu environment cannot run an executable with a link-time shared\nobject built during the test?\n```\nInput was:\n<<<<<<\n            1: CANNOT LINK EXECUTABLE \"/data/local/tmp/Output/var/lib/buildbot/sanitizer-buildbot6/sanitizer-x86_64-linux-android/build/compiler_rt_build_android_aarch64/test/ubsan/Standalone-aarch64/TestCases/TypeCheck/Function/Output/function.cpp.tmp\": library \"/var/lib/buildbot/sanitizer-buildbot6/sanitizer-x86_64-linux-android/build/compiler_rt_build_android_aarch64/test/ubsan/Standalone-aarch64/TestCases/TypeCheck/Function/Output/function.cpp.tmp-so.so\" not found: needed by main executable\n```\n",
            "commit_timestamp": 1684684234.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684704257.900953,
            "elapsed_time": 3932.433120250702,
            "x64": true,
            "actual_files_count": 1661,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4aa1cadf3c67c61b394051630896f06f35b562ca",
            "commit_message": "[Driver] Disable -fsanitize=function for ppc64be after D148573\n\nELFObjectWriter.cpp may report\n```\nerror: Cannot represent a difference across sections\n```\non some ppc64be configurations, likely related to some interaction\nbetween the obsoleted ELFv1 and MC.\nUnfortunately I cannot reproduce this locally with --target=powerpc64-linux-gnu.\n",
            "commit_timestamp": 1684685680.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684718710.596186,
            "elapsed_time": 4178.199296951294,
            "x64": true,
            "actual_files_count": 1661,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f81ccb520927247b02708873567428d6988e2a07",
            "commit_message": "[ExecutionEngine] Re-enable JIT tests on PowerPC.\n\nThese were previously re-enabled in d771f54107c, but had to be disabled again\nin 2060a72b4d7 due to test failures.\n\nThis is a next step to landing https://reviews.llvm.org/D148192, which adds\na skeleton JITLink backend for PowerPC.\n\nThe fixes for those failures were (1) to explicitly specify IsLittleEndian =\ntrue for the MachO YAML testcases, (2) disable some example tests for examples\nthat aren't supported on PowerPC yet, and (3) fixing the endianness of a\nrelocation read/write (for ELF R_AARCH64_TSTBR14) in RuntimeDyldELF.\n",
            "commit_timestamp": 1684710726.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684733689.769472,
            "elapsed_time": 4721.939621925354,
            "x64": true,
            "actual_files_count": 1661,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f6fb639c76ce255e2f5b3e2c8550270243e7e7ab",
            "commit_message": "Fix memoery leak in MLIR use-def list ordering test\n",
            "commit_timestamp": 1684725090.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684747398.519781,
            "elapsed_time": 3987.354939222336,
            "x64": true,
            "actual_files_count": 1661,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5e92298f76875e1a89ad58bab042cd7abe9fc004",
            "commit_message": "[2/11][POC][Clang][RISCV] Define RVV tuple types\n\nFor the cover letter of this patch-set, please checkout D146872.\n\nDepends on D146872.\n\nThis is the 2nd patch of the patch-set. This patch originates from\nD97264. This patch further allows local variable declaration and\nfunction parameter passing by adjustment in clang lowering.\n\nTest cases are provided to demonstrate the LLVM IR generated.\n\nNote: This patch is currently only a proof-of-concept with only a\nsingle RVV tuple type declared here, the rest will be added when\nthe concept of this patch-set is accepted.\n\nAuthored-by: eop Chen <eop.chen@sifive.com>\nCo-Authored-by: Hsiangkai Wang <kai.wang@sifive.com>\n\nReviewed By: craig.topper\n\nDifferential Revision: https://reviews.llvm.org/D146873\n",
            "commit_timestamp": 1684741840.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684763171.460235,
            "elapsed_time": 5403.340304374695,
            "x64": true,
            "actual_files_count": 1661,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c7e06ce4b74789818155e0cc932f8dad4a899312",
            "commit_message": "[MLIR][LLVM] Allow inlining llvm.intr.assume.\n\nThis operation is not marked pure because it needs to survive DCE, but\nis otherwise safe to inline.\n\nReviewed By: Dinistro\n\nDifferential Revision: https://reviews.llvm.org/D151070\n",
            "commit_timestamp": 1684756831.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684776568.040729,
            "elapsed_time": 4424.899654865265,
            "x64": true,
            "actual_files_count": 1661,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "986cbd80d1dc838c61abff24b8d7ac28dcf4ac2a",
            "commit_message": "[clang][AST] TextNodeDumper should not evaluate the initializer of constexpr variable declaration when it has a dependent type\n\n`TextNodeDumper` enabed through `-ast-dump` flag should not evlauate the initializer when it visits a constexpr `VarDecl` node if it has a dependent type.\n\nI found a crashing case fixed by this change and added it as a test case.\n`template <typename T> constexpr T call_init(0);`\nLink: https://godbolt.org/z/3bG9Pjj5E\n\nThis is a fix for the regression caused by D146358\n\nDifferential Revision: https://reviews.llvm.org/D151033\n",
            "commit_timestamp": 1684771058.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684791348.144096,
            "elapsed_time": 4673.364530086517,
            "x64": true,
            "actual_files_count": 1661,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ca2666548085b3f4e61b1722272c4fa0eadd2d4e",
            "commit_message": "Revert \"[PostOrderIterator] Store end iterator (NFC)\"\n\nThis reverts commit 50f0ee8fbfc1f597ae7d2d49e0996c4338e5652f.\n\nThis breaks the bots.\n\nhttps://green.lab.llvm.org/green/view/LLDB/job/lldb-cmake/lastFailedBuild/consoleFull#-1141050806a1ca8a51-895e-46c6-af87-ce24fa4cd561\n",
            "commit_timestamp": 1684785683.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684805785.035755,
            "elapsed_time": 4676.531354188919,
            "x64": true,
            "actual_files_count": 1661,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c1fe1474d27f6fe7b8e5bfedcc9066e9a90ad85e",
            "commit_message": "[llvm-mca] Print InstructionInfoView using Instrument information.\n\nPrevious reports calculated the overall report using Instrument\ninformation but did not print out per-instruction data using\nInstrument information. This patch fixes that.\n\nDifferential Revision: https://reviews.llvm.org/D150459\n",
            "commit_timestamp": 1684798879.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684820189.376108,
            "elapsed_time": 4728.655710220337,
            "x64": true,
            "actual_files_count": 1661,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "61bc3ada1f9088a852126d5556f837f24683160b",
            "commit_message": "[test] precommit tests for D141188\n",
            "commit_timestamp": 1684812626.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684834595.853444,
            "elapsed_time": 4869.501857280731,
            "x64": true,
            "actual_files_count": 1661,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f5af7d2d987b0b16d7a641b7aa9086a75d533944",
            "commit_message": "Revert \"[clang][ExprConstant] fix __builtin_object_size for flexible array members\"\n\nThis reverts commit 57c5c1ab2a188b7962c9de5ac0f95e3c7441940a.\n\nCauses an assertion failure: https://reviews.llvm.org/D150892#4363080\n",
            "commit_timestamp": 1684828778.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684848898.505857,
            "elapsed_time": 4677.364478588104,
            "x64": true,
            "actual_files_count": 1665,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "68baaca61dfad1179a61d99cbf0fe23a6894849d",
            "commit_message": "[clang][dataflow] Use `Strict` accessors in comma operator and no-op cast.\n\nThis patch is part of the ongoing migration to strict handling of value\ncategories (see https://discourse.llvm.org/t/70086 for details).\n\nDepends On D150775\n\nReviewed By: gribozavr2\n\nDifferential Revision: https://reviews.llvm.org/D150776\n",
            "commit_timestamp": 1684843080.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684864505.797193,
            "elapsed_time": 5698.660797357559,
            "x64": true,
            "actual_files_count": 1665,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e826762a0826c11dc62696e46068c61c57a00aa9",
            "commit_message": "[libc] More efficiently send bytes via `send_n` and `recv_n`\n\nCurrently we have the `send_n` and `recv_n` routines to stream data,\nsuch as a string to print, to the other side. The first operation is to\nsend the size so the other side knows the number of bytes to recieve.\nHowever, this wasted 56 bytes that could've been sent. This meant that\nsmall values, like the arguments to a function to call on the host for\nexample, needed to perform an extra send. This patch sends the first 56\nbytes in the first packet and continues if necessary.\n\nDepends on D150992\n\nReviewed By: JonChesterfield\n\nDifferential Revision: https://reviews.llvm.org/D151041\n",
            "commit_timestamp": 1684857587.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684877458.360438,
            "elapsed_time": 4645.468456268311,
            "x64": true,
            "actual_files_count": 1665,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4edaacf04baa44b07394319781aacfb39311d498",
            "commit_message": "[MLIR] Update Bazel build to remove references to PybindUtils.cpp\n\nThis file has been removed in https://reviews.llvm.org/D151167.\n\nReviewed By: aartbik\n\nDifferential Revision: https://reviews.llvm.org/D151242\n",
            "commit_timestamp": 1684870822.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684892023.345853,
            "elapsed_time": 4659.00946521759,
            "x64": true,
            "actual_files_count": 1665,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f6c4808d95221a5838e14474d95c6fe85bb1488a",
            "commit_message": "[compiler-rt] Allow 64-bit sanitizer allocator to be used if using RISCV64 and Fuchsia\n\nThis way, Fuchsia can use the 64-bit allocator settings in D151157 without changing the default behavior for others.\n\nDifferential Revision: https://reviews.llvm.org/D151159\n",
            "commit_timestamp": 1684885109.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684906443.506249,
            "elapsed_time": 4633.001081466675,
            "x64": true,
            "actual_files_count": 1665,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "597dd1f91d9f3823e4184f1fe73d8125fa16c026",
            "commit_message": "[NFC] Fix the warning for dangling pointer for c0d6f85e3ae8bc\n\nThe bot notes a warning-converted-error for the dangling pointer. And\nthe patch fixes that.\n",
            "commit_timestamp": 1684899775.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684920716.360784,
            "elapsed_time": 4597.1598863601685,
            "x64": true,
            "actual_files_count": 1665,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "82082b7da075b9f3571ab5b26248578e6d98ee52",
            "commit_message": "[LVI] Don't compute range on not guaranteed not to be undef condition in SelectInst\n\nFixes:https://github.com/llvm/llvm-project/issues/62901\n\nReviewed By: nikic\n\nDifferential Revision: https://reviews.llvm.org/D151295\n",
            "commit_timestamp": 1684915333.0
        },
        {
            "tool_version": "232.0.20230509.135236-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684935438.486588,
            "elapsed_time": 4719.073246240616,
            "x64": true,
            "actual_files_count": 1665,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "44bb442fd5be3860e7819cb216621b5ea59970c3",
            "commit_message": "[lldb][DataFormatter] Add dereference support to libstdcpp std::shared_ptr formatter\n\nThis mimicks the implementation of the libstdcpp std::unique_ptr\nformatter.\n\nThis has been attempted several years ago in\n`0789722d85cf1f1fdbe2ffb2245ea0ba034a9f94` but was reverted in\n`e7dd3972094c2f2fb42dc9d4d5344e54a431e2ce`.\n\nThe difference to the original patch is that we now maintain\na `$$dereference$$` member and we only store weak pointers\nto the other children inside the synthetic frontend. This is\nwhat the libc++ formatters do to prevent the recursion mentioned\nin the revert commit.\n",
            "commit_timestamp": 1684929671.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684950882.910849,
            "elapsed_time": 5546.6628677845,
            "x64": true,
            "actual_files_count": 1665,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f74bb326949aec0cac8e54ff00fc081f746ff35d",
            "commit_message": "AMDGPU: Add some new tests for class undef/poison handling\n",
            "commit_timestamp": 1684943679.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684964186.130574,
            "elapsed_time": 4747.4885766506195,
            "x64": true,
            "actual_files_count": 1665,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6006d43e2d7dda56844f1c3867baa981cfefb8ea",
            "commit_message": "LLVM_FALLTHROUGH => [[fallthrough]]. NFC\n\nReviewed By: MaskRay\n\nDifferential Revision: https://reviews.llvm.org/D150996\n",
            "commit_timestamp": 1684957210.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684978460.44625,
            "elapsed_time": 4591.600812673569,
            "x64": true,
            "actual_files_count": 1665,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5f84641901398dd96d6097a57ad84670bdc7476f",
            "commit_message": "[Clang][RISCV] Update vaadd.c test case with new script. NFC\n",
            "commit_timestamp": 1684973019.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1684994956.076661,
            "elapsed_time": 6546.936139822006,
            "x64": true,
            "actual_files_count": 1665,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4374026d6da23dbb6b9c2e4fca65cdf198ee1e0f",
            "commit_message": "[MIPS] Check if register is non-null before calling isSuperOrSubRegisterEq (NFCI)\n\nD151036 adds an assertions that prohibits iterating over sub- and\nsuper-registers of a null register. This is already the case when\niterating over register units of a null register, and worked by\naccident for sub- and super-registers.\n\nReviewed By: MaskRay\n\nDifferential Revision: https://reviews.llvm.org/D151288\n",
            "commit_timestamp": 1684985621.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685007345.8991,
            "elapsed_time": 4728.322458267212,
            "x64": true,
            "actual_files_count": 1665,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0c23dc20bcfbe77b42fc3515c41432e4a2f5ce3f",
            "commit_message": "Reapply [SCEV] Replace IsAvailableOnEntry with block disposition\n\nThis exposed an issue in SCEVExpander/LCSSA, which has been fixed\nin D150681.\n\n-----\n\nAs far as I understand, the IsAvailableOnEntry() function basically\nimplements the same functionality as the properlyDominates() block\ndisposition. The primary difference (apart from a weaker\nimplementation) seems to be in this comment at the top:\n\n    // Checks if the SCEV S is available at BB.  S is considered available at BB\n    // if S can be materialized at BB without introducing a fault.\n\nHowever, I don't really understand why there would be such a\nrequirement. It's my understanding that SCEV explicitly does not\ncare about trapping udiv instructions itself, and it's the job of\nSCEVExpander's isSafeToExpand() to make sure these don't get\nexpanded if they may trap.\n\nDifferential Revision: https://reviews.llvm.org/D149344\n",
            "commit_timestamp": 1685001738.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685021665.65852,
            "elapsed_time": 4722.008229255676,
            "x64": true,
            "actual_files_count": 1665,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4c46c7cef3791a410cf226f7f005231be35dd8b9",
            "commit_message": "[sanitizer_common] Fix StripFunctionName() on Windows\n\nAlso implement StripFunctionName() on Windows to properly strip\ninterceptor prefixes.\n\nReported-by: https://lab.llvm.org/buildbot#builders/127/builds/48810\n",
            "commit_timestamp": 1685013547.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685035943.928274,
            "elapsed_time": 4611.545478582382,
            "x64": true,
            "actual_files_count": 1665,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6f026ff029853431ee535e6a361edd059da3ab27",
            "commit_message": "Discussion: Darwin Sanitizers Stable ABI\n\n# Darwin Sanitizers Stable ABI\n\nWe wish to make it possible to include the AddressSanitizer (ASan) runtime implementation in OSes and for this we need a stable ASan ABI. Based on previous discussions about this topic, our understanding is that freezing the present ABI would impose an excessive burden on other sanitizer developers and for unrelated platforms. Therefore, we propose adding a secondary stable ABI for our use and anyone else in the community seeking the same. We believe that we can define a stable ABI with minimal burden on the community, expecting only to keep existing tests running and implementing stubs when new features are added. We are okay with trading performance for stability with no impact for existing users of ASan while minimizing the maintenance burden for ASan maintainers. We wish to commit this functionality to the LLVM project to maintain it there. This new and stable ABI will abstract away the implementation details allowing new and novel approaches to ASan for developers, researchers and others.\n\n## Details\n\nRather than adding a lot of conditional code to the LLVM instrumentation phase, which would incur excessive complexity and maintenance cost of adding conditional code into all places that emit a runtime call, we propose a \u201cshim\u201d layer which will map the unstable ABI to the stable ABI:\n\n* A static library (.a library) shim that maps the existing ASan ABI to a generalized, smaller and stable ABI. The library would implement the __asan functions and call into the new ABI. For example:\n    * `void __asan_load1(uptr p) { __asan_abi_loadn(p, 1, true); }`\n    * `void __asan_load2(uptr p) { __asan_abi_loadn(p, 2, true); }`\n    * `void __asan_noabort_load16(uptr p) { __asan_abi_loadn(p, 16, false); }`\n    * `void __asan_poison_cxx_array_cookie(uptr p) { __asan_abi_pac(p); }`\n* This \u201cshim\u201d library would only be used by people who opt in: A compilation flag in the Clang driver will be used to gate the use of the stable ABI workflow.\n* Utilize the existing ability for the ASan instrumentation to prefer runtime calls instead of inlined direct shadow memory accesses.\n* Pursue (under the new driver flag) a better separation of abstraction and implementation with:\n    * LLVM instrumentation: Calling out for all poisoning, checking and unpoisoning.\n    * Runtime: Implementing the stable ABI and being responsible of implementation details of the shadow memory.\n\n## Maintenance\n\nOur aim is that the maintenance burden on the sanitizer developer community be negligible. Stable ABI tests will always pass for non-Darwin platforms. Changes to the existing ABI which would require a change to the shim have been infrequent as the ASan ABI is already relatively stable. Rarely, a change that impacts the contract between LLVM and the shim will occur. Among such foreseeable changes are: 1) changes to a function signature, 2) additions of new functions, or 3) deprecation of an existing function. Following are some examples of reasonable responses to those changes:\n\n* Example: An existing ABI function is changed to return the input parameter on success or NULL on failure. In this scenario, a reasonable change to the shim would be to modify the function signature appropriately and to simply guess at a common-sense implementation.\n    * `uptr __asan_load1(uptr p) { __asan_abi_loadn(p, 1, true); return p; }`\n* Example: An additional function is added for performance reasons. It has a very similar function signature to other similarly named functions and logically is an extension of that same pattern. In this case it would make sense to apply the same logic as the existing entry points:\n    * `void __asan_load128(uptr p) { __asan_abi_loadn(p, 128, true); }`\n* Example: An entry point is added to the existing ABI for which there is no obvious stable ABI implementation: In this case, doing nothing in a no-op stub would be acceptable, assuming existing features of ASan can still work without an actual implementation of this new function.\n    * `void __asan_prefetch(uptr p) { }`\n* Example: An entrypoint in the existing ABI is deprecated and/or deleted:\n    * (Delete the entrypoint from the shim.)\n\nWe\u2019re looking for buy-in for this level of support.\n\n(Note: Upon acceptance of the general concepts herein, we will add a controlling clang flag, cmake integration, contract for the stable ABI, and the appropriate test infrastructure.)\n\nReviewed By: eugenis, vitalybuka, MaskRay\n\nDifferential Revision: https://reviews.llvm.org/D143675\n",
            "commit_timestamp": 1685030261.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685051566.796912,
            "elapsed_time": 5641.269615411758,
            "x64": true,
            "actual_files_count": 1665,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "91689744477843a588f701fdc598ccff3cbbc8fb",
            "commit_message": "Reapply: [clang][diagnostics] Adding -Wpacked-non-pod to -Wall\n\nUsers will be informed when non-POD is not packed using -Wall. This\nis also consistent with GCC.\n\nFixes PR#60832.\n\nDifferential Revision: https://reviews.llvm.org/D151162\n",
            "commit_timestamp": 1685044920.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685064809.232041,
            "elapsed_time": 4616.838412761688,
            "x64": true,
            "actual_files_count": 1665,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e86defd588e79de60d19a101a43b0c8c86dff37b",
            "commit_message": "[mlir][tosa] Add type checking traits to the appropriate ops\n\nAdd the trait `SameOperandsAndResultElementType` and\n`SameOperandsElementType` to verify ops that are known\nto have the same input and output type rather than generate\nan invalid tosa IR with mixed data types like:\n\n  \"tosa.add\"(%0, %1) : (tensor<nxbf16>, tensor<nxf32>) -> tensor<nxf32>\n\nThus apply tosa.cast prior if needed.\n\nChange-Id: Ie866b84e371e3b571ec04f7abb090c216dd39c33\n\nReviewed By: jpienaar\n\nDifferential Revision: https://reviews.llvm.org/D150472\n",
            "commit_timestamp": 1685058690.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685081139.712436,
            "elapsed_time": 6316.496200084686,
            "x64": true,
            "actual_files_count": 1665,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "bb9a0c736b57f405c6fee598ce8043d0d35a5790",
            "commit_message": "Revert \"[MLIR] Add native Bytecode support for properties\"\n\nThis reverts commit ca5a12fd69d4acf70c08f797cbffd714dd548348\nand follow-up fixes:\n\ndf34c288c428eb4b867c8075def48b3d1727d60b\n07dc906883af660780cf6d0cc1044f7e74dab83e\nab80ad0095083fda062c23ac90df84c40b4332c8\n837d1ce0dc8eec5b17255291b3462e6296cb369b\n\nThe first commit was incomplete and broken, I'll prepare a new version\nlater, in the meantime pull this work out of tree.\n",
            "commit_timestamp": 1685073751.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685093595.283524,
            "elapsed_time": 4603.9289290905,
            "x64": true,
            "actual_files_count": 1665,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c80fe251d869d5304448cfa3bb855c653285de7f",
            "commit_message": "[ASAN] Support memory checks on vp.gather/scatter.\n\nThe patch supports vp.gather/scatter by allowing addresses being pointer vectors.\nAnd then we just need to check each active pointer element of those pointer vectors.\n\nReviewed By: reames\n\nDifferential Revision: https://reviews.llvm.org/D149245\n",
            "commit_timestamp": 1685086120.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685107729.334311,
            "elapsed_time": 4280.759508371353,
            "x64": true,
            "actual_files_count": 1665,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "00480189847e89e10f6333c28d65377906316c0f",
            "commit_message": "[mlir] Make sure mlir-opt is in the list of substituted tools\n\notherwise it gets picked up from $PATH, which is not always working\nproperly.\n",
            "commit_timestamp": 1685102434.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685136952.355767,
            "elapsed_time": 4715.218818187714,
            "x64": true,
            "actual_files_count": 1665,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "23da2106246edd445b5eae105cbefe0493f4fd1d",
            "commit_message": "[PseudoProbe] Do not force the calliste debug loc to inlined probes from __nodebug__ functions.\n\nFor pseudo probes we would like to keep their original dwarf discriminator (either a zero or null) until the first FS-discriminator pass. The inliner is a violation of that, given that it assigns inlinee instructions with no debug info with the that of the callsite. This is being disabled in this patch.\n\nReviewed By: wenlei\n\nDifferential Revision: https://reviews.llvm.org/D151568\n",
            "commit_timestamp": 1685131216.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685151399.6484,
            "elapsed_time": 4668.837718963623,
            "x64": true,
            "actual_files_count": 1665,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0508ac32cfcc1a9fc5a81d16de8d418dc5a0666b",
            "commit_message": "[Vectorize] Fix a warning\n\nThis patch fixes:\n\n  llvm/lib/Transforms/Vectorize/LoadStoreVectorizer.cpp:1429:23:\n  error: comparison of integers of different signs: 'int' and 'const\n  size_t' (aka 'const unsigned long') [-Werror,-Wsign-compare]\n",
            "commit_timestamp": 1685145754.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685165958.637722,
            "elapsed_time": 4927.626342058182,
            "x64": true,
            "actual_files_count": 1665,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "273303ad66a32e5e599bef5ee18c3a9f589e530d",
            "commit_message": "[Sema] Remove unused declaration startLambdaDefinition\n\nThe corresponding function definition was removed by:\n\n  commit 93d7002dc4644b0a6f15a998dff0d55c72012e87\n  Author: Corentin Jabot <corentinjabot@gmail.com>\n  Date:   Sun Feb 6 22:58:43 2022 +0100\n",
            "commit_timestamp": 1685157563.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685179891.819798,
            "elapsed_time": 4629.475900650024,
            "x64": true,
            "actual_files_count": 1665,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fe01c084249969518bcd69aa2fedffc9f017f43a",
            "commit_message": "[mlir][bazel] Port for 660f714e26999d266232a1fbb02712bb879bd34e, second\nattempt.\n",
            "commit_timestamp": 1685169465.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685195384.169872,
            "elapsed_time": 5512.546324968338,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "48985f58b41a74d012bc08ba3e2c14a3eb171314",
            "commit_message": "[libc++][format][test] Adds Windows support.\n\nThese tests pass on Windows without additional changes. This has been\ntested in D150593.\n",
            "commit_timestamp": 1685188646.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685209002.740974,
            "elapsed_time": 4748.9169590473175,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "1845d9de187b726dfe074218377c3d77ce43277a",
            "commit_message": "[CGP] Disable default copy ctor and copy assignment operator for InstructionRemover\n\nclass InstructionRemover manages resources such as dynamically allocated memory, it's generally a good practice to either implement a custom copy constructor or disable the default one.\n\nReviewed By: pengfei\n\nDifferential Revision: https://reviews.llvm.org/D151543\n",
            "commit_timestamp": 1685200833.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685224476.734805,
            "elapsed_time": 5881.673288106918,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "cf44847b4d1edb43de7ee917ddccf7fa397c63cb",
            "commit_message": "[mlir][gpu][sparse] adding cusparse sddmm support\n\nDifferential Revision: https://reviews.llvm.org/D151279\n",
            "commit_timestamp": 1685217701.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685233012.067647,
            "elapsed_time": 4522.00386929512,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "bdc2771911cb181fe0144800000b4c19d94ff52e",
            "commit_message": "[StaticAnalyzer] Remove unused declaration handleLVectorSplat\n\nThe corresponding function definition was removed by:\n\n  commit 55662b24a4755680e4fd34dc22a3dd555fdb1291\n  Author: Balazs Benics <balazs.benics@sigmatechnology.se>\n  Date:   Thu Jul 1 10:54:28 2021 +0200\n",
            "commit_timestamp": 1685224434.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685247362.556475,
            "elapsed_time": 4896.871234416962,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "bdc2771911cb181fe0144800000b4c19d94ff52e",
            "commit_message": "[StaticAnalyzer] Remove unused declaration handleLVectorSplat\n\nThe corresponding function definition was removed by:\n\n  commit 55662b24a4755680e4fd34dc22a3dd555fdb1291\n  Author: Balazs Benics <balazs.benics@sigmatechnology.se>\n  Date:   Thu Jul 1 10:54:28 2021 +0200\n",
            "commit_timestamp": 1685224434.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685261705.25882,
            "elapsed_time": 4546.777031421661,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "65f40cb455f8eaf83c163793d19640b56393c1e5",
            "commit_message": "[ModuleInliner] Remove an inapplicable comment\n\nThe module inliner has its own logic in deciding the order in which\ncall sites are inlined, so the comment is inapplicable.\n",
            "commit_timestamp": 1685251597.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685276390.855926,
            "elapsed_time": 5417.11806845665,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f8536fb11e3d71d009c9002b5aa2ef32983ac7dc",
            "commit_message": "[clang][HeaderSearch] Fix implicit module when using header maps\n\nPreviously, if a header was found via in a header map, and not just remapped.\nwe wouldn't also find the module it maps to when using implicit modules (for\nmodule maps that were explicitly loaded).\n\nThis diff just updates these code paths to also locate the owning module via\n`findUsableModuleForHeader`.\n\nReviewed By: benlangmuir\n\nDifferential Revision: https://reviews.llvm.org/D103930\n",
            "commit_timestamp": 1685270991.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685290656.244879,
            "elapsed_time": 4763.871718883514,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8a4e3675d88ecd0413d89dea1e3578a4696b05da",
            "commit_message": "[Hexagon] Explicitly make vector subregs have unknown size and offset\n\nVector length depends on the HVX mode, so make the size and offset unknown\ninstead using values for some specific mode.\n",
            "commit_timestamp": 1685287963.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685305037.627622,
            "elapsed_time": 4605.88134765625,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fb250b8295b9f65590017c5b13d6de0b4f4617c1",
            "commit_message": "[clang][c++20][NFC] `ComparisonCategoryType` - updated comment, removed `std:*_equality`\n\n`weak_equality` and `strong_equality` are removed from the standard:\n- https://wg21.link/P1959R0\n- https://eel.is/c++draft/cmp.categories.pre\n\nReviewed By: rsmith\n\nDifferential Revision: https://reviews.llvm.org/D151627\n",
            "commit_timestamp": 1685301916.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685319401.256471,
            "elapsed_time": 4595.53854227066,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "53be2e0f59730671eac24c9e9ce615d20250d917",
            "commit_message": "[MLIR] NFC. JitRunner - use range-based for\n\nAddress clang-tidy warning in JitRunner.cpp. Use range-based for.\n",
            "commit_timestamp": 1685305490.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685333950.358057,
            "elapsed_time": 5953.094482898712,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b6a5aeadb5588dedc09eacc3b98b0278d6d53529",
            "commit_message": "[NFC][CLANG] Fix issue with dereference null return value in EvaluateBuiltinClassifyType()\n\nThis patch uses cast instead of dyn_cast which will assert if the type doesn't match.\n\nReviewed By: erichkeane\n\nDifferential Revision: https://reviews.llvm.org/D151469\n",
            "commit_timestamp": 1685329749.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685348190.633635,
            "elapsed_time": 4590.754618644714,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e20931b2ccd10de2fd25d9a6fbe9c166e7430f23",
            "commit_message": "[clang] Restrict Inline Builtin to non-static, non-odr linkage\n\nInline builtins have a very special behavior compared to other\nfunctions, it's better if we keep them restricted to a minimal set of\nfunctions.\n\nAdd a linkage check which prevents considering ODR definitions as inline\nbuiltins.\n\nFix #62958\n\nDifferential Revision: https://reviews.llvm.org/D148723\n",
            "commit_timestamp": 1685347338.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685362571.909074,
            "elapsed_time": 4745.620724439621,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "061e368fe213bd0701261a3e59f796c7439484fc",
            "commit_message": "[SelectionDAG] Implement soft FP legalisation for bf16 FP_EXTEND and BF16_TO_FP\n\nAs discussed in D151436, it's safe to do this as a simple shift (as is\ndone in LegalizeDAG.cpp) rather than needing a libcall. The added test\ncases for RISC-V previously just triggered an assertion.\n\nCodegen for bfloat_to_double will be slightly improved by D151434.\n\nDifferential Revision: https://reviews.llvm.org/D151563\n",
            "commit_timestamp": 1685352748.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685376737.502253,
            "elapsed_time": 3328.4386444091797,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a3a8cbffcf00bdbf19a15a070313b60c0a9ce342",
            "commit_message": "[AMDGPU][AsmParser][NFC] Refine parsing of NamedOperandU32 operands.\n\nEliminates the need for the custom code in parseCustomOperand().\n\nPart of <https://github.com/llvm/llvm-project/issues/62629>.\n\nReviewed By: dp\n\nDifferential Revision: https://reviews.llvm.org/D150980\n",
            "commit_timestamp": 1685376104.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685391438.488309,
            "elapsed_time": 4556.994585752487,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "40af06ccc7bf9989b8deb410ed78a4795c22aa73",
            "commit_message": "[clang-tidy] Update UnusedReturnValueCheck types\n\nUpdate the types for UnusedReturnValueCheck after D151383.\n\n1. Add std::errc, std:error_condition\n2. Remove `absl::Status` - it's marked as `[[nodiscard]]` anyway so it's redundant (and might create double warnings) to check it.\n\nReviewed By: PiotrZSL\n\nDifferential Revision: https://reviews.llvm.org/D151650\n",
            "commit_timestamp": 1685390552.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685406021.953417,
            "elapsed_time": 5735.7667191028595,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b936816fb305cc16d2d1cd6d424c08c39a681a32",
            "commit_message": "MLIR/Cuda: Add the appropriate \"HINTS\" on CMake find_library and mark these REQUIRED\n\nThe cmake logic to find cuda paths exposes some paths to search for the cuda\nlibrary, we need to propagate this through the call for find_library.\nThis was already done for cuSparse but not for cuda.\n\nDifferential Revision: https://reviews.llvm.org/D151645\n",
            "commit_timestamp": 1685395944.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685420073.265778,
            "elapsed_time": 4351.925969362259,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8f386ff69ab8e012c1716ae05e70fd5288435835",
            "commit_message": "[ms-inline asm] Add error check for `getAsInteger`\n\n.Imm can get lexed as a real, but a real doesn't equal to .Imm, e.g.,\n2.5 or .123e+8. We should report error for it rather than silently ignore.\n\nReviewed By: skan\n\nDifferential Revision: https://reviews.llvm.org/D151652\n",
            "commit_timestamp": 1685416857.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685434563.722161,
            "elapsed_time": 4685.979875087738,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c7592c7714c2796715e6460fc5fd19e5a930c427",
            "commit_message": "[mlir][scf] NFC - Add debug information to scf pipelining\n",
            "commit_timestamp": 1685433771.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685449104.706987,
            "elapsed_time": 4691.464245080948,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "48339d0fbbdb2ba4610173ad1e792e9c2272c887",
            "commit_message": "[CodeGen] Add pre-commit tests for D148558\n\nThis patch adds four new tests for upcoming functionality in LLVM:\n* complex-deinterleaving-add-mull-fixed-contract.ll\n* complex-deinterleaving-add-mull-scalable-contract.ll\n* complex-deinterleaving-add-mull-fixed-fast.ll\n* complex-deinterleaving-add-mull-scalable-fast.ll.\n\nThese tests were generated from the IR of vectorizable loops, which were\ncompiled from C++ code using different optimization flags in Clang. Each pair\nof tests corresponds to Neon and SVE architectures, respectively, and\neach pair contains tests compiled with -Ofast and -O3 -ffp-contract=fast\n-ffinite-math-only optimization flags.\nThe tests were stripped of nnan and ninf flags as they have no impact on the\noutput.\nThe primary objective of these tests is to show the various sequences of\ncomplex computations that may be encountered and to demonstrate the ability\nof ComplexDeinterleaving to support any ordering.\n\nDepends on D147451\n\nDifferential Revision: https://reviews.llvm.org/D148550\n",
            "commit_timestamp": 1685447399.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685463603.346701,
            "elapsed_time": 6479.250331163406,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7cdb875d4dcd5bb65708521dc121e3c969c561b9",
            "commit_message": "[mlir] silence msvc warning\n",
            "commit_timestamp": 1685462359.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685477907.417637,
            "elapsed_time": 4978.376668691635,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d81ce04587c006b6731198956c522c93d0df1050",
            "commit_message": "[Driver] Report error for unsupported -mlarge-endian/-mlittle-endian\n",
            "commit_timestamp": 1685475921.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685492346.018709,
            "elapsed_time": 4682.1873297691345,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "aaa33b6a98de2be7cdc827b13e60c103206d6461",
            "commit_message": "Fix assert \"DeclRefExpr for Decl not entered in LocalDeclMap?\"\n\nCurrently compiler assert when passing variable \"memspace\" in\nomp_init_allocator.\n\nomp_allocator_handle_t alloc=omp_init_allocator(memspace,1,traits)\n\nThe problem is memspace is not mapping to the target region.  During\nthe call to emitAllocatorInit, calls to EmitVarDecl for \"alloc\", then\nemit initialization of \"alloc\" that cause to assert.\n\nIf I understant correct, it is not necessary to emit variable\ninitialization, since \"allocator\" is private to target region.\n\nTo fix this call CGF.EmitAutoVarAlloca(allocator) instead\nCGF.EmitVarDecl(allocator).\n\nDifferential Revision: https://reviews.llvm.org/D151743\n",
            "commit_timestamp": 1685490006.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685506512.163422,
            "elapsed_time": 4526.102992534637,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0442d08fdb173d89b0779d32eb929957a344f5e6",
            "commit_message": "[clang][Sema] Improve diagnostics for auto return type\n\nCurrently when clang fails to deduce auto return type of a function,\nit does not emit any notes about why it fails. This causes difficulty\nfor users to fix such errors.\n\nActually, clang already generates the information for emitting notes\nabout the failed deduction. There is a TODO for actually emitting\nthem.\n\nThis patch tries to implement the TODO. Basically it passes the\nfailed template specialization candidate set from the point of\nspecialization failure back to the point where the deduction starts.\n\nIt is not comprehensive but would be a start for further improvement.\n\nReviewed by: Richard Smith, Matheus Izvekov\n\nDifferential Revision: https://reviews.llvm.org/D150212\n\nFixes: SWDEV-354278\n",
            "commit_timestamp": 1685504159.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685520866.22536,
            "elapsed_time": 4699.46359205246,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "bb6c036ef378de321d5b7fc0ada317f91c88570d",
            "commit_message": "[clang][Diagnostics][NFC] Use getFileID() directly\n\nInstead of calling getDecomposedLoc() and then only using the FileID.\n",
            "commit_timestamp": 1685519836.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685535403.401662,
            "elapsed_time": 4709.391610622406,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "981766a3d6cf043b0fa7efc69d227287f7a909aa",
            "commit_message": "[mlir][bazel] Disable Transform/test-repro-dump.mlir test in bazel build.\n",
            "commit_timestamp": 1685533848.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685549847.773432,
            "elapsed_time": 4712.781037330627,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a88f496f8f3baa6c3b15532e37e3bdbb1c4ea0d0",
            "commit_message": "[Sema] Remove unused function getFloat128Identifier\n\nThe last use was removed by:\n\n  commit bb1ea2d6139a72340b426e114510c46d938645a6\n  Author: Nemanja Ivanovic <nemanja.i.ibm@gmail.com>\n  Date:   Mon May 9 08:52:33 2016 +0000\n\nDifferential Revision: https://reviews.llvm.org/D151608\n",
            "commit_timestamp": 1685548775.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685564389.178147,
            "elapsed_time": 5586.922463417053,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5a0d53ce41486225fd8be6b1d13f338d19c29f62",
            "commit_message": "[Tooling] Remove unused function setRestoreWorkingDir\n\nThe last use was removed by:\n\n  commit 146ec74a8382dc820809d0a2bf4b918d0b5e6603\n  Author: Jan Svoboda <jan_svoboda@apple.com>\n  Date:   Fri Sep 10 10:24:16 2021 +0200\n\nOnce I remove the function, RestoreCWD is always true, so this patch\nremoves the variable and propagates the constant.\n\nDifferential Revision: https://reviews.llvm.org/D151786\n",
            "commit_timestamp": 1685562217.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685592772.674521,
            "elapsed_time": 3396.984817504883,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ff471dcf7669b1ad7903a44d0773bef4eb175eb9",
            "commit_message": "[SCEV] Fix verification of SCEV multiples.\n",
            "commit_timestamp": 1685592022.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685607458.579249,
            "elapsed_time": 4954.338002443314,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4f0436dd1532d7534d77e6fc211a7a50bbdd0c49",
            "commit_message": "[clang][analyzer] Merge apiModeling.StdCLibraryFunctions and StdCLibraryFunctionArgs checkers into one.\n\nMain reason for this change is that these checkers were implemented in the same class\nbut had different dependency ordering. (NonNullParamChecker should run before StdCLibraryFunctionArgs\nto get more special warning about null arguments, but the apiModeling.StdCLibraryFunctions was a modeling\nchecker that should run before other non-modeling checkers. The modeling checker changes state in a way\nthat makes it impossible to detect a null argument by NonNullParamChecker.)\nTo make it more simple, the modeling part is removed as separate checker and can be only used if\nchecker StdCLibraryFunctions is turned on, that produces the warnings too. Modeling the functions\nwithout bug detection (for invalid argument) is not possible. The modeling of standard functions\ndoes not happen by default from this change on.\n\nReviewed By: Szelethus\n\nDifferential Revision: https://reviews.llvm.org/D151225\n",
            "commit_timestamp": 1685606075.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685621858.931423,
            "elapsed_time": 4910.697793722153,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a26bd95325f120d9737a0b03c80eabddb56f46db",
            "commit_message": "[LinkerWrapper] Fix static library symbol resolution\n\nThe linker wrapper performs its own very basic symbol resolution for the\npurpose of supporting standard static library semantics. We do this here\nbecause the Nvidia `nvlink` wrapper does not support static linking and\nwe have some offloading specific extensions.\n\nCurrently, we always place symbols in the \"table\" even if they aren't\nextracted. This caused the logic to fail when many files were used that\nreferenced the same undefined variable. This patch changes the pass to\nonly add the symbols to the global \"table\" if the file is actually\nextracted.\n\nReviewed By: tra\n\nDifferential Revision: https://reviews.llvm.org/D151839\n",
            "commit_timestamp": 1685620311.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685650679.335121,
            "elapsed_time": 4823.740854740143,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c20a9bb001855da5d14721ce2894e3be77a999fe",
            "commit_message": "Allow configuring InlinerThreshold in C bindings for the new pass manager\n\nC bindings for the new pass manager seem to allow to set any option from LLVMPassBuilderOptions, except InlinerThreshold. Allow to configure it as well.\n\nReviewed By: aeubanks\n\nDifferential Revision: https://reviews.llvm.org/D151832\n",
            "commit_timestamp": 1685649635.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685722484.998794,
            "elapsed_time": 4693.178010225296,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5c2072e74b42d55e8bf7a9c8fee8800bad591f12",
            "commit_message": "[clang-tidy] Fix docs.\n",
            "commit_timestamp": 1685719915.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685737190.8817,
            "elapsed_time": 4808.725058555603,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "18ccca4da8dec5fbfd1072a1c1544ce25f528627",
            "commit_message": "[UBSan] Consider zero input to __builtin_clz/ctz to be undefined independent of the target.\n\nPreviously we checked isCLZForZeroUndef and only added UBSan checks\nif it returned true.\n\nThe builtin should be considered undefined for 0 regardless of\nthe target so that code using it is portable. The isCLZForZeroUndef\nwas only intended to disable optimizations in the middle end and\nbackend.\n\nSee https://discourse.llvm.org/t/should-ubsan-detect-0-input-to-builtin-clz-ctz-regardless-of-target/71060\n\nReviewed By: nikic\n\nDifferential Revision: https://reviews.llvm.org/D152023\n",
            "commit_timestamp": 1685736065.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685751496.408202,
            "elapsed_time": 4718.239347219467,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0a168131b4f420d9f561926c643c143c84c97535",
            "commit_message": "[scudo] Add 'inline' to static secondary.h function\n\nThis patches an error flaged by Fuchsia builds e.g.\nhttps://ci.chromium.org/ui/p/turquoise/builders/global.try/core.x64-asan/b8779376650819379137/overview)\n\n```\nbuild failed:\n\n[87176/332302](525) CXX user.libc_x64-asan-ubsan/obj/zircon/system/ulib/c/scudo/gwp-asan-info.gwp_asan_info.cc.o\nFAILED: user.libc_x64-asan-ubsan/obj/zircon/system/ulib/c/scudo/gwp-asan-info.gwp_asan_info.cc.o\n../../prebuilt/third_party/python3/linux-x64/bin/python3.8 -S ../../build/rbe/cxx_remote_wrapper.py --exec_strategy=remote_local_fallback --  ../../prebuilt/third_party/clang/linux-x64/bin/clang++ -MD -MF user.libc_x64-asan-ubsan/obj/zircon/system/ulib/c/scudo/gwp-asan-info.gwp_asan_info.cc.o.d -o user.libc_x64-asan-ubsan/obj/zircon/system/ulib/c/scudo/gwp-asan-info.gwp_asan_info.cc.o -D_LIBCPP...\nIn file included from ../../zircon/system/ulib/c/scudo/gwp_asan_info.cc:7:\nIn file included from ../../third_party/scudo/src/allocator_config.h:12:\nIn file included from ../../third_party/scudo/src/combined.h:22:\n../../third_party/scudo/src/secondary.h:67:13: error: 'static' function 'unmap' declared in header file should be declared 'static inline' [-Werror,-Wunneeded-internal-declaration]\nstatic void unmap(LargeBlock::Header *H) {\n            ^\n1 error generated.\n```\n\nDifferential Revision: https://reviews.llvm.org/D152038\n",
            "commit_timestamp": 1685749647.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685765768.179946,
            "elapsed_time": 4537.205727338791,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "84ee08c6a89a96c29e7be7e62f91f4bcdcde48ae",
            "commit_message": "[RISCV] Avoid illegal DAG combination for strict-fp nodes.\n\nThose combines may change the exception behavior and rounding behavior.\n\nReviewed By: craig.topper\n\nDifferential Revision: https://reviews.llvm.org/D151992\n",
            "commit_timestamp": 1685759370.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685794307.065448,
            "elapsed_time": 3422.137099981308,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0beffb854209a41f31beb18f9631258349a99299",
            "commit_message": "[CMake] Ensure `CLANG_RESOURCE_DIR` is respected.\n\nre-commit of 39aa0f5c434b463520ac39a8dbe933ee8c4c5ea7 with missing file:\ncmake/Modules/GetClangResourceDir.cmake.\n",
            "commit_timestamp": 1685791295.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685809033.393142,
            "elapsed_time": 5792.0157170295715,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "684f3c968d6bbf124014128b9f5e4f03a50f28c5",
            "commit_message": "[Clang] Fix status of P0960\n\nP0960R3 and P1975R0 were marked not implemented because\nof #61145,\n\nThis issue has been fixed and backported to LLVM 16,\nthe status page should reflect that.\n\nReviewed By: #clang-language-wg, ayzhao, erichkeane\n\nDifferential Revision: https://reviews.llvm.org/D150122\n",
            "commit_timestamp": 1685804622.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685823303.569216,
            "elapsed_time": 4907.474210262299,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4b9764959dc4b8783e18747c1742ab164e4bc4ee",
            "commit_message": "[clang-format] Fix overlapping replacements before PPDirectives\n\nIf the first token of an annotated line is finalized, reuse its\nNewlinesBefore value to avoid potential overlapping whitespace\nreplacements before preprocessor branching directives.\n\nFixes #62892.\n\nDifferential Revision: https://reviews.llvm.org/D151954\n",
            "commit_timestamp": 1685820783.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685837670.181027,
            "elapsed_time": 4673.910643577576,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ea8f4b98419750c8cc7c60ea43b570adf47b3f78",
            "commit_message": "[libc][CMake] Place archives in build/lib/<target-triple>\n\nThis patch moves the location of libllvmlibc.a within the build tree to\nwithin ./lib/<target triple>. This more closely matches the behavior of\nother runtime builds and allows for clang in the same build tree to\nautomatically be able to link against llvmlibc since this path is by\ndefault included by the driver.\n\nAlso removes the LIBC_BINARY_DIR CMake flag since it isn't used anywhere\nin the tree (based on a quick grep).\n\nReviewed By: phosek\n\nDifferential Revision: https://reviews.llvm.org/D151624\n",
            "commit_timestamp": 1685832003.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685852112.979246,
            "elapsed_time": 4631.908277273178,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ff75a2be34fd76350216c36b7ea4c3f338df6215",
            "commit_message": "[AVR] Fix incorrect operands of pseudo instruction 'ROLBRd'\n\nFixes https://github.com/llvm/llvm-project/issues/63098\n\nReviewed by: benshi001\n\nDifferential Revision: https://reviews.llvm.org/D152063\n",
            "commit_timestamp": 1685848137.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685866573.351386,
            "elapsed_time": 4750.886167049408,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fbdcd54442ef9435d753ae974d33992f99d85ad8",
            "commit_message": "[GlobalISel] Fix DIVREM combine from inserting a divrem before its operands' defs.\n\nIn some rare corner cases where in between the div/rem pair there's a def of\nthe second instruction's source (but a different vreg due to the combine's\neqivalence checks), it will place the DIVREM at the first instruction's point,\ncausing a use-before-def. There wasn't an obvious fix that stood out to me\nwithout doing more involved analysis than a combine should really be doing.\n\nFixes issue #60516\n\nI'm open to new suggestions on how to approach this, as I'm not too happy\nat bailing out here. It's not the first time we run into issues with value liveness\nthat the DAG world isn't affected by.\n\nDifferential Revision: https://reviews.llvm.org/D144336\n",
            "commit_timestamp": 1685863478.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685881131.689841,
            "elapsed_time": 6182.352350473404,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "3a458256ee22a0e7c31529de42fa6caa263d88fe",
            "commit_message": "[gn build] Port 66e5678fece3\n",
            "commit_timestamp": 1685878605.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685895601.863855,
            "elapsed_time": 5859.253249406815,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0702d4e04df906cf011950b2aa8ba08bc63d463e",
            "commit_message": "[GlobalIsel][X86] Move G_ICMP legalization before legacy handling and merge 32-bit/64-bit handling\n\nI've kept the legalForCartesianProduct call, but this requires us to maintain 32-bit/64-bit integer lists - we might want to just use legalIf and perform the type pair set matching manually.\n",
            "commit_timestamp": 1685894517.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685909747.047491,
            "elapsed_time": 3766.5247972011566,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "9d531c2dcfa791301f39848a13f199f22d1471dd",
            "commit_message": "[bazel] Port 36f351098cd5\n",
            "commit_timestamp": 1685907592.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685924266.698108,
            "elapsed_time": 4679.373460054398,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "1f8a33c19c79fd4649a07eb70ea394c60a8ce316",
            "commit_message": "[mlir][bytecodegen] Add list helper methods.\n\nPreviously the SignedVarInt was incorrectly defined. Follow up work\nneeded for improving Array printing/parsing, but correcting the\ndefinitions for now.\n",
            "commit_timestamp": 1685919157.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685938770.180399,
            "elapsed_time": 5932.58207988739,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "29663e2b8c4edcd850a4245b1f9509f974220906",
            "commit_message": "[clang][CodeGen] Account for VTT address space\n\nCorrectly account for the fact that certain targets do not use the generic address space for the implicit VTT argument. This entails adjusting `ItaniumCXXABI::buildStructorSignature`, `ItaniumCXXABI::addImplicitStructorParams` and `ItaniumCXXABI::getImplicitConstructorArgs` to use the target's global variable address space. The associated test is temporarily marked `XFAIL` as additional fixes are needed.\n\nReviewed By: rjmccall\n\nDifferential Revision: https://reviews.llvm.org/D150746\n",
            "commit_timestamp": 1685930785.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685953217.018542,
            "elapsed_time": 6228.792032718658,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "225cf64e03b4e394c32e95fe1d6414e6e16be094",
            "commit_message": "fix failures caused by https://reviews.llvm.org/D148490\n\nbuildbot: https://lab.llvm.org/buildbot/#/builders/214/builds/7823\n",
            "commit_timestamp": 1685952026.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1685967673.403861,
            "elapsed_time": 6146.401790380478,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fc4a8bf7da7d3837d371fda24d3f2c0f9ef54a5b",
            "commit_message": "[clang-tidy] Move the misc system header dir to Inputs subdir, NFC.\n\nFollows the existing patterns, and makes life easier for bazel build\nsystem.\n",
            "commit_timestamp": 1685966221.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1685981866.842973,
            "elapsed_time": 4659.663987636566,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4cb5e436ae713579cfee00cfc8e516cf965b91e9",
            "commit_message": "[clangd] Show size, offset and padding for bit fields on hover\n\nExamle:\n```\nstruct test {\n\tchar a;\n\tchar b : 3;\n\tchar c : 5;\n\tint d;\n\tint e : 27;\n};\n```\n\n{F27617774}\n{F27617776}\n{F27617777}\n{F27617780}\n\nReviewed By: sammccall\n\nDifferential Revision: https://reviews.llvm.org/D151128\n",
            "commit_timestamp": 1685980354.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1685996459.270467,
            "elapsed_time": 6097.16751241684,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "db98ac082744880a6e352b2d4a97d8896d9a7694",
            "commit_message": "[Demangle] convert microsoftDemangle to take a std::string_view\n\nThis should be last of the \"bottom-up conversions\" of various demanglers\nto accept std::string_view.  After this, D149104 may be revisited.\n\nReviewed By: MaskRay\n\nDifferential Revision: https://reviews.llvm.org/D152176\n",
            "commit_timestamp": 1685995220.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686010698.809303,
            "elapsed_time": 4574.208325386047,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d3777f20c59373a0075d0d9de3bfdc1429888879",
            "commit_message": "test/AMDGPU: REQUIRES asserts (D148184)\n",
            "commit_timestamp": 1686009346.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686024905.991892,
            "elapsed_time": 4643.764991283417,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "116670d192c619e2233e092e210c920d004dbe33",
            "commit_message": "[InstCombine] add overflow checking on Add ~X + C --> (C-1) - X\nDifferential Revision: https://reviews.llvm.org/D152088\n",
            "commit_timestamp": 1686021885.0
        },
        {
            "tool_version": "232.0.20230517.90859-eap02",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686039343.967205,
            "elapsed_time": 5021.1848974227905,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "10e7899818803029d2f91a20c67f5a1d75781b8a",
            "commit_message": "[FPEnv] Get rid of extra moves in fpenv calls\n\nIf intrinsic `get_fpenv` or `set_fpenv` is lowered to the form where FP\nenvironment is represented as a region in memory, extra moves can\nappear. For example the code:\n\n  define void @func_01(ptr %ptr) {\n    %env = call i256 @llvm.get.fpenv.i256()\n    store i256 %env, ptr %ptr\n    ret void\n  }\n\nproduces DAG:\n\n  ch = get_fpenv_mem ch, memory_region\n  val: i256, ch = load ch, memory_region\n  ch = store ch, ptr, val\n\nIn this case the extra moves can be avoided if `get_fpenv_mem` got\npointer to the memory where the FP environment should be finally placed.\n\nThis change implement such optimization for this use case.\n\nDifferential Revision: https://reviews.llvm.org/D150437\n",
            "commit_timestamp": 1686038092.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686054047.199489,
            "elapsed_time": 6666.311804771423,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6d5a653dda628250b373ec89e0e11cdd27603c24",
            "commit_message": "[AMDGPU] New PAL metadata updates to ps_extra_lds_size and float_mode\n\nNew metadata format contains full calculation of field contents for\nps_extra_lds_size (vs old format where the value in RSRC register is used by PAL\nto calculate the value required).\n\nAlso stop updating float_mode and rely on front end settings for this field.\n\nDifferential Revision: https://reviews.llvm.org/D152247\n",
            "commit_timestamp": 1686050301.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686068345.930998,
            "elapsed_time": 5964.756800889969,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "540294845babbb2be909ea456323d7bc8a1763df",
            "commit_message": "[Clang] Reject increment of bool value in unevaluated contexts after C++17\n\nClang now incorrectly allowed increment of bool in unevaluated contexts, we set `diagnostic::ext_increment_bool` to be SFINAEFailure to fix this issue.\n\n```\ntemplate<class T> auto f(T t) -> decltype(++t);\nauto f(...) -> void;\nvoid g() {\n  f(true);  // Clang wrongly makes this a hard error\n}\n```\n\n```\ntemplate <class T>\nconcept can_increment = requires(T t) { ++t; };\n\ntemplate <class T> void f() {\n  static_assert(requires(T t) { ++t; }); // Incorrectly allowed\n}\n\nint main() {\n  f<bool>();\n\n  static_assert(!can_increment<bool>); // Incorrectly fails\n\n  bool b = false;\n  ++b; // Correctly rejected\n}\n```\nFix issue: https://github.com/llvm/llvm-project/issues/47517\n\nReviewed By: erichkeane\n\nDifferential Revision: https://reviews.llvm.org/D152259\n",
            "commit_timestamp": 1686067117.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686082603.071847,
            "elapsed_time": 5444.456151008606,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7cd1d4231a7c83e719b83c6abbe2d479baa03808",
            "commit_message": "[lldb] Remove __FUNCTION__ from log messages in lldbHost (NFC)\n\nLLDB's logging infrastructure supports prepending log messages with the\nname of the file and function that generates the log (see help log\nenable). Therefore it's unnecessary to include the current __FUNCTION__\nin the log message itself. This patch removes __FUNCTION__ from log\nmessages in the Host library.\n\nDifferential revision: https://reviews.llvm.org/D151762\n",
            "commit_timestamp": 1686081763.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686097069.92603,
            "elapsed_time": 5481.5487496852875,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7056ad7e97347f6af65c1e4ccaffcc8dfd5ba1d2",
            "commit_message": "[gn build] Port 1117b9a284aa\n",
            "commit_timestamp": 1686095994.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686111391.655221,
            "elapsed_time": 5076.951601982117,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c6a69446e152975c66594061ee542ca8e4e98b6f",
            "commit_message": "[M68k,MSP430,VE,Xtensa] Migrate to new encodeInstruction that uses SmallVectorImpl<char>. NFC\n",
            "commit_timestamp": 1686110572.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686125906.788304,
            "elapsed_time": 5676.438613176346,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d19a3834dce5f9e8c84835ea14e8b434e8aa5fa7",
            "commit_message": "[NFC][RFC][TableGen] Split GlobalISelEmitter.cpp\n\nThis patch splits the GlobalISelEmitter.cpp file, which imports DAG ISel patterns for GISel, into separate \"GISelMatchTable.h/cpp\" files.\n\nThe main motive is readability & maintainability. GlobalISelEmitter.cpp was about 6400 lines of mixed code, some bits implementing the match table codegen, some others dedicated to importing DAG patterns.\n\nNow it's down to  2700 + a 2150 header + 2000 impl.\nIt's a tiny bit more lines overall but that's to be expected - moving\ninline definitions to out-of-line, adding comments in the .cpp, etc. all of that takes additional space, but I think the tradeoff is worth it.\n\nI did as little unrelated code changes as possible, I would say the biggest change is the introduction of the `gi` namespace used to prevent name conflicts/ODR violations with type common names such as `Matcher`.\nIt was previously not an issue because all of the code was in an anonymous namespace.\n\nThis moves all of the \"match table\" code out of the file, so predicates,\nrules, and actions are all separated now. I believe this helps separating concerns, now `GlobalISelEmitter.cpp` is more focused on importing DAG patterns into GI, instead of also containing the whole match table internals as well.\n\nNote: the new files have a \"GISel\" prefix to make them distinct from the other \"GI\" files in the same folder, which are for the combiner.\n\nReviewed By: aemerson\n\nDifferential Revision: https://reviews.llvm.org/D151432\n",
            "commit_timestamp": 1686123297.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686140212.40274,
            "elapsed_time": 5428.234884023666,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "cda46cc4f921f6b288c57a68b901ec2f57134606",
            "commit_message": "[Clang][OpenMP][IRBuilder] Move registerTargetGlobalVariable & getAddrOfDeclareTargetVar into the OMPIRBuilder\n\nThis change tries to move registerTargetglobalVariable and\ngetAddrOfDeclareTargetVar out of Clang's CGOpenMPRuntime\nand into the OMPIRBuilder for shared use with MLIR's OpenMPDialect\nand Flang (or other languages that may want to utilise it).\n\nThis primarily does this by trying to hoist the Clang specific\ntypes into arguments or callback functions in the form of\nlambdas, replacing it with LLVM equivelants and\nutilising shared OMPIRBuilder enumerators for\nthe clauses, rather than Clang's own variation.\n\nReviewers: jsjodin, jdoerfert\n\nDifferential Revision: https://reviews.llvm.org/D149162\n",
            "commit_timestamp": 1686139345.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686154658.788628,
            "elapsed_time": 5335.938840866089,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7fdf2b282d175b55bc36913366ea2b8f98229d00",
            "commit_message": "[gn] port 66a562d22e7 more (libc++ _LIBCPP_HAS_NO_FILESYSTEM)\n",
            "commit_timestamp": 1686153642.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686169190.866537,
            "elapsed_time": 5472.598975896835,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5aea839ab3edeb58bb0eea833ad9427d0ae7ef67",
            "commit_message": "[AMDGPU] Switch to backwards scavenging in eliminateFrameIndex\n\nFrame index elimination runs backwards so we must use backwards\nscavenging. Otherwise, when a scavenged register is spilled, the\nscavenger will remember that the register is in use until the restore\npoint, but it will never reach that restore point. The result is that in\nsome cases it will keep scavenging different registers instead of\nreusing the same one.\n\nDifferential Revision: https://reviews.llvm.org/D152394\n",
            "commit_timestamp": 1686167945.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686183462.369621,
            "elapsed_time": 5397.227828025818,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b7f5f48973898d997e18b06974aec88acddc4ba7",
            "commit_message": "[RISCV] Use Selection::getElementCount to simplify code. NFC\n",
            "commit_timestamp": 1686182521.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686197792.996593,
            "elapsed_time": 4976.8885662555695,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "46aba711ab8311b427cac8ad8235642d86c7f7d6",
            "commit_message": "[InstCombine] (icmp eq A, -1) & (icmp eq B, -1) --> (icmp eq (A&B), -1)\n\nThis patch add another icmp fold for -1 case.\n\nThis fixes https://github.com/llvm/llvm-project/issues/62311,\nwhere we want instcombine to merge all compare intructions together so\nlater passes like simplifycfg and slpvectorize can better optimize this\nchained comparison.\n\nReviewed By: goldstein.w.n\n\nDifferential Revision: https://reviews.llvm.org/D151660\n",
            "commit_timestamp": 1686195005.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686212301.71875,
            "elapsed_time": 5296.143295049667,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d3d5cdbfa8a9f2838531466d321feb82f3c08b9d",
            "commit_message": "[Clang] Convert some tests to opaque pointers (NFC)\n",
            "commit_timestamp": 1686211288.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686226618.318728,
            "elapsed_time": 5156.586681127548,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6a3fe0f121fac1a55ead649cc25bcc92d038472f",
            "commit_message": "X86: Add more is.fpclass lowering tests\n",
            "commit_timestamp": 1686225266.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686240817.490714,
            "elapsed_time": 5055.330767869949,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "cd18efb61d759405956dbd30e4b5f2720d8e1783",
            "commit_message": "[Driver] Make -G TargetSpecific\n\nso that we report `unsupported option '-G' for target ...` on\nunsupported targets (most targets).\nThis error is tested by one target in aix-err-options.c.\n\nFollow-up to D89897 and D90063.\n",
            "commit_timestamp": 1686240132.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686255219.27266,
            "elapsed_time": 4047.9484889507294,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7a52f79126a59717012d8039ef875f68e3c637fd",
            "commit_message": "[mlir][transform] Add support for expressing scalable vector sizes\n\nThis patch enables specifying scalable vector sizes when using the\nTransform dialect to drive vectorisation, e.g.:\n```\ntransform.structured.masked_vectorize %0 vector_sizes [8, 16, [4]]\n```\nThis is implemented by extending the MaskedVectorizeOp with a dedicated\nattribute for \"scalability\" and by overloading `parseDynamicIndexList`\nso that MaskedVectorizeOp can continue using the auto-generated parser\nand printer.\n\nAt the moment, only the trailing vec size can be scalable. The following\nis not yet supported:\n```\ntransform.structured.masked_vectorize %0 vector_sizes [8, [16], [4]]\n```\n\nAs the vectoriser does not support scalable vectorisation just yet, a\nwarning is issues when scalable vector sizes are used. You can also use\nthe debug output, `--debug-only=linalg-vectorization`, to check whether\nscalable vectorisation has been switched on.\n\nThis change is a part of a larger effort to enable scalable\nvectorisation in Linalg. See this RFC for more context:\n  * https://discourse.llvm.org/t/rfc-scalable-vectorisation-in-linalg/\nSimilar patch for tiling: https://reviews.llvm.org/D150944\n\nDifferential Revision: https://reviews.llvm.org/D151892\n",
            "commit_timestamp": 1686254057.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686270063.354516,
            "elapsed_time": 5598.8303871154785,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "90073e8de3871776c4df1da78d19019990241f4d",
            "commit_message": "[WebAssembly] Error out on invalid personality functions\n\nWithout explicitly checking and erroring out, an invalid personality\nfunction, which is not `__gxx_wasm_personality_v0`, caused\na segmentation fault down the line because `WasmEHFuncInfo` was not\ncreated. This explicitly checks the validity of personality functions in\nfunctions with EH pads and errors out explicitly with a helpful error\nmessage. This also adds some more assertions to ensure `WasmEHFuncInfo`\nis correctly created and non-null.\n\nInvalid personality functions wouldn't be generated by our Clang, but\ncan be present in handwritten ll files, and more often, in files\ntransformed by passes like `metarenamer`, which is often used with\n`bugpoint` to simplify names in `bugpoint`-reduced files.\n\nReviewed By: dschuff\n\nDifferential Revision: https://reviews.llvm.org/D152203\n",
            "commit_timestamp": 1686268789.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686298551.282557,
            "elapsed_time": 5241.783594608307,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "96962d5512fbc6af0ada0f13e6be332c026529cb",
            "commit_message": "[clang] set python3 as required build dependency\n\nThe required HTMLLogger include file needs python3 to run\nresource_bundle.py to bundle all the html/css/js resources. However, if\nuser sets -DLLVM_INCLUDE_TESTS=OFF, CMake will not find python3 and the\nresource bundler will never be executed. This patch set the python3 as a\nrequired build dependency to fix this problem.\n\nPatch By: Avimitin\n\nDifferential Revision: https://reviews.llvm.org/D152418\n",
            "commit_timestamp": 1686297168.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686313118.785582,
            "elapsed_time": 6418.979030847549,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "90431ca2e01489eeff22e141714bb294315d6a3c",
            "commit_message": "Reland [AMDGPU] New PAL metadata updates to ps_extra_lds_size and float_mode\n\nNew metadata format contains full calculation of field contents for\nps_extra_lds_size (vs old format where the value in RSRC register is used by PAL\nto calculate the value required).\n\nAlso stop updating float_mode and rely on front end settings for this field.\n\nDifferential Revision: https://reviews.llvm.org/D152247\n",
            "commit_timestamp": 1686310440.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686327715.392041,
            "elapsed_time": 6694.786968231201,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "2c0e6cfb8af59a291c2b446a02a2f8ebd930f07d",
            "commit_message": "[gn build] Port 6adb1ca555ec\n",
            "commit_timestamp": 1686325453.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686341793.414476,
            "elapsed_time": 3867.53191447258,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c0ad1b459742117990d38186deaeb49e75bb26f3",
            "commit_message": "[NewGVN] Fold equivalent freeze instructions\n\nDifferential Revision: https://reviews.llvm.org/D152529\n",
            "commit_timestamp": 1686340656.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686356180.631366,
            "elapsed_time": 5416.987868309021,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "10e83005367c595821749896e5938ff4f374601b",
            "commit_message": "[-Wunsafe-buffer-usage] Remove the unnecessary `const` qualifier in safe buffer analysis\n\nCasting away the qualifier raises a warning in 1e270be0886c3a770e7a967679552a02dfc1dca9\n",
            "commit_timestamp": 1686354109.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686370540.153749,
            "elapsed_time": 5124.249427318573,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "83f7b91ab8c6cbb261fb12bf720235b14283f46a",
            "commit_message": "[SelectionDAG] Update test case according to post review comments, NFC\n\nDifferential Revision: https://reviews.llvm.org/D152492\n",
            "commit_timestamp": 1686369747.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686385095.028035,
            "elapsed_time": 5313.795140504837,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "25d9fde22e609f8637f720220810429745707b76",
            "commit_message": "[SCCP] Skip computing intrinsics if one of its args is unknownOrUndef\n\nFor constant range supported intrinsics, we got consantrange from args\nno matter if they are unknown or undef. And the constant range computed\nfrom unknown or undef value state is full range.\n\nI think compute with full constant range is harmful since although we\ncan do mergeIn after these args value state are changed, the merge\noperation of two constant ranges is union.\n\nReviewed By: nikic\n\nDifferential Revision: https://reviews.llvm.org/D152499\n",
            "commit_timestamp": 1686383326.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686399796.138566,
            "elapsed_time": 7312.029540777206,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5b657f50b8e8dc5836fb80e566ca7569fd04c26f",
            "commit_message": "AMDGPU: Move LICM after AMDGPUCodeGenPrepare\n\nThe commit that added the run says it's to hoist uniform parts of\ninteger division expansion. That expansion is performed later, so this\ndidn't do anything in that case. Move this later so the original test\nshows the improvement.\n\nThis also saves a run of \"Canonicalize natural loops\". Not sure why\nthis appears to be still getting a separate loop PM run. Also feels a\nbit heavy to run this just for divide. Is there a way to specifically\nhoist the divide sequence when it expands?\n",
            "commit_timestamp": 1686397052.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686413797.542692,
            "elapsed_time": 5674.190080881119,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c0f9d7b0e6199ca3bde5a6d0036a8ada0bb6253b",
            "commit_message": "[MCParser] Modernize CppHashInfoTy (NFC)\n",
            "commit_timestamp": 1686412946.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686428197.802243,
            "elapsed_time": 5404.32940530777,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b6808ba291fcb5ff2e0d651e9e710f3d75631bc4",
            "commit_message": "[X86] Make constant `mul` -> `shl` + `add`/`sub` work for vector types\n\nSomething like:\n    `%r = mul %x, <33, 33, 33, ...>`\n\nIs best lowered as:\n    `%tmp = %shl x, <5, 5, 5>; %r = add %tmp, %x`\n\nAs well, since vectors have non-destructive shifts, we can also do\ncases where the multiply constant is `Pow2A +/- Pow2B` for arbitrary A\nand B, unlike in the scalar case where the extra `mov` instructions\nmake it not worth it.\n\nReviewed By: pengfei\n\nDifferential Revision: https://reviews.llvm.org/D150324\n",
            "commit_timestamp": 1686425926.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686442656.962456,
            "elapsed_time": 5387.891252279282,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "2509c93edd36a20a0aeb5e6d612dae5b770bc987",
            "commit_message": "[Transforms] Remove AddDiscriminatorsLegacyPass\n\nThe last use was removed by:\n\n  commit ae0987d242e266847f21f5fa1bffa97ce3eff586\n  Author: Kazu Hirata <kazu@google.com>\n  Date:   Sat Jun 10 13:51:35 2023 -0700\n\nDifferential Revision: https://reviews.llvm.org/D152636\n",
            "commit_timestamp": 1686436367.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686457123.531723,
            "elapsed_time": 6580.448311805725,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "db8049deef4e3d247849e4ce2b77c69aec89d014",
            "commit_message": "[TableGen] Fix indentation. NFC\n",
            "commit_timestamp": 1686452163.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686471280.945273,
            "elapsed_time": 5163.240679979324,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8100aa4c02b04cd7d03b472f770d540f28cf5150",
            "commit_message": "[libcxx] Use the unoptimized routines for volatile source types\n\nAs reported in: D147741\n\nReviewers: philnik, var-const, ldionne, hans\n\nDifferential Revision: https://reviews.llvm.org/D152571\n",
            "commit_timestamp": 1686463907.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686485812.116689,
            "elapsed_time": 6204.537847995758,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "2802739dfd844ee6a5148c25c74a58e3f9f27448",
            "commit_message": "[NFC] Replace ;; with ;\n",
            "commit_timestamp": 1686475524.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686500192.511348,
            "elapsed_time": 5346.529239177704,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c8c28ac5caf875771f9a424e46255948004cbeab",
            "commit_message": "[Driver] Place -mharden-sls= in m_Group\n\nFix https://github.com/llvm/llvm-project/issues/63237\n\nWith only a link action, we claim all CompileOnly_Group options (including -f*,\n-m*, -i*, etc). -mharden-sls= is not in a Group and therefore not claimed,\nleading to a spurious -Wunused-command-line-argument warning, and after\n5548843d692a92a7840f14002debc3cebcb3cdc3, an error.\n",
            "commit_timestamp": 1686499182.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686514715.727786,
            "elapsed_time": 6507.806059122086,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c72dea88b635bfd7856fa22bcaf388fa72c9fe86",
            "commit_message": "[AArch64][ARM][X86] Split XRay tests for Linux/macOS\n\nXRay instrumentation works for macOS running on Apple Silicon, but\ncodegen is untested there. I'm going to make changes affecting this\ntarget, get the XRay tests running on AArch64.\n\nData sections are going to become slightly different on x86_64 soon.\nI do want the tests to be specific about symbol names, so instead of\nhaving test check the common step, bifurcate tests a bit and check\nthe full symbol names.\n\nAs for ARM, XRay is not really supported on iOS at the moment, though\nARM is also really used there with modern phones. Nevertheless, codegen\ntests exist and the output is going to change a little, make it easier\nto write the special case for iOS.\n\nReviewed By: MaskRay\n\nDifferential Revision: https://reviews.llvm.org/D145291\n",
            "commit_timestamp": 1686513209.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686528968.283214,
            "elapsed_time": 5482.334884643555,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "63bd6d9e644335c8138a59281aafbf65a82fc47a",
            "commit_message": "[Driver] Default to -fxray-function-index\n\nAs explained by commit 849f1dd15e92fda2b83dbb6144e6b28b2cb946e0,\n-fxray-function-index was the original default but was accidentally flipped by\ncommit d8a8e5d6240a1db809cd95106910358e69bbf299. Restore the previous behavior.\n\nOriginally reported by Oleksii Lozovskyi in D145848.\n",
            "commit_timestamp": 1686523093.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686543438.256563,
            "elapsed_time": 5259.484094142914,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "cf79773a9006a7e22f3919268b7db381ddcb3abc",
            "commit_message": "[SCCP] Replace new value's value state with removed value's\n\nIn replaceSignedInst, if a signed instruction can be repalced with\nunsigned instruction, we created a new instruction and removed the old\ninstruction's value state. If the following instructions has this new\ninstruction as a use operand, transformations like replaceSignedInst and\nrefineInstruction would be blocked. The reason is there is no value\nstate for the new instrution.\n\nThis patch set the new instruction's value state with the removed\ninstruction's value state. I believe it is correct bacause when we\nrepalce a signed instruction with unsigned instruction, the value state\nis not changed.\n\nReviewed By: nikic\n\nDifferential Revision: https://reviews.llvm.org/D152337\n",
            "commit_timestamp": 1686541247.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1686557843.188131,
            "elapsed_time": 6097.543085813522,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "bd4f978754758d5ef29d1f10370f45362da3de37",
            "commit_message": "[libc] Improve memcmp latency and codegen\n\nThis is based on ideas from @nafi to:\n - use a branchless version of 'cmp' for 'uint32_t',\n - completely resolve the lexicographic comparison through vector\n   operations when wide types are available. We also get rid of byte\n   reloads and serializing '__builtin_ctzll'.\n\nI did not include the suggestion to replace comparisons of 'uint16_t'\nwith two 'uint8_t' as it did not seem to help the codegen. This can\nbe revisited in sub-sequent patches.\n\nThe code been rewritten to reduce nested function calls, making the\njob of the inliner easier and preventing harmful code duplication.\n\nReviewed By: nafi3000\n\nDifferential Revision: https://reviews.llvm.org/D148717\n",
            "commit_timestamp": 1686556583.0
        },
        {
            "tool_version": "232.0.20230531.134455-eap03",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686572215.473447,
            "elapsed_time": 5579.12425661087,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a8ad413f0d18c07a4adaa0d547e0096874d809c5",
            "commit_message": "[RFC][clangd] Move preamble index out of document open critical path\n\nWe would like to move the preamble index out of the critical path.\nThis patch is an RFC to get feedback on the correct implementation and potential pitfalls to keep into consideration.\n\nI am not entirely sure if the lazy AST initialisation would create using Preamble AST in parallel. I tried with tsan enabled clangd but it seems to work OK (at least for the cases I tried)\n\nReviewed By: kadircet\n\nDifferential Revision: https://reviews.llvm.org/D148088\n",
            "commit_timestamp": 1686571001.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686586753.320975,
            "elapsed_time": 7552.461572170258,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7b31d3dada151b3a8e9f56557bdc3401c2644977",
            "commit_message": "Revert \"[RDF] Allow RegisterRef to contain register unit\" and follow-ups\n\nThis reverts commit 859b05b02d3fd9ab6b77f2bed8df6902fe704806.\n\nAlso reverts these follow-ups:\n\nRevert \"[RDF] Remove `constexpr` from `hash\"\nThis reverts commit 621507ce20ad8eef2986be2712631165e53b7d91.\n\nRevert \"[RDF] Do not use trailing return type after all, NFC\"\nThis reverts commit 46e19e3a2c45e7fb5f501bdb983a7151c158304f.\n\nRevert \"[RDF] Stop looking when reached code node in getNextRef with NextOnly\"\nThis reverts commit a049ce9d1bd5a7c1c4fcccc6a801b72b00ea8e0f.\n\nRevert \"[RDF] Use trailing return type syntax, NFC\"\nThis reverts commit d3b34b7f3a7cbfc96aea897419f167b5ee19e61a.\n\nRevert \"[RDF] Define short type names: NodeAddr<XyzNode*> -> Xyz, NFC\"\nThis reverts commit f8ed60b56d1948422dda924fcf450560591e8a19.\n",
            "commit_timestamp": 1686584128.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686601206.351525,
            "elapsed_time": 7244.1240234375,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "1d6c3e29f6aa45914faa7be00a939b8f550f38e9",
            "commit_message": "[Driver] Mark m_x86_Features_Group options as TargetSpecific\n\nso that they get an error on non-x86 targets.\nFollow-up to D151590.\n\nAs a workaround for https://github.com/llvm/llvm-project/issues/63270, we don't\nreport an error for -msse4.2.\n",
            "commit_timestamp": 1686599253.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686629747.01761,
            "elapsed_time": 6032.665798425674,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0118a3f6c3c9bde9042f21b20a7a7131b942761c",
            "commit_message": "[mlir][docgen] Enable custom prefix strip for op name.\n\nThe fully qualified name gets long in the TOC (especially on mobile),\nenable specifying a prefix to be stripped.\n\nDifferential Revision: https://reviews.llvm.org/D152404\n",
            "commit_timestamp": 1686628701.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686644261.493748,
            "elapsed_time": 5865.157160043716,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "bba6ea8c2d56faad49936b95a57c7499095b920b",
            "commit_message": "[C++20] Claim full support for consteval again\n\nAfter resolving several outstanding issues now is the time to mark it as\nfully supported.\n\nFixes https://github.com/llvm/llvm-project/issues/57094\n\nReviewed By: aaron.ballman, cor3ntin, #clang-language-wg\n\nDifferential Revision: https://reviews.llvm.org/D147717\n",
            "commit_timestamp": 1686642624.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686658962.454711,
            "elapsed_time": 8156.410457134247,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8d1edae998fb40bbb22c5b5146eb333cf6148b35",
            "commit_message": "Use SelectionDAGBuiler::getRoot instead of SelectionDAG::getRoot\n",
            "commit_timestamp": 1686657579.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686673224.484355,
            "elapsed_time": 7368.945910215378,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "666a56f1f1683535967d1a3b7587bf85044ea005",
            "commit_message": "[MLIR][Tests] Update tests so they require assertions\n\nThese tests check statistics results which require assertions enabled.\n\nDifferential Revision: https://reviews.llvm.org/D152780\n",
            "commit_timestamp": 1686672044.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686687777.482228,
            "elapsed_time": 7855.154078960419,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "651e5ae62d29fdb07eb85f75ab7e686b98479f3a",
            "commit_message": "[MS] Fix passing aligned records by value in some cases\n\nIt's not exactly clear what the meaning of TypeInfo::AlignRequirement\nis, so go directly to the ASTRecordLayout for records and check the\nrequired alignment there. Compare that number with the stack alignment\nvalue of 4.\n\nThis fixes cases when the alignment attribute does not appear directly\non the record [1], or when the attribute on the record is underaligned\n[2].\n\n[1]: `struct Foo { int __declspec(align(16)) x; };`\n[2]: `struct __declspec(align(1)) Bar { int x; };`\n\nFixes https://llvm.org/pr63257\n\nDifferential Revision: https://reviews.llvm.org/D152752\n",
            "commit_timestamp": 1686686063.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686701903.776606,
            "elapsed_time": 6361.430757284164,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "9d5466849a770eeab222d5a5890376d3596e8ad6",
            "commit_message": "[SLP][NFC] Precommit test that exposes a bug in ShuffleBuilder.\n\nShuffleBuilder generates a zero mask here:\n`[[TMP6:%.*]] = shufflevector <2 x float> [[TMP3]], <2 x float> poison, <4 x i32> zeroinitializer`\nBut the correct mask is `0,0,1,1`, or we should have reused `TMP4`.\n\nDifferential Revision: https://reviews.llvm.org/D152868\n",
            "commit_timestamp": 1686700356.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686716424.469075,
            "elapsed_time": 7581.662240028381,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "bd96d7b81f457c16d3bced596ab3cf095f8fb101",
            "commit_message": "[scudo] Fix bound checks in MemMap and ReservedMemory methods\n\nReviewed By: Chia-hungDuan\n\nDifferential Revision: https://reviews.llvm.org/D152690\n",
            "commit_timestamp": 1686714954.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686730935.018395,
            "elapsed_time": 16979.02570080757,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4a69e0a0ad2fd3fb3ec590a9db4ac5390c7093e7",
            "commit_message": "[test][hwasan] Rename constants in test\n",
            "commit_timestamp": 1686729635.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686744974.785978,
            "elapsed_time": 13442.590408563614,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0696240384cf4b18f65e31d68b51df96c328cb24",
            "commit_message": "LowerMemIntrinsics: Check address space aliasing for memmove expansion\n\nFor cases where we cannot insert an addrspacecast, we can still expand\nlike a memcpy if we know the address spaces cannot alias. Normally\nnon-aliasing memmoves are optimized to memcpy, but we cannot rely on\nthat for lowering. If a target has aliasing address spaces that cannot\nbe casted between, we still have to give up lowering this.\n",
            "commit_timestamp": 1686743818.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686759548.481363,
            "elapsed_time": 16726.991515398026,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "211f27f37c86316c5be2358ecc200f370bd76639",
            "commit_message": "[CodeGen] Add pre-commit tests for D152022 and D152558\n\nDifferential Revision: https://reviews.llvm.org/D152025\n",
            "commit_timestamp": 1686758027.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686773736.511315,
            "elapsed_time": 13539.755667209625,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fd68d36109c6fcebb6d758046b88b0664acccf51",
            "commit_message": "[mlir][sparse] unifying enterLoopOverTensorAtLvl and enterCoIterationOverTensorsAtLvls\n\nThe tensor levels are now explicitly categorized into different `LoopCondKind` to instruct LoopEmitter generate different code for different kinds of condition (e.g., `SparseCond`, `SparseSliceCond`, `SparseAffineIdxCond`, etc)\n\nThe process of generating a while loop is now dissembled into three steps and they are dispatched to different LoopCondKind handler.\n1. Generate LoopCondition (e.g., `pos <= posHi` for `SparseCond`, `slice.isNonEmpty` for `SparseAffineIdxCond`)\n2. Generate LoopBody (e.g., compute the coordinates)\n3. Generate ExtraChecks (e.g., `if (onSlice(crd))` for `SparseSliceCond`)\n\nReviewed By: aartbik\n\nDifferential Revision: https://reviews.llvm.org/D152464\n",
            "commit_timestamp": 1686772990.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686788524.06862,
            "elapsed_time": 16771.82960319519,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e63e536044178cdd23ed8a82f35c42d394bb1dfa",
            "commit_message": "[TextAPI] add osx to possible string to platform input\n",
            "commit_timestamp": 1686785486.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686802703.663016,
            "elapsed_time": 17240.52918291092,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0e08374abb2c61a3ae5c24d5f60be3b548da9778",
            "commit_message": "[clang][NFC] Add a notice to desugarForDiagnostic\n\n`desugarForDiagnostic` only sets ShouldAKA to true if desugaring\nhappens, otherwise ShouldAKA is left intact and might be uninitialized.\n\nVictims (including me):\n\nhttps://github.com/llvm/llvm-project/commit/25bf8cb3c0e3c41231289a6ff0a37b6d49b24011\n\nhttps://github.com/llvm/llvm-project/commit/0e8384a0fe4f03d60cd92aba1cae074512481ca2\n\nReviewed By: aaron.ballman\n\nDifferential Revision: https://reviews.llvm.org/D152880\n",
            "commit_timestamp": 1686801306.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686817019.491943,
            "elapsed_time": 14665.92136836052,
            "x64": true,
            "actual_files_count": 1666,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f031df21aaadf0ec7a5b697bb75e44656aba4abf",
            "commit_message": "[AArch64] Don't look at type size for scalable types in isExtFreeImpl\n\nThis fixes one of those 'Request for a fixed element count on a scalable\nobject' errors in the AArch64 isExtFreeImpl method, where the uses of a sext\nare checked to see if the instruction can be considered free.\nhttps://godbolt.org/z/debYP9c4G\n\nDifferential Revision: https://reviews.llvm.org/D152930\n",
            "commit_timestamp": 1686815230.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686831517.983079,
            "elapsed_time": 14053.281967401505,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4e4bd29061de5e7790e47e78ec90e41e2ee7ee30",
            "commit_message": "[GlobalIsel][X86] Add handling for G_FRAME_INDEX/G_GLOBAL_VALUE\n\nReplace the legacy legalizer versions\n",
            "commit_timestamp": 1686830263.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686845789.601773,
            "elapsed_time": 13908.613616228104,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "dcdfc963d7934a1313094b6fe9ce7aa04debe495",
            "commit_message": "[libc] Export GPU extensions to `libc` for external use\n\nThe GPU port of the LLVM C library needs to export a few extensions to\nthe interface such that users can interface with it. This patch adds the\nnecessary logic to define a GPU extension. Currently, this only exports\na `rpc_reset_client` function. This allows us to use the server in\nD147054 to set up the RPC interface outside of `libc`.\n\nDepends on https://reviews.llvm.org/D147054\n\nReviewed By: sivachandra\n\nDifferential Revision: https://reviews.llvm.org/D152283\n",
            "commit_timestamp": 1686844944.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686860358.349034,
            "elapsed_time": 8070.514589548111,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ae7e6df15f5640cb26df4671d6609b6a405bb338",
            "commit_message": "[Bazel][mlir][tosa] Fix for 86c4972f5f6759b0ba85c568d934f9b8db8875a2\n",
            "commit_timestamp": 1686858619.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686874659.937518,
            "elapsed_time": 6017.420338392258,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "43687da7a0d6ba13b1428037e8587568cc40b449",
            "commit_message": "[mlir][doc] Fix the layout of the table for the tosa.cast permissible operations\n\nWe can make the table for the `tosa.cast` permissible operations readable by utilizing the markdown table format.\n\n{F27924602}\n\nReviewed By: jpienaar\n\nDifferential Revision: https://reviews.llvm.org/D152992\n",
            "commit_timestamp": 1686873580.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686888943.487221,
            "elapsed_time": 6165.157351970673,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "96ed1bda29effd169a3c6e5eb64efe34811f27e3",
            "commit_message": "[MC][test] Add some label difference tests\n",
            "commit_timestamp": 1686886814.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686903401.580258,
            "elapsed_time": 5160.098011732101,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "27f37db76a79e746561ad2545ff6ccf0d50cc38c",
            "commit_message": "[llvm-exegesis] Use MCJIT only for execution\n\nInitially, llvm-exegesis was generating the benchmark code for the\nhost CPU to execute it inside its own process. Thus, MCJIT was reused\nfor fetching function's bytes to fill the assembled_snippet field in\nthe benchmark report.\n\nLater, the --mtriple and --benchmark-phase command line options were\nintroduced that are handy for testing snippet generation even if\nsnippet execution is not possible. In that setup, MCJIT is asked to\nparse an object file for a foreign CPU or operating system that is\nprobably not guaranteed to succeed and was actually observed to fail\nin https://reviews.llvm.org/D145763.\n\nThis commit implements a much simplified function's code fetching,\nassuming the benchmark function is the only function in the object file\nand it spans across the entire text section (note that MCJIT-based code\nhas more or less the same assumption - see TrackingSectionMemoryManager\nclass).\n\n~~~\n\nHuawei RRI, OS Lab\n\nReviewed By: courbet\n\nDifferential Revision: https://reviews.llvm.org/D148921\n",
            "commit_timestamp": 1686901132.0
        },
        {
            "tool_version": "232.0.20230608.100247-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686917802.612113,
            "elapsed_time": 6251.843702077866,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d0233ccbf8807f86edef3aa1fb90b3786a9ce017",
            "commit_message": "[mlir][nvvm] Introduce `mbarrier.arrive`\n\nIt introduces `mbarrier.arrive` that are in ptx78.\n\nReviewed By: qcolombet\n\nDifferential Revision: https://reviews.llvm.org/D153021\n",
            "commit_timestamp": 1686916383.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686932215.451888,
            "elapsed_time": 6339.482229232788,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ed34cb2cd78143a3ec99a91fe2db79bdb1ddfd85",
            "commit_message": "[libc] Add a test for `fputs` to check using `stdout` and `stderr`\n\nThis patch adds a test directly for the `fputs` function similar to the\nexisting `puts` test. This lets us know that the default file pointers\nare function and the `fputs` interface works.\n\nReviewed By: lntue\n\nDifferential Revision: https://reviews.llvm.org/D152288\n",
            "commit_timestamp": 1686931315.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686946583.272227,
            "elapsed_time": 5908.212112426758,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7a709689bc1755a569864a97d93b96d22f988eb4",
            "commit_message": "[clangd] Handle DependentNameType in HeuristicResolver::resolveTypeToRecordDecl()\n\nFixes https://github.com/clangd/clangd/issues/1671\n\nDifferential Revision: https://reviews.llvm.org/D152645\n",
            "commit_timestamp": 1686943190.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686961212.682653,
            "elapsed_time": 7546.750667095184,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "441108ccba948d76e7002c61236e3bcbca0203ce",
            "commit_message": "Reland [clang-format] Fix overlapping whitespace replacements before PPDirective\n\nIf the first token of an annotated line already has a computed Newlines,\nreuse it to avoid potential overlapping whitespace replacements before\npreprocessor branching directives.\n\nFixes #62892.\n\nDifferential Revision: https://reviews.llvm.org/D151954\n",
            "commit_timestamp": 1686960012.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686975265.51241,
            "elapsed_time": 5708.259219408035,
            "x64": true,
            "actual_files_count": 1667,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c2888cddd5d98081fc82c51cb92be241144c6ffa",
            "commit_message": "[NFC] Fix potential dereferencing of null return value.\n\nReplace getAs with castAs and add assert if needed.\nDifferential Revision: https://reviews.llvm.org/D152977\n",
            "commit_timestamp": 1686972668.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1686989885.902964,
            "elapsed_time": 5772.895994901657,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f2a352e0584093c65f07cdd7cc62c5cc66beacbd",
            "commit_message": "[Clang] Add the list of core papers approved in Varna to the status page\n",
            "commit_timestamp": 1686984756.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687004132.587551,
            "elapsed_time": 6391.038763523102,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "cea4285949b53acd1457be4f503f4b26e096132c",
            "commit_message": "[libc++][NFC] Granularise <thread> header\n\n- This was to make implementing jthread easier and requested in https://reviews.llvm.org/D151559\n\nDifferential Revision: https://reviews.llvm.org/D151792\n",
            "commit_timestamp": 1687001332.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687018583.139226,
            "elapsed_time": 6231.365563154221,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f8a1d021ed349f1f05bb1c45feaaadc6c07fb567",
            "commit_message": "[Coding style] Fix incorrect link syntax\n",
            "commit_timestamp": 1687004765.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687032909.5316,
            "elapsed_time": 6382.8265244960785,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "2cb805666ad432fd28bd197ece096ba27b0cb9ce",
            "commit_message": "PPCAsmParser: Use parseOptionalToken\n\nto simplify code near __tls_get_addr parsing.\n",
            "commit_timestamp": 1687030489.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687047786.927323,
            "elapsed_time": 7478.9992661476135,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "833438eef0663d16d4224e25602749f50b661a17",
            "commit_message": "[Hexagon] Handle all compares of i1 and vNi1\n\nFixes https://github.com/llvm/llvm-project/issues/63363\n",
            "commit_timestamp": 1687044681.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687061815.584372,
            "elapsed_time": 6411.369520664215,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "44e63ffe2bf7e5c026b828054d67088239939e81",
            "commit_message": "[clang] Replace uses of CGBuilderTy::CreateElementBitCast (NFC)\n\n* Add `Address::withElementType()` as a replacement for\n  `CGBuilderTy::CreateElementBitCast`.\n\n* Partial progress towards replacing `CreateElementBitCast`, as it no\n  longer does what its name suggests. Either replace its uses with\n  `Address::withElementType()`, or remove them if no longer needed.\n\n* Remove unused parameter 'Name' of `CreateElementBitCast`\n\nReviewed By: barannikov88, nikic\n\nDifferential Revision: https://reviews.llvm.org/D153196\n",
            "commit_timestamp": 1687050795.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687076140.984956,
            "elapsed_time": 6653.245106458664,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ed0620fd24a174d420c889454544697f57248b88",
            "commit_message": "[gn build] Port 845618cf69e8\n",
            "commit_timestamp": 1687073450.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687090507.270134,
            "elapsed_time": 6220.2735295295715,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "82d4dc20efbd72e20b430913e985e38997c7a3e8",
            "commit_message": "[clang-tidy] Improve `performance-move-const-arg` message when no move constructor is available\n\nWe now display a simple note if the reason is that the used class does not\nsupport move semantics.\n\nThis fixes llvm#62550\n\nReviewed By: PiotrZSL\n\nDifferential Revision: https://reviews.llvm.org/D153220\n",
            "commit_timestamp": 1687088447.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687104950.08355,
            "elapsed_time": 6038.886070013046,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7dd387d2971d7759cadfffeb2082439f6c7ddd49",
            "commit_message": "[clang] Add __builtin_isfpclass\n\nA new builtin function __builtin_isfpclass is added. It is called as:\n\n    __builtin_isfpclass(<floating point value>, <test>)\n\nand returns an integer value, which is non-zero if the floating point\nargument falls into one of the classes specified by the second argument,\nand zero otherwise. The set of classes is an integer value, where each\nvalue class is represented by a bit. There are ten data classes, as\ndefined by the IEEE-754 standard, they are represented by bits:\n\n    0x0001 (__FPCLASS_SNAN)         - Signaling NaN\n    0x0002 (__FPCLASS_QNAN)         - Quiet NaN\n    0x0004 (__FPCLASS_NEGINF)       - Negative infinity\n    0x0008 (__FPCLASS_NEGNORMAL)    - Negative normal\n    0x0010 (__FPCLASS_NEGSUBNORMAL) - Negative subnormal\n    0x0020 (__FPCLASS_NEGZERO)      - Negative zero\n    0x0040 (__FPCLASS_POSZERO)      - Positive zero\n    0x0080 (__FPCLASS_POSSUBNORMAL) - Positive subnormal\n    0x0100 (__FPCLASS_POSNORMAL)    - Positive normal\n    0x0200 (__FPCLASS_POSINF)       - Positive infinity\n\nThey have corresponding builtin macros to facilitate using the builtin\nfunction:\n\n    if (__builtin_isfpclass(x, __FPCLASS_NEGZERO | __FPCLASS_POSZERO) {\n      // x is any zero.\n    }\n\nThe data class encoding is identical to that used in llvm.is.fpclass\nfunction.\n\nDifferential Revision: https://reviews.llvm.org/D152351\n",
            "commit_timestamp": 1687103612.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687119402.433863,
            "elapsed_time": 6046.918904304504,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "59723e401bcad2650bcbfc39e7fe8479dfc7f62b",
            "commit_message": "[Target] Use llvm::is_contained (NFC)\n",
            "commit_timestamp": 1687117440.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687134031.462452,
            "elapsed_time": 6264.057017087936,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ada137a4c2a292c34927f0f22bd4c6fba4d3df87",
            "commit_message": "[MC] Remove unneeded MCDataFragment check from AttemptToFoldSymbolOffsetDifference\n\nIf FA == FB, we can use SA.getOffset() - SB.getOffset() even if FA is\nnot a MCDataFragment, as the only case this can be problematic\n(different offsets for a variable-size fragment) is invalid/unreachable.\nIf FA != FB, the `if (FI->getKind() != MCFragment::FT_Data)` check below\ncan bail out correctly.\n\nThis change will help Mach-O fold more expressions. For ELF this is NFC,\nunless evaluateFixup has a bug that would evaluate an expression\ndifferently.\n",
            "commit_timestamp": 1687129218.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687148058.707599,
            "elapsed_time": 5876.553906679153,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "2d8044ee8b19f23e0a7fe5cd35876515d0d1d72e",
            "commit_message": "Recommit [ABI] [C++20] [Modules] Don't generate vtable if the class is defined in other module unit\n\nClose https://github.com/llvm/llvm-project/issues/61940.\n\nThe root cause is that clang will generate vtable as strong symbol now\neven if the corresponding class is defined in other module units. After\nI check the wording in Itanium ABI, I find this is not inconsistent.\nItanium ABI 5.2.3\n(https://itanium-cxx-abi.github.io/cxx-abi/abi.html#vague-vtable) says:\n\n> The virtual table for a class is emitted in the same object containing\n> the definition of its key function, i.e. the first non-pure virtual\n> function that is not inline at the point of class definition.\n\nSo the current behavior is incorrect. This patch tries to address this.\nAlso I think we need to do a similar change for MSVC ABI. But I don't\nfind the formal wording. So I don't address this in this patch.\n\nReviewed By: rjmccall, iains, dblaikie\n\nDifferential Revision: https://reviews.llvm.org/D150023\n",
            "commit_timestamp": 1687142472.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687162685.072786,
            "elapsed_time": 6297.086789369583,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0eb0fecbc544a0416b70f4450a38dfb27c9b5b9a",
            "commit_message": "[mlir][ExecutionEngine] Only load JITDyLibs without init/destroy funcs.\n\nIn https://reviews.llvm.org/D153029, I moved the loading/unloading\nmechanisms of shared libraries from the JIT runner to the execution\nengine in order to make that mechanism available in the latter\n(including its Python bindings). However, I realized that I introduced a\nsmall change in semantic: previously, the JIT runner checked for the\npresence of init/destroy functions and only loaded the library as\nJITDyLib if they were not present. After I moved the code, all libraries\nwere loaded as JITDyLib, even if they registered their symbols\nexplicitly in their init function. I am not sure if this is really a\nproblem but (1) the previous behavior was different and (2) I guess it\ncould cause a problem if some symbols are exported through the init\nfunction *and*  have public visibility. This patch reestablishes the\noriginal behaviour in the new place of the code.\n\nReviewed By: mehdi_amini\n\nDifferential Revision: https://reviews.llvm.org/D153249\n",
            "commit_timestamp": 1687160331.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687177235.249251,
            "elapsed_time": 7564.498025178909,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7e229217f4215b519b886e7881bae4da3742a7d2",
            "commit_message": "[lldb][AArch64] Add thread local storage tpidr register\n\nThis register is used as the pointer to the current thread\nlocal storage block and is read from NT_ARM_TLS on Linux.\n\nThough tpidr will be present on all AArch64 Linux, I am soon\ngoing to add a second register tpidr2 to this set.\n\ntpidr is only present when SME is implemented, therefore the\nNT_ARM_TLS set will change size. This is why I've added this\nas a dynamic register set to save changes later.\n\nReviewed By: omjavaid\n\nDifferential Revision: https://reviews.llvm.org/D152516\n",
            "commit_timestamp": 1687175518.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687191673.36587,
            "elapsed_time": 8394.874437093735,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "632ccc538cf454a00010fa83e0734b562a34faa8",
            "commit_message": "[mlir][sparse][gpu] remove tuple as one of the spmm_buffer_size output type\n\nReviewed By: aartbik\n\nDifferential Revision: https://reviews.llvm.org/D153188\n",
            "commit_timestamp": 1687190270.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687205955.530161,
            "elapsed_time": 7443.127861499786,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "407dcaf002f71abf940f3e903fa17791b150995d",
            "commit_message": "[Driver] Correct -fnoxray-link-deps to -fno-xray-link-deps\n\nand removed unused CC1Option.\nAlso change -whole-archive to the canonical spelling and improve tests.\n",
            "commit_timestamp": 1687204113.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687220400.571868,
            "elapsed_time": 8387.223415613174,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fec7c6457ced7e87d4e0837402b0b8a644cf6242",
            "commit_message": "Revert \"Reland \"[DebugMetadata][DwarfDebug] Support function-local types in lexical block scopes (4/7)\"\"\n\nThis reverts commit 2da45172c4bcd42f704c57c656926f56f32fc5ce.\nTest local-type-as-template-parameter.ll fails on ppc64-aix.\n",
            "commit_timestamp": 1687218888.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687234437.275844,
            "elapsed_time": 5571.0322959423065,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "516e32678d87fea013aa972444b987d95eaef8aa",
            "commit_message": "[X86][AMX] set Stride to Tile's Col when doing combine amxcast and store into tilestore\n\n%tile = call x86_amx @llvm.x86.tileloadd64.internal(i16 8, i16 32, i8* %src_ptr, i64 64)\n%vec = call <256 x i8> @llvm.x86.cast.tile.to.vector.v256i8(x86_amx...%tile)\nstore <256 x i8> %vec, <256 x i8>* %dst_ptr, align 256\n=>\n%tile = call x86_amx @llvm.x86.tileloadd64.internal(i16 8, i16 32, i8* %src_ptr, i64 64)\n%stride = sext i16 32 to i64\ncall void @llvm.x86.tilestored64.internal(i16 8, i16 32, i8* %dst_ptr, i64 32, x86_amx %tile)\n\nReviewed By: LuoYuanke\n\nDifferential Revision: https://reviews.llvm.org/D153002\n",
            "commit_timestamp": 1687233325.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687248945.997154,
            "elapsed_time": 6238.428802728653,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "99610fa77df46fbc38d80e0b7ee02acfddbd032d",
            "commit_message": "Revert \"[AMDGPU] Start documenting calling conventions. NFC\"\n\nThis reverts commit aa7b127cb7314e326457d7f790d36db1cb74f63c.\n\n...because I really ought to install sphinx.\n",
            "commit_timestamp": 1687247752.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687263595.756006,
            "elapsed_time": 7666.275839567184,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6bea8331f9e09ba94a225c65becd4224a1a473af",
            "commit_message": "Revert \"Reland \"[DebugMetadata][DwarfDebug] Support function-local types in lexical block scopes (4/7)\" (2)\"\n\nThis reverts commit cb9ac7051589ea0d05507f9370d0716bef86b4ae.\nIt causes an assert in clang:\nvirtual void llvm::DwarfDebug::endFunctionImpl(const llvm::MachineFunction*): Assertion `LScopes.getAbstractScopesList().size() == NumAbstractSubprograms && \"getOrCreateAbstractScope() inserted an abstract subprogram scope\"' failed.\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=1456288#c2\n",
            "commit_timestamp": 1687259327.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687292173.476478,
            "elapsed_time": 5904.445529699326,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6eca120dd8d3ec55bf8dc00b45366e8596359be3",
            "commit_message": "Improve MLIR \"view-op-graph\" to color operations according to their name\n\nDifferential Revision: https://reviews.llvm.org/D153290\n",
            "commit_timestamp": 1687291248.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687306645.696648,
            "elapsed_time": 6452.318295717239,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fabd16c7460e6cfae3106155ec79142bfa54db2e",
            "commit_message": "[lldb][Android] Add platform.plugin.remote-android.package-name\n\nWhen LLDB fails to pull file from a package directory due to security\nconstraint, user needs to set the package name to\n'platform.plugin.remote-android.package-name' property to run shell commands\nas the package user. (e.g. to get file with 'cat' and 'dd').\n\nhttps://cs.android.com/android/platform/superproject/+/master:\nsystem/core/run-as/run-as.cpp;l=39-61;\ndrc=4a77a84a55522a3b122f9c63ef0d0b8a6a131627\n\nDifferential Revision: https://reviews.llvm.org/D152933\n",
            "commit_timestamp": 1687303041.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687320912.535022,
            "elapsed_time": 6274.461288928986,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b1cab310739cd9f14e094b73dfe8301b8bb83b70",
            "commit_message": "[docs][TableGen][Target] Improve the documentation of the attribute value for SubtargetFeature.\n\nThe value \"true\" and \"false\" are treated specially and other values are treated as integers.\n\nReviewed By: arsenm\n\nDifferential Revision: https://reviews.llvm.org/D153180\n",
            "commit_timestamp": 1687319856.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687335427.079536,
            "elapsed_time": 6323.334947824478,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4d618b52f6e05e41d35f56653cb36bf7d4dc794e",
            "commit_message": "[llvm-exegesis] Introduce Subprocess Executor Mode\n\nThis patch introduces the subprocess executor mode. Currently, this new\nmode doesn't do anything fancy, just executing the same code that the\ninprocess executor would do, but within a subprocess. This sets up the\nability to add in many more memory-related features in the future.\n",
            "commit_timestamp": 1687334128.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687349925.487037,
            "elapsed_time": 6620.996736288071,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "10e3ed9919ffb68d5938ccd83414b766279ace03",
            "commit_message": "[Flang][Debug] NFC: Correct the REQUIRES line to use system-linux\n\nReviewed By: kkwli0\n\nDifferential Revision: https://reviews.llvm.org/D153126\n",
            "commit_timestamp": 1687345863.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687364111.799971,
            "elapsed_time": 6143.181931257248,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "aae155c50b07cf2358d72055457c133f4a71e1eb",
            "commit_message": "[RISCV] Use a build_vector instead of a chain insert_vector_elts for vXi1 build_vector lowreing.\n\nA build_vector is the canonical representation rather than multiple\ninsert_vector_elts.\n\nUnfortunately, this regresses quite a few tests now primarily due to not\nhaving a vmv.s.x special case, but I hope we can improve this with future\npatches.\n\nStress testing in our downstream found an infinite loop in DAG combine.\nThis patch breaks the infinite loop.\n\nThe insert_vector_element chain starts with a fixed vector undef.\nFixed vector undef is currently expanded to a build_vector of 0s\nwhich gets lowered to a vmv.v.i. The insert chain overwrites all\nelements so SimplifyDemandedVectorElts turns the vmv.v.i back into\nundef and the cycle repeats.\n\nWe probably should custom lower fixed vector undef to scalable\nvector undef. I think that would also fix the infinite loop, but\nI didn't test that.\n\nReviewed By: luke\n\nDifferential Revision: https://reviews.llvm.org/D153399\n",
            "commit_timestamp": 1687363066.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687378516.083321,
            "elapsed_time": 6189.700397729874,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e734a12b608f8c4a2b03fb2f3194de1cc3b43344",
            "commit_message": "Emit DW_LLE_base_address + DW_LLE_offset_pair for DWARF v5\n\nThis patch tries to reduce the size of the debug_loclist section by\nreplacing the DW_LLE_start_length opcodes currently emitted by dsymutil\nin favor of using DW_LLE_base_address + DW_LLE_offset_pair instead.\n\nThe DW_LLE_start_length is one AddressSize followed by a ULEB per entry,\nwhereas, the DW_LLE_base_address + DW_LLE_offset_pair will use one\nAddressSize for the base address, and then the DW_LLE_offset_pair is a\npair of ULEBs. This will be more efficient where a loclist fragment has\nmany entries.\n\nDifferential Revision: https://reviews.llvm.org/D153080\n",
            "commit_timestamp": 1687376609.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687393375.810495,
            "elapsed_time": 8150.390727758408,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0867d4157328169c570f4d1e9c01806624035873",
            "commit_message": "[flang] don't require -flang-experimental-exec flag anymore\n\nReviewed By: awarzynski, PeteSteinfeld\n\nDifferential Revision: https://reviews.llvm.org/D153379\n",
            "commit_timestamp": 1687391272.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687407424.770336,
            "elapsed_time": 6035.089504480362,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "845ea71d0bf4b1e423858bf8c5c94c8b7f5980ec",
            "commit_message": "[RISCV] Separate scheduler calsses for vfredmax/min\n\nvfredmax/min may have different scheduling behavior on different\nmicroarchitectures compared to other reductions. This different\nbehavior can be described by giving vfredmax/min separate\nscheduling resources.\n\nDifferential Revision: https://reviews.llvm.org/D153450\n",
            "commit_timestamp": 1687402583.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687422013.638525,
            "elapsed_time": 8024.970028400421,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7c2604ca196c3ba0247509c0fde350e23f0cccb0",
            "commit_message": "[BOLT][RISCV] Add tests for simple CFG transformations\n\nReviewed By: rafauler\n\nDifferential Revision: https://reviews.llvm.org/D153346\n",
            "commit_timestamp": 1687419354.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687436437.452276,
            "elapsed_time": 8530.08310675621,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "68a09c929003bf6af41162ed9e6dc4713d96a997",
            "commit_message": "[AArch64] Remove G_VECREDUCE_FADD from selectReduction\n\nI believe that for fp reductions we can use the imported tablegen patterns for\nselection, as opposed to going via selectReduction. Integer reductions are more\ndifficult, as the return types in selection DAG will be promoted to i32.\n\nDifferential Revision: https://reviews.llvm.org/D153244\n",
            "commit_timestamp": 1687434414.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687450654.670855,
            "elapsed_time": 7164.9377999305725,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d49984fa4f83d6fca83b2c594a2475956de170f1",
            "commit_message": "[SimplifyCFG] Add option to not speculate blocks\n\nRequired for phase ordering changes to not regress Rust code with D145265.\n\nReviewed By: nikic\n\nDifferential Revision: https://reviews.llvm.org/D153391\n",
            "commit_timestamp": 1687449100.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687465209.22629,
            "elapsed_time": 7363.508020162582,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "982a87ab74d8d050ae56164fcead7cf19038b077",
            "commit_message": "[CLANG] Fix potential null pointer dereference bugs\n\nThis patch uses castAs instead of getAs which will assert if the type doesn't match and adds nullptr check if needed.\n\nAlso this patch improves the codes and passes I.getData() instead of doing a lookup in dumpVarDefinitionName()\nsince we're iterating over the same map in LocalVariableMap::dumpContex().\n\nReviewed By: aaron.ballman, aaronpuchert\n\nDifferential Revision: https://reviews.llvm.org/D153033\n",
            "commit_timestamp": 1687463918.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687479699.462996,
            "elapsed_time": 7497.35427737236,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "28fb39f16af1003e53008b75c11127b3288742f8",
            "commit_message": "[lldb] Adjust for changes in objc runtime\n\nThe Objective-C runtime and the shared cache has changed slightly.\nGiven a class_ro_t, the baseMethods ivar is now a pointer union and may\neither be a method_list_t pointer or a pointer to a relative list of\nlists. The entries of this relative list of lists are indexes that refer\nto a specific image in the shared cache in addition to a pointer offset\nto find the accompanying method_list_t. We have to go over each of these\nentries, parse it, and then if the relevant image is loaded in the\nprocess, we add those methods to the relevant clang Decl.\n\nIn order to determine if an image is loaded, the Objective-C runtime\nexposes a symbol that lets us determine if a particular image is loaded.\nWe maintain a data structure SharedCacheImageHeaders to keep track of\nthat information.\n\nThere is a known issue where if an image is loaded after we create a\nDecl for a class, the Decl will not have the relevant methods from that\nimage (i.e. for Categories).\n\nrdar://107957209\n\nDifferential Revision: https://reviews.llvm.org/D153597\n",
            "commit_timestamp": 1687477342.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687493720.369274,
            "elapsed_time": 5919.502574682236,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d4d8cd8446f66be8d182bcc6337e5b39b1203cc5",
            "commit_message": "[libc] Factor specifics of packet type out of process\n\nNFC. Simplifies process slightly, gives more options for testing it.\n\nReviewed By: jhuber6\n\nDifferential Revision: https://reviews.llvm.org/D153604\n",
            "commit_timestamp": 1687488323.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687508352.047689,
            "elapsed_time": 6270.276419639587,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "3f77724de7bc84f5f6a89b81de990b2c49f93953",
            "commit_message": "[TargetLowering] Better code generation for ISD::SADDSAT/SSUBSAT when operand sign is known\n\nWhen the sign of either of the operands is known, it is possible to\ndetermine what the saturating value will be without having to compute it\nusing the sign bits.\n\nDifferential Revision: https://reviews.llvm.org/D153575\n",
            "commit_timestamp": 1687506636.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687522714.303462,
            "elapsed_time": 7817.262895822525,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5183ca877982a6a5cbe84c9e73f99e1d289e50be",
            "commit_message": "[AMDGPU][AsmParser] Eliminate cvtMtbuf().\n\nNow that we have proper support for optional operands, the standard LLVM\nmachinery can take care of converting parsed instructions to MCInsts.\nThere are likely more cases where the conversion can be done\nautomatically, probably with some additional treatment. The plan is to\naddress them separately.\n\nPart of <https://github.com/llvm/llvm-project/issues/62629>.\n\nReviewed By: arsenm, foad\n\nDifferential Revision: https://reviews.llvm.org/D153565\n",
            "commit_timestamp": 1687520632.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687537280.430674,
            "elapsed_time": 7717.579576253891,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5ddd561cb5e2d2c55f4d42912a96d1e0982697b1",
            "commit_message": "disable execute-only tests which are failing with expensive checks\n\nTemporarily disabling the execute-only tests. We recently added codegen for\narmv6-m, which is still in heavy development (D152795).\n\nDisabling the tests while we're figuring out what's going on is probably the\nleast disruptive option, as a patch dependent on it also already landed.\n",
            "commit_timestamp": 1687534524.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687551626.97492,
            "elapsed_time": 7767.715786218643,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c52268a9afe96078fde9ee778577341645465c38",
            "commit_message": "[ConstraintElim] Add tests to check negated OR simplifications.\n\nAdditional test coverage for D151799.\n",
            "commit_timestamp": 1687550486.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687565752.905847,
            "elapsed_time": 6332.204815864563,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a2a4b605e2aada7fff2d88b830e420f966e0a16e",
            "commit_message": "[RISCV] Split ReadSFB into ReadSFBJmp and ReadSFBALU.\n\nThe operands may need to be available at different times.\n",
            "commit_timestamp": 1687564365.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687580268.945376,
            "elapsed_time": 6568.608646869659,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "68ed9d94720c50a48bc7d5d1321b37a5381a54fd",
            "commit_message": "[GlobalIsel][X86] G_STORE extension\n\nReviewed By: arsenm\n\nDifferential Revision: https://reviews.llvm.org/D153643\n",
            "commit_timestamp": 1687578690.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687594485.60826,
            "elapsed_time": 6157.780821084976,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e5c7904fa0bfa5a24f192cfa7b9116560e1f5d43",
            "commit_message": "[C++20][Modules] Implement P2615R1 revised export diagnostics.\n\nIt has been reported to that the current clang  errors for, specifically,\nstatic_assert in export contexts are a serious blocker to adoption of\nmodules in some cases.\n\nThere is also implementation divergence with GCC and MSVC allowing the\nconstructs mentioned below where clang currently rejects them with an\nerror.\n\nThe category of errors [for declarations in an exported context] is:\n(unnamed, static_assert, empty and asm decls). These are now permitted\nafter P2615R1 which was approved by WG21 as a DR (and thus should be\napplied to C++20 as well).\n\nThis patch removes these diagnostics and amends the testsuite accordingly.\n\nDifferential Revision: https://reviews.llvm.org/D152946\n",
            "commit_timestamp": 1687593719.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687609138.874511,
            "elapsed_time": 7750.430412769318,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "eaaacc3c651e5b2c23bfa9648b6b0d69aab64d00",
            "commit_message": "[gn build] Port 7f6e0052a97f\n",
            "commit_timestamp": 1687604516.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687623592.214873,
            "elapsed_time": 7731.058384895325,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e0e998f8d8ec83e69fb00062fb7a515451e42d8d",
            "commit_message": "[GlobalIsel][X86]] Legalize G_CONSTANT_FOLD_BARRIER\n\nReviewed By: RKSimon\n\nDifferential Revision: https://reviews.llvm.org/D153684\n",
            "commit_timestamp": 1687619991.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687637708.117699,
            "elapsed_time": 6464.326699972153,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "08be7791e195272dca8c9ecb075aa3d86569f9f8",
            "commit_message": "[DWARF] Remove remnant .zdebug section recognition\n\nThere is a minor behavior difference that is not worth testing for the obsoleted\nformat. Previously, llvm-dwarfdump considers .zdebug_info as a debug section but\ndoes not decompress it, leading to a warning when the content cannot be parsed.\nNow llvm-dwarfdump just ignores the section without a warning.\n",
            "commit_timestamp": 1687630032.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687652576.144408,
            "elapsed_time": 7687.849219322205,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "75bd41f61d3247d4394ad0c46d23cc7c62261d63",
            "commit_message": "[mlir][polyapprox] Use llvm::numbers for constants.\n\n Fixes windows build.\n",
            "commit_timestamp": 1687651419.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687666526.170608,
            "elapsed_time": 6517.42805147171,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "3eee5aa528abd67bb6d057e25ce1980d0d38c445",
            "commit_message": "[COFF] Support -gsplit-dwarf for COFF on Windows\n\nD152340 has split WinCOFFObjectWriter to WinCOFFWriter. This patch adds\nanother WinCOFFWriter as DwoWriter to write Dwo sections to dwo file.\nDriver options are also updated accordingly to support -gsplit-dwarf in\nCL mode.\n\ne.g. $ clang-cl  -c -gdwarf -gsplit-dwarf foo.c\n\nLike what -gsplit-dwarf did in ELF, using this option will create DWARF object\n(.dwo) file. DWARF debug info is split between COFF object and DWARF object\nfile. It can reduce the executable file size especially for large project.\n\nReviewed By: skan, MaskRay\n\nDifferential Revision: https://reviews.llvm.org/D152785\n",
            "commit_timestamp": 1687665279.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687681026.283521,
            "elapsed_time": 6948.637212276459,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "3cbd56dca11f2ec4d1131152e3b3ae43ded5432e",
            "commit_message": "[RISCV] Add missing Read classes to some compressed instructions.\n\nReviewed By: wangpc\n\nDifferential Revision: https://reviews.llvm.org/D153669\n",
            "commit_timestamp": 1687679306.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687695389.473335,
            "elapsed_time": 6285.754617929459,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "54210573ae918f6e0cab59bc5955a66bc34b5f6c",
            "commit_message": "[Clang][NFC] Add feature test macro checks for C++2c\n",
            "commit_timestamp": 1687681662.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687709733.559124,
            "elapsed_time": 6193.264384269714,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "3e4820b91a3e2a43506f47478ced01a4d683b83a",
            "commit_message": "[ConstraintElim] Add uses to remark tests to make it more robust.\n\nAdd uses of conditions, so the test keeps testing what it is meant to\ntest after D153660.\n",
            "commit_timestamp": 1687708724.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687724321.410574,
            "elapsed_time": 6416.049088716507,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8f124e7302294a5f74ebc158ae1b43e09d85e83b",
            "commit_message": "Revert \"[clang-tidy] Add modernize-printf-to-std-print check\"\n\nThis reverts commit 81418ada06abbeba9fd0ea17282cce542cd07706.\n",
            "commit_timestamp": 1687722052.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687738651.292509,
            "elapsed_time": 6633.334537744522,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c3b27c236d6a495acbe2ba95c43faf9a98e81a46",
            "commit_message": "RegAllocGreedy: Fix assert with remarks on unassigned subregisters\n\nThis tried to query the physical subregister on virtual registers\nif they were left unassigned.\n",
            "commit_timestamp": 1687735585.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687753030.772678,
            "elapsed_time": 6826.981004238129,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d40dd6be00d881a13a881f02ffa10b48d1441615",
            "commit_message": "Revert \"[llvm-exegesis] Introduce SubprocessMemory Utility Class\"\n\nThis reverts commit 0b6b400b98b921279fc08c63a2a68ebfcb12a3e2.\n\nThe sporadic test failures were fixed during this land, but I forgot to\nfix the build failures on certain platforms (seems to mostly be\nAArch64/PPC) that result from them not being able to find the symbols\nfor shm_open and shm_unlink.\n",
            "commit_timestamp": 1687749343.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687782088.075065,
            "elapsed_time": 8632.520146846771,
            "x64": true,
            "actual_files_count": 1695,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f686e4bbc20a837ff5230656431aec1abbd5f872",
            "commit_message": "[Remarks] Make sure -fdiagnostics-hotness-threshold implies -fdiagnostics-show-hotness\n\nWhen asking for -fdiagnostics-hotness-threshold, we currently require\n-fdiagnostics-show-hotness otherwise we silently display nothing.\n\nI don't see a scenario where that makes sense, so have one option impy\nthe other.\n\nDifferential Revision: https://reviews.llvm.org/D153746\n",
            "commit_timestamp": 1687780090.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687796298.088528,
            "elapsed_time": 7348.413031339645,
            "x64": true,
            "actual_files_count": 1698,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "3c196f1658f3c5fd368fdaa3c2fb165ed6d7fefa",
            "commit_message": "[mlir][transform] Remove redundant handle check in `replacePayload...`\n\nDifferential Revision: https://reviews.llvm.org/D153766\n",
            "commit_timestamp": 1687795146.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687810917.632162,
            "elapsed_time": 8074.276945114136,
            "x64": true,
            "actual_files_count": 1698,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "aa2a4ce72b19e01c4322ef62d109af08a25f5e3e",
            "commit_message": "[gn] prepare for porting f8927838fa8558702794\n",
            "commit_timestamp": 1687809679.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687825207.842878,
            "elapsed_time": 6551.576022148132,
            "x64": true,
            "actual_files_count": 1698,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6ee1aba8acc1255a6eb9e34788a2376c6357458b",
            "commit_message": "[mlir][bytecode] Fix lazy loading of non-isolated regions\n\nThe bytecode reader currently assumes all regions can be lazy\nloaded, which breaks reading any non-isolated region. This patch\nfixes that by properly handling nested non-lazy regions, and only\nconsiders isolated regions as lazy.\n\nDifferential Revision: https://reviews.llvm.org/D153795",
            "commit_timestamp": 1687822400.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687839404.27819,
            "elapsed_time": 7525.287563085556,
            "x64": true,
            "actual_files_count": 1698,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ebd0b8a0472b865b7eb6e1a32af97ae31d829033",
            "commit_message": "[flang][hlfir] Special handling for temporary LHS in AssignOp.\n\nWhen `AssignOp` is used with LHS that is a compiler generated temporary\nspecial care must be taken to initialize the temporary and avoid\nfinalizations of its components. This change-set adds optional\n`temporary_lhs` attribute for `AssignOp` to convey this information\nto HLFIR-to-FIR conversion pass. Currently, this results in\ncalling `AssignTemporary` runtime for doing the assignment.\n\nReviewed By: jeanPerier, tblah\n\nDifferential Revision: https://reviews.llvm.org/D152482\n",
            "commit_timestamp": 1687829290.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687853837.14942,
            "elapsed_time": 6781.64977145195,
            "x64": true,
            "actual_files_count": 1698,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d98e44b34364f3e039c766adec470c5be517f1b4",
            "commit_message": "[AMDGPU][DAGISel] Be more flexible about what calls are allowed\n\nRemove DAGISel checks on calling conventions. GlobalISel doesn't have\nthese checks either and we prefer it that way (see D152794).\n\nAdd a simple test like the one introduced in D117479 for GlobalISel.\n\nDifferential Revision: https://reviews.llvm.org/D153535\n",
            "commit_timestamp": 1687852178.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687867906.235666,
            "elapsed_time": 4502.770094871521,
            "x64": true,
            "actual_files_count": 1698,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "268032f6f10d595bb723f6b4a21632a9f3b35be8",
            "commit_message": "[clang] Add myself as code owner for the new constant interpreter\n\nAs discussed in the RFC at\nhttps://discourse.llvm.org/t/rfc-proposing-a-code-owner-for-the-experimental-constexpr-interpreter/71514\n",
            "commit_timestamp": 1687865943.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687882588.961381,
            "elapsed_time": 5800.3620092868805,
            "x64": true,
            "actual_files_count": 1698,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d2e7d3e6adc5757b494fba273cbed1c9de7b3247",
            "commit_message": "[gn build] Port 58056ae29963\n",
            "commit_timestamp": 1687880589.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687896908.925449,
            "elapsed_time": 6017.779262065887,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d983e833dcbbad11501203c884959cca6562fd25",
            "commit_message": "[RISCV] Simplify pseudo classes used by v(f)merge [nfc]\n\nThis is mostly hand inlining multiclass definitions, and simplifying for the fact that non-default template values were never actually used.\n",
            "commit_timestamp": 1687896118.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687911632.753958,
            "elapsed_time": 7407.10235118866,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "1764924f3940a8a05b58f68cc6b7ce414f2a2f88",
            "commit_message": "[SCEV] Optimize FoldID\n\nImprove compile time\n\nhttps://llvm-compile-time-tracker.com/compare.php?from=773e5dfbc6bf4d4c5be568a039661e9baad80d15&to=7ba15f3a4b59181110e73dc397a9fe56165a2b73&stat=instructions:u\n\nReviewed By: MaskRay\n\nDifferential Revision: https://reviews.llvm.org/D144335\n",
            "commit_timestamp": 1687910374.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687925742.378196,
            "elapsed_time": 6260.137188911438,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d39b4ce3ce8a3c256e01bdec2b140777a332a633",
            "commit_message": "[test] Replace aarch64-*-eabi with aarch64\n\nUsing \"eabi\" for aarch64 targets is a common mistake and warned by Clang Driver.\nWe want to avoid it elsewhere as well. Just use the common \"aarch64\" without\nother triple components.\n",
            "commit_timestamp": 1687921372.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687940244.099363,
            "elapsed_time": 6464.04749751091,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b45a73f4d07424b37395f543974ef1ef6dec6332",
            "commit_message": "[InstCombine] Fold binop of shifts with related amounts\n\nFold\n\n  binop(shift(ShiftedC1, ShAmt), shift(ShiftedC2, add(ShAmt, AddC)))\n    ->\n  shift(binop(ShiftedC1, shift(ShiftedC2, AddC)), ShAmt)\n\nwhere both shifts are the same and AddC is a valid shift amount.\n\nProofs: https://alive2.llvm.org/ce/z/PhVVeg\n\nDifferential Revision: https://reviews.llvm.org/D152927\n",
            "commit_timestamp": 1687938876.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687954989.698389,
            "elapsed_time": 8134.085981369019,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8ceb4190fe9baa617bc65e99f0296531c88a5a79",
            "commit_message": "[clangd] Fix some typos, NFC\n",
            "commit_timestamp": 1687953921.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687969128.918379,
            "elapsed_time": 7744.278812646866,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "25b51191ff4f0377ecee1943578e59149e415eab",
            "commit_message": "[doc] Fix link typo\n",
            "commit_timestamp": 1687966061.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687983270.42784,
            "elapsed_time": 5879.851825714111,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "9c7aab362a4579d5ce26f4af2564b04720ec23a2",
            "commit_message": "[SLP] Use vector types for cmp alt instructions costs\n\nSimilar to the other code that costs main/alt instructions, the cmp should be\nusing the VecTy for the costs, not the ScalarTy.\n\nOne of the tests look like it gets worse just because it is not simplified to\n0.\n\nDifferential Revision: https://reviews.llvm.org/D153507\n",
            "commit_timestamp": 1687982549.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1687997739.887377,
            "elapsed_time": 5813.611102342606,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "36999318f09122fa41baff838f46c753db078275",
            "commit_message": "[ConstraintElim] Add tests with phis and different alloc sizes/end ptrs.\n\nExtra tests for D152730\n",
            "commit_timestamp": 1687990326.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1688012201.974327,
            "elapsed_time": 7413.733083248138,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "621fafdaad06889477515de82ed85217ce08ccc6",
            "commit_message": "[ValueTracking] Guaranteed well-defined if parameter has a dereferecable_or_null attribute\n\nReviewed By: nikic\n\nDifferential Revision: https://reviews.llvm.org/D153945\n",
            "commit_timestamp": 1688010304.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1688026696.385631,
            "elapsed_time": 7786.549655675888,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f5f5c4726ca8319af8ffff02e5b36f51f9afb9a7",
            "commit_message": "[FunctionAttrs] Regenerate test checks (NFC)\n",
            "commit_timestamp": 1688025556.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1688041352.896593,
            "elapsed_time": 8230.44091796875,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6cda80b918dd06e7d16ce7adde5304cd33fd14d1",
            "commit_message": "[CSKY][test][NFC] Add tests of ANDI/ORI\n\nThese tests will be optimized with BSETI32/BCLRI32\nin the future.\n\nReviewed By: zixuan-wu\n\nDifferential Revision: https://reviews.llvm.org/D153613\n",
            "commit_timestamp": 1688038309.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1688055445.823925,
            "elapsed_time": 6620.635809659958,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6bf66d839f1386c06e19a3621c02c8fc6a14f94f",
            "commit_message": "[clang-format] Indent Verilog struct literal on new line\n\nBefore:\n```\nc = //\n'{default: 0};\n```\n\nAfter:\n```\nc = //\n    '{default: 0};\n```\n\nIf the line has to be broken, the continuation part should be\nindented.  Before this fix, it was not the case if the continuation\npart was a struct literal.  The rule that caused the problem was added\nin 783bac6b.  It was intended for aligning the field labels in\nProtoBuf.  The type `TT_DictLiteral` was only for colons back then, so\nthe program didn't have to check whether the token was a colon when it\nwas already type `TT_DictLiteral`.  Now the type applies to more\nthings including the braces enclosing a dictionary literal.  In\nVerilog, struct literals start with a quote.  The quote is regarded as\nan identifier by the program.  So the rule for aligning the fields in\nProtoBuf applied to this situation by mistake.\n\nReviewed By: HazardyKnusperkeks\n\nDifferential Revision: https://reviews.llvm.org/D152623\n",
            "commit_timestamp": 1688053124.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688070098.048727,
            "elapsed_time": 7331.522525310516,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "9979417d4db4c2af3e2a722f8d23a385cd1cac8e",
            "commit_message": "Revert D145226 \"[mlir][Transforms][NFC] CSE: Add non-pass entry point\"\n\nThis reverts commit 189033e6bede96de0d74e61715fcd1b48d95e247.\n\nThis commit causes memory leak. See comments on D145226.\n",
            "commit_timestamp": 1688068411.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688084332.582545,
            "elapsed_time": 6967.265494585037,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ad451146e8f59de76e393094d3aafc97a854c40b",
            "commit_message": "Add 'target dump section-load-list' for lldb debugging\n\nA command to dump the Target's SectionLoadList, to debug\npossible issues with the table.\n\nDifferential Revision: https://reviews.llvm.org/D154169\n",
            "commit_timestamp": 1688083374.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688098637.209807,
            "elapsed_time": 7954.234175920486,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b4609b4106f3f12882434ac26d8c1c12f57d8dc7",
            "commit_message": "[RISCV] Mark zvkn* and zvks* extensions as enabled when all their subextensions are.\n\nThese extensions don't contain any instructions on their own, they\nare just aliases for a set of extensions. We should set the preprocessor\ndefine anytime all the sub-extensions are supported.\n\nReviewed By: kito-cheng, eopXD\n\nDifferential Revision: https://reviews.llvm.org/D154171\n",
            "commit_timestamp": 1688097535.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688113075.047026,
            "elapsed_time": 5983.555043458939,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "2feac34aeeaf67943492a5adfe45c3f4767bdfe4",
            "commit_message": "[clangd] Replace writeFileAtomically with writeToOutput, NFC\n\nWe're going to deprecate the writeFileAtomically API, in favour of\nwriteToOutput.\n",
            "commit_timestamp": 1688112162.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688127409.357732,
            "elapsed_time": 7638.3548176288605,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b23c8225e8f914d9b0fe987c443eb19fca05344e",
            "commit_message": "[mlir][NFC] Clean up builder usage around constants/non-foldable ops\n\n* Use `create` instead of `createOrFold` for constant ops. Constants cannot be folded any further.\n* Use `create` instead of `createOrFold` for ops that do not have a folder.\n* Use C++ op builders that take an `int` instead of creating a `ConstantIndexOp`.\n* Create `tensor::DimOp` instead of `linalg::createOrFoldDimOp` when it is certain that the operand is a tensor.\n\nDifferential Revision: https://reviews.llvm.org/D154196\n",
            "commit_timestamp": 1688126202.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688142115.507581,
            "elapsed_time": 8029.22966003418,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a8821c8b1ca152827cdab96fe4cb49f3c3c876a1",
            "commit_message": "[NVPTX] added a hidden option to control NVPTXLowerUnreachable pass.\n\nWe've ran into an issue where the pass breaks a handful of our internal tests\nand need a way to temporarily disable the pass while we're investigating.\n\nDifferential Revision: https://reviews.llvm.org/D154106\n",
            "commit_timestamp": 1688140343.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688156264.224324,
            "elapsed_time": 6562.714650154114,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "52a280bb60c20e12df3e1e91701f6338e03595d1",
            "commit_message": "[UBSan] Fix shared library linking in test for Darwin.\n\nWithout rpath information, the test fails on some Darwin platforms since the binary fails to find the shared library.\n\nrdar://110010041\n\nDifferential Revision: https://reviews.llvm.org/D154003\n",
            "commit_timestamp": 1688155229.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688170838.352984,
            "elapsed_time": 8017.688149690628,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b43375bb8195bd451850f42b7b99548aa1ba43fd",
            "commit_message": "[lldb] Add log indicating which kind of data formatter\n\nThe `formatter` logs include a function name, but these functions are mostly templates\nand the template type parameter is not printed, which is useful context.\n\nThis change adds a new log which is printed upon entry of `FormatManager::Get`, which\nshows the formatter context as either `format`, `summary`, or `synthetic`.\n\nDifferential Revision: https://reviews.llvm.org/D154128\n",
            "commit_timestamp": 1688169074.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688185000.398716,
            "elapsed_time": 6320.557685136795,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "afb2743778689b585ce5539ee352e65a918835e2",
            "commit_message": "[AArch64] Remove duplicate code (NFC)\n",
            "commit_timestamp": 1688179071.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688199295.995818,
            "elapsed_time": 6372.730934858322,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "dc6c8b8d1e357acf6440824afaf6b6547b34aeeb",
            "commit_message": "[LTO] Fix a missing comment\n\nAddress a missing code-review comment: https://reviews.llvm.org/D154191#inline-1490951\n",
            "commit_timestamp": 1688193225.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688213722.312472,
            "elapsed_time": 6327.637300252914,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "81ad5a5cb87740c62b30a4f8232770bd5eb7fc45",
            "commit_message": "[libc++] Implement stringbuf members of P0408R7 (Efficient Access to basic_stringbuf's Buffer)\n\nReviewed By: #libc, Mordante\n\nDifferential Revision: https://reviews.llvm.org/D153709\n",
            "commit_timestamp": 1688211788.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688228120.651715,
            "elapsed_time": 6581.002672195435,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "81ad5a5cb87740c62b30a4f8232770bd5eb7fc45",
            "commit_message": "[libc++] Implement stringbuf members of P0408R7 (Efficient Access to basic_stringbuf's Buffer)\n\nReviewed By: #libc, Mordante\n\nDifferential Revision: https://reviews.llvm.org/D153709\n",
            "commit_timestamp": 1688211788.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688242620.149763,
            "elapsed_time": 6335.010083436966,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d0b0dbeae17756f7ba99e0867cfb867fcb375066",
            "commit_message": "[msan] Intercept dladdr1, and refactor dladdr\n\nThis patch adds an msan interceptor for dladdr1 (with support\nfor RTLD_DL_LINKMAP and RTLD_DL_SYMENT) and an accompanying\ntest. It also adds a helper file, msan_dl.cpp, that contains\nUnpoisonDllAddrInfo (refactored out of the dladdr interceptor)\nand UnpoisonDllAddr1ExtraInfo.\n\nDifferential Revision: https://reviews.llvm.org/D154272\n",
            "commit_timestamp": 1688239107.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688257031.240547,
            "elapsed_time": 6191.982011318207,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6e54fccede402c9ed0e8038aa258a99c5a2773e5",
            "commit_message": "[AArch64] Emit fewer CFI instructions for synchronous unwind tables\n\nThe instruction-precise, or asynchronous, unwind tables usually take up\nmuch more space than the synchronous ones. If a user is concerned about\nthe load size of the program and does not need the features provided\nwith the asynchronous tables, the compiler should be able to generate\nthe more compact variant.\n\nThis patch changes the generation of CFI instructions for these cases so\nthat they all come in one chunk in the prolog; it emits only one\n`.cfi_def_cfa*` instruction followed by `.cfi_offset` ones after all\nstack adjustments and register spills, and avoids generating CFI\ninstructions in the epilog(s) as well as any other exceeding CFI\ninstructions like `.cfi_remember_state` and `.cfi_restore_state`.\nEffectively, it reverses the effects of D111411 and D114545 on functions\nwith the `uwtable(sync)` attribute. As a side effect, it also restores\nthe behavior on functions that have neither `uwtable` nor `nounwind`\nattributes.\n\nDifferential Revision: https://reviews.llvm.org/D153098\n",
            "commit_timestamp": 1688254269.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688271535.635651,
            "elapsed_time": 7150.657102584839,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "289828b1c0a6bc6eed8a634376a5152adae2283b",
            "commit_message": "[Driver][MSVC] Move lld specific flags before inputs\n\nCheck linker earlier so that lld specific flags can be append before\ninputs. Just like position of other flags. The intention is to make\nexpanded cmd more consistent and elegent so that user can easily\nlook for inputs when using -###.\n\nReviewed By: mstorsjo\n\nDifferential Revision: https://reviews.llvm.org/D154176\n",
            "commit_timestamp": 1688261349.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688285684.711378,
            "elapsed_time": 5831.0139067173,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ff286d7178db7dfcd92724cf87dd8554213e9f23",
            "commit_message": "[llvm][NFC] Stop plenking in an assertion message\n\nRemove whitespace before an exclamation mark.\n",
            "commit_timestamp": 1688275328.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688300213.220981,
            "elapsed_time": 6141.699929714203,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8269fd2db50bf97ae3b6e928365d157314e491c8",
            "commit_message": "[GlobalIsel][X86] Add initial scalar G_MUL/G_SMULH/G_UMULH instruction selection handling\n\nReuse the existing div/rem selection code to also handle mul/imul to support G_MUL/G_SMULH/G_UMULH, as they have a similar pattern using rDX/rAX for mulh/mul results, plus the AH/AL support for i8 multiplies.\n",
            "commit_timestamp": 1688299001.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688314810.364401,
            "elapsed_time": 7333.303974866867,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8bdcf57e60f508b11b519722ae9529a5301bb567",
            "commit_message": "Revert \"[MC] Allow conversion between ParseStatus and MatchOperandResultTy\"\n\nThis reverts commit 15ef9b26adeb8c9dd98228fc26757966d8355986.\n\nGoing to put it for review with larger set of differences.\n",
            "commit_timestamp": 1688312400.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688329012.235614,
            "elapsed_time": 6334.782678365707,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7b69eabdc18799e4a6c61b7ffff9b52d330c6ada",
            "commit_message": "[C11] Correct global atomic pointer initialization from an integer constant\n\nThis is a follow-up to 2e275e24355cb224981f9beb2b026a3169fc7232 and\n1395cde24b3641e284bb1daae7d56c189a2635e3 which corrects a missed case:\ninitializing an _Atomic(T *) from a null pointer constant in the form\nof the integer literal 0.\n\nFixes https://github.com/llvm/llvm-project/issues/63550\nDifferential Revision: https://reviews.llvm.org/D154284\n",
            "commit_timestamp": 1688323281.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688343585.882238,
            "elapsed_time": 7729.164016962051,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "38785647121cef0adde4d3adbe5c5fe21b83d32b",
            "commit_message": "[mlir] Use reinterpret cast to construct TypedValue from a pointer\n\nValue is not convertible to TypedValue<T>, use explicit constructor from a pointer\n\nDifferential Revision: https://reviews.llvm.org/D154313\n",
            "commit_timestamp": 1688339880.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688358025.978901,
            "elapsed_time": 6763.833055973053,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "9bdf04c8f9d40d0aa4cbaf011b1877d88dc6dbc6",
            "commit_message": "[Coroutines] Prevent infinite loop in simplifyTerminatorLeadingToRet\n\nClose https://github.com/llvm/llvm-project/issues/63639\n\nThis comes from the oversight the refactoring that we missed a `return\nfalse;` in the loop.\n",
            "commit_timestamp": 1688352038.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688372178.044164,
            "elapsed_time": 6046.56241607666,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "653920cb158bf895cdb0b32098a105f26007290a",
            "commit_message": "[Tooling][Rewriter] Remove the redundant AtomicallyMovedFile Implementation.\n\nReplace it with llvm::writeToOutput.\n\nReviewed By: avl\n\nDifferential Revision: https://reviews.llvm.org/D153741\n",
            "commit_timestamp": 1688369891.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688386560.147744,
            "elapsed_time": 5613.50511431694,
            "x64": true,
            "actual_files_count": 1700,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "783222efded0ac5f7d76ea41ec03eb2bf83ff918",
            "commit_message": "[flang] Fix codegen of subcomponents' indexing\n\nIdentify multidimensional array indices in subcomponents and\nconvert them from column-major to row-major ordering.\n\nThis fixes codegen for fircg.ext_array_coor, fircg.ext_embox and,\npossibly, fircg.ext_rebox.\n\nFixes https://github.com/llvm/llvm-project/issues/62038\n\nReviewed By: jeanPerier\n\nDifferential Revision: https://reviews.llvm.org/D154214\n",
            "commit_timestamp": 1688385593.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688401038.642215,
            "elapsed_time": 6207.0449655056,
            "x64": true,
            "actual_files_count": 1701,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "aa82b562b7b4b36f4a3d04e80e5743028bddd577",
            "commit_message": "[CodeGen] MRI call back in TargetMachine\n\nIt is needed for target specific initializatons.\n\nReviewed By: qcolombet\n\nDifferential Revision: https://reviews.llvm.org/D143758\n",
            "commit_timestamp": 1688399977.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688415508.833224,
            "elapsed_time": 6963.9703278541565,
            "x64": true,
            "actual_files_count": 1701,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b288e668626bed43662669acb578fe05b14a355a",
            "commit_message": "[Polly][FIX] Adjust enum after D153305\n",
            "commit_timestamp": 1688413768.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688429949.508097,
            "elapsed_time": 6156.2783052921295,
            "x64": true,
            "actual_files_count": 1701,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "cff99b76ac4f502ceba897a62db658667f1237f3",
            "commit_message": "Add a flag to disable \"duplicate definition of category\" warnings\n\nDifferential Revision: https://reviews.llvm.org/D154251\n",
            "commit_timestamp": 1688426722.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688444384.651923,
            "elapsed_time": 8002.557789325714,
            "x64": true,
            "actual_files_count": 1701,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7aebe4eaaa10155dc3c36196a8ce8424beefa6da",
            "commit_message": "[CodeGen] Move lowerCopy from expandPostRA to TII\n\nThis will allow targets to lower their 'copy' instructions easily.\n\nReviewed By: arsenm\n\nDifferential Revision: https://reviews.llvm.org/D152261\n",
            "commit_timestamp": 1688441689.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688458874.340116,
            "elapsed_time": 7956.613182544708,
            "x64": true,
            "actual_files_count": 1701,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "14d073b50f960674a62ef8ad2c34f6fc1e9b0061",
            "commit_message": "Revert \"[mlir][transform] Allow arbitrary indices to be scalable\"\n\nThis reverts commit 048764f23a380fd6f8cc562a0008dcc6095fb594.\n\nBreaks https://lab.llvm.org/buildbot/#/builders/61/builds/45451\n",
            "commit_timestamp": 1688456452.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688473048.090572,
            "elapsed_time": 7568.164654970169,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f8e59b09f42ccc4d386b0563fc89807e4d5b35a2",
            "commit_message": "[mlir][arith] Move getNeutralElement from Linalg utils to arith\n\nThis consolidates where this kind of implementations lives and\nrefactor the code to have more code sharing.\n\nNFC\n\nDifferential Revision: https://reviews.llvm.org/D154362\n",
            "commit_timestamp": 1688471988.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688487524.993975,
            "elapsed_time": 7682.072260141373,
            "x64": true,
            "actual_files_count": 1701,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0d40973644ba7f3efe666735306646579a7ffe5e",
            "commit_message": "[clang][Interp][NFC] Move CastFP to Interp.h\n\nIt's not a Check* function, so try to stay consistent and move this to\nthe header.\n",
            "commit_timestamp": 1688484928.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688502038.666828,
            "elapsed_time": 8845.028197050095,
            "x64": true,
            "actual_files_count": 1701,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b4b532a9562a1ebca347edc566363fba0531115b",
            "commit_message": "[RISCV] Replace OperandMatchResultTy with ParseStatus (NFC)\n\nParseStatus is slightly more convenient to use due to implicit\nconversion from bool, which allows to do something like:\n```\n  return Error(L, \"msg\");\n```\nwhen with MatchOperandResultTy it had to be:\n```\n  Error(L, \"msg\");\n  return MatchOperand_ParseFail;\n```\nIt also has more appropriate name since parse* methods are not only for\nparsing operands.\n\nReviewed By: asb\n\nDifferential Revision: https://reviews.llvm.org/D154291\n",
            "commit_timestamp": 1688499142.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688516153.899831,
            "elapsed_time": 6317.9965279102325,
            "x64": true,
            "actual_files_count": 1701,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f171c76b68ef465bf49a0f193feb9e43c819b859",
            "commit_message": "[ASanAbi][Darwin] Build ios stable ABI library\n\nIn the initially commit, we limited the static archive to osx.\n\nThis patch removes that limitation.\n\nDifferential Revision: https://reviews.llvm.org/D153789\n",
            "commit_timestamp": 1688506379.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688530525.787701,
            "elapsed_time": 5928.398044586182,
            "x64": true,
            "actual_files_count": 1701,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b89b3cdb612f43e91c7330a13c3f60a1ad251e50",
            "commit_message": "[mlir][TestDialect] Fix invalid custom op printers\n\nThis fixes a few custom printers which were printing IR that couldn't be\nround-tripped.\n\nReviewed By: rriddle\n\nDifferential Revision: https://reviews.llvm.org/D150080\n",
            "commit_timestamp": 1688527780.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688545061.58118,
            "elapsed_time": 7039.4704349040985,
            "x64": true,
            "actual_files_count": 1701,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "dacbf4a7094a72e7651737ac1f137b03b5d5b2d8",
            "commit_message": "[llvm][TableGen][Jupyter] Note an easily encountered error\n\nWhen using VSCode it'll default to the Python kernel the first\ntime you open the notebook. Mention this in the readme, as the fix\nis simple but only if you know what to look for.\n",
            "commit_timestamp": 1688543998.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688559482.576622,
            "elapsed_time": 6872.875727415085,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8a3fdf7b908978625e9a7e57fbb443e4e6f98976",
            "commit_message": "[UTC] Add fallback support for specific metadata, and check their defs\n\nThis prevents update_cc_tests.py from emitting hard-coded identifiers\nfor metadata (global variable checkers still check hard-coded\nidentifiers). Instead it emits regex checkers that match even if the\nidentifiers change. Also adds a new mode for --check-globals: instead of\nsimply being on or off, it now has the options 'none', 'smart' and\n'all', with 'none' and 'all' corresponding to the previous modes.\n\nThe 'smart' mode only emits checks for global definitions referenced\nin the IR or other metadata that itself has a definition checker\nemitted, making the rule transitive. It does not emit checks for\nattribute sets, since that is better checked by --check-attributes. This\nmode is made the new default. To make the change in default mode\nbackwards compatible a version bump is introduced (to v3), and the\ndefault remains 'none' in v1 & v2.\n\nThis will result in metadata checks being emitted more often, so filters\nare added to not check absolute file paths and compiler version git\nhashes.\n\nrdar://105239218\n",
            "commit_timestamp": 1688558690.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688573826.890743,
            "elapsed_time": 6889.063606500626,
            "x64": true,
            "actual_files_count": 1701,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "20f99278dbb81e880c23c65688e9752ce7ad019a",
            "commit_message": "[lldb][NFCI] Deprecate SBValue::GetOpaqueType\n\nThis method, as far as I can ascertain, is non-trivial to actually use\nto work with (if not impossible). It doesn't make sense to use from\nPython and you do not have access to the accompanying TypeSystem, so it\ndoesn't really do anything useful.\n\nA possible follow-up is to gut the implementation and have it return `nullptr`.\n\nDifferential Revision: https://reviews.llvm.org/D153918\n",
            "commit_timestamp": 1688572352.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688588427.61695,
            "elapsed_time": 7474.421847581863,
            "x64": true,
            "actual_files_count": 1701,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4b5ca175431c559a91ffd40333a0fae9e8ac424c",
            "commit_message": "Remove unused test file\n\npth.h hasn't been used since we removed support for PTH in\n0a6b5b653ee47234674614fecc213c1d73bb1e28\n",
            "commit_timestamp": 1688587162.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688602600.780591,
            "elapsed_time": 5918.9885160923,
            "x64": true,
            "actual_files_count": 1701,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "3ff080b53b0a7f5bccfabd11254e255669892a67",
            "commit_message": "[Sanitizers][Darwin][Test] Mark symbolize_pc test unsupported in Darwin/LSan context\n\nLSan is unsupported on Darwin anyway, and this test fals on public Darwin bots\n\nDifferential Revision: https://reviews.llvm.org/D154389\n",
            "commit_timestamp": 1688601260.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688617206.871191,
            "elapsed_time": 7591.9172286987305,
            "x64": true,
            "actual_files_count": 1701,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "9e7a052eef285fceda8eda818993e7c860fa6888",
            "commit_message": "[XRay][AArch64] Implement __xray_ArgLoggerEntry\n",
            "commit_timestamp": 1688615760.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688631555.714789,
            "elapsed_time": 6929.079988718033,
            "x64": true,
            "actual_files_count": 1701,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7c9230c4f2ad267c716520fb25c4037acd2204fd",
            "commit_message": "[RISCV] Add trunc instruction to the __builtin_riscv_ctz_64/__builtin_riscv_clz_64 IR.\n\nThese builtins were recently changed to return 'int' like the\nsimilar __builtin_clz/__builtin_ctz builtins, but the IR generation\nwas not updated to use a truncate.\n",
            "commit_timestamp": 1688630116.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688645673.277379,
            "elapsed_time": 5714.820197105408,
            "x64": true,
            "actual_files_count": 1701,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "626c789d92bc917e7db30478e9b6d4c9b567ee17",
            "commit_message": "Fix compile error in UnresolvedSetTest.cpp, hopefully the last one\n\nThis test is failing to compile when LLVM_ENABLE_MODULES=ON due to\nNamedDecl being multiply defined. Fix this by avoiding declaring our\nown NamedDecl in the test and instead cast a struct of appropriate\nsize and alignment to NamedDecl.\n",
            "commit_timestamp": 1688640885.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688660317.947476,
            "elapsed_time": 7575.390125989914,
            "x64": true,
            "actual_files_count": 1701,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6685fd82391d3e654d3b05f2d54cdcdec6e6d887",
            "commit_message": "[mlir] Add support for TF32 as a Builtin FloatType\n\nThis diff adds support for TF32 as a Builtin floating point type. This\nsupplements the recent addition of the TF32 semantic to the LLVM APFloat class\nby extending usage to MLIR.\n\nhttps://reviews.llvm.org/D151923\n\nMore information on the TF32 type can be found here:\n\nhttps://blogs.nvidia.com/blog/2020/05/14/tensorfloat-32-precision-format/\n\nReviewed By: jpienaar\n\nDifferential Revision: https://reviews.llvm.org/D153705\n",
            "commit_timestamp": 1688658967.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688674506.087814,
            "elapsed_time": 6179.562292337418,
            "x64": true,
            "actual_files_count": 1701,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a9f5119a78aaa1fc63347a89aee50922bbb8c99c",
            "commit_message": "[DebugInfo] Enable debug info emission for extern variables in C++\n\nDebug info emission for extern variables in C++ was previously disabled\nwhen the functionality was added in https://reviews.llvm.org/D71818 and\noriginally in https://reviews.llvm.org/D70696, because there was no use\ncase. We are enabling it now, as we start to deploy BPF programs\ncompiled from C++, leveraging C++ features like templates to reduce code\ncomplexity. This patch is required so that we can still use kconfig in\nsuch BPF programs compiled from C++.\n\nReviewed By: rnk, dblaikie, MaskRay, yonghong-song\n\nDifferential Revision: https://reviews.llvm.org/D153898\n",
            "commit_timestamp": 1688673545.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688688968.941419,
            "elapsed_time": 6525.278360843658,
            "x64": true,
            "actual_files_count": 1701,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8ea586b82e49c18a73e2b855c7d32fc85e4394a5",
            "commit_message": "[BOLT][DWARF] Fix references in tests\n\nFixed invalid assembly, where references were not correct.\n\nReviewed By: rafauler\n\nDifferential Revision: https://reviews.llvm.org/D154667\n",
            "commit_timestamp": 1688687169.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688703550.115618,
            "elapsed_time": 7365.3291451931,
            "x64": true,
            "actual_files_count": 1701,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "1614805eeb15204874e2c85ae351369ca0baf944",
            "commit_message": "Register new assumption in a cache\n\nWhen new assumption is created it should be registered in assumption cache\nor cache should be invalidated.\n\nReviewed By: nikic\nDifferential Revision: https://reviews.llvm.org/D154601\n",
            "commit_timestamp": 1688701983.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688718001.956995,
            "elapsed_time": 7617.289110660553,
            "x64": true,
            "actual_files_count": 1701,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "336d7281ad61fbd4a14fa2ef3d2bde5a63d10417",
            "commit_message": "[InstCombine] Preserve inbounds when folding select of GEP\n\nThe select base, (gep base, offset) to gep base, select (0, offset)\nfold used to drop inbounds, because the gep base, 0 this introduces\nmight not be inbounds. After the semantics change in D154051, such\na GEP is always considered inbounds, in which allows us to preserve\nthe flag here.\n\nAs the PhaseOrdering test demonstrates, this can result in major\noptimization improvements in some cases.\n\nDifferential Revision: https://reviews.llvm.org/D154055\n",
            "commit_timestamp": 1688716593.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688732267.288968,
            "elapsed_time": 7499.829288482666,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d679c904c2d79a939ead994242a282d95ae0bb58",
            "commit_message": "[OpenMP][OMPT] Rename callback master to masked in ompt-multiplex.h\n\nOpenMP 5.1 replaced callback ompt_callback_master_t by\nompt_callback_masked_t. In order to stick to the standard,\nthe implementation is updated accordingly.\n\nPatch prepared by Semih Burak\n\nDifferential Revision: https://reviews.llvm.org/D112798\n",
            "commit_timestamp": 1688731300.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688746571.657813,
            "elapsed_time": 5810.4728899002075,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6f90808074c4241775e111d8aca61889b10d8d0a",
            "commit_message": "[RISCV] Add a guard condition to orc_b/brev8 handling in ReplaceNodeResults.\n\nThe orc_b and brev8 intrinsics are type overloaded, but only\ni32 and XLen are supported types. The type legalization code in\nReplaceNodeResults only handles the i32 case on RV64. Add some\nchecks so we will fail type legalization for other types.\n",
            "commit_timestamp": 1688745106.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688760676.567931,
            "elapsed_time": 4384.7653465271,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "399eb5632f4ad201bfe4f0bbe1f8ce302c711726",
            "commit_message": "[scudo] Explicit casting for u16 arithmetic operation\n\nThis fixes the werror from https://lab.llvm.org/buildbot/#/builders/165/builds/38829\n\nReviewed By: enh\n\nDifferential Revision: https://reviews.llvm.org/D154733\n",
            "commit_timestamp": 1688759882.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688775571.812514,
            "elapsed_time": 7105.538609027863,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "1575063db259dc601d25b29cfb573505bd82f51f",
            "commit_message": "[RISCV] Match shl_vl (ext_vl v, splat 1) to vwadd_vl\n\nSimiler to: D153112, match shl (v, splat 1) to vwadd\n\nReviewed By: craig.topper\n\nDifferential Revision: https://reviews.llvm.org/D154726\n",
            "commit_timestamp": 1688774595.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688789815.828148,
            "elapsed_time": 6459.434271335602,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "1e02158666e0be2b1b5facf07842f9c15bf347b1",
            "commit_message": "[libc++] Implement LWG3843 (std::expected<T,E>::value() & assumes E is copy constructible)\n\nImplement LWG3843 (std::expected<T,E>::value() & assumes E is copy constructible)\nhttps://wg21.link/LWG3843\n\nReviewed By: #libc, ldionne\n\nDifferential Revision: https://reviews.llvm.org/D154110\n",
            "commit_timestamp": 1688788620.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688804106.142708,
            "elapsed_time": 6693.783696889877,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "681cb54a54bb60dea9034b4b0b45ccc392875b9a",
            "commit_message": "[Driver] Fix duplicate -L after D150013\n\nD150013 is to render -L for AMDGPU but updating tools::AddLinkerInputs is wrong\nand causes many non-isCrossCompiling targets to have duplicate -L options\nbecause they do `Args.AddAllArgs(CmdArgs, options::OPT_L);`.\n\nRevert the change and add a `Args.AddAllArgs(CmdArgs, options::OPT_L);` instead.\n",
            "commit_timestamp": 1688799465.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688818359.791165,
            "elapsed_time": 4680.011758565903,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "cf6b3315f22acaef99dd2b99dc7a47c6231ed294",
            "commit_message": "libcxx: Bring back unsigned return from wcstoull_l\n\nGot removed here:\n21d9282ae2b6e1e7dfbabfd87f6208c3bdff8ea4#diff-e41832b8aa26da45585a57c5111531f2e1d07e91a67c4f8bf1cd6d566ae45a2bR40\n\nReviewed By: #libc, philnik\n\nDifferential Revision: https://reviews.llvm.org/D148056\n",
            "commit_timestamp": 1688817270.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688832945.988161,
            "elapsed_time": 6242.917968988419,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "820be30ad96591de2d7e651b3ec9cc0253ca6344",
            "commit_message": "[OpenMP][OMPT] Introduce VERBOSE_INIT in ompt-multiplex.h\n\nOpenMP 5.1 added OMP_TOOL_VERBOSE_INIT. This env variable is\nextremely helpful to understand the issue when loading a tool fails\nunexpectedly (e.g., errors from dlopen, when the libc available at\nruntime is older than libc used at compile time of the tool -> missed\nto load the right gcc module).\n\nThis patch replicates the verbose init code from libomp watching\nout for a different env variable. Similar to\nCLIENT_TOOL_LIBRARIES_VAR, a tool can define the name of\nthe env var by defining CLIENT_TOOL_VERBOSE_INIT_VAR\nbefore including ompt-multiplex.h.\nAlternatively, a tool can define OMPT_MULTIPLEX_TOOL_NAME\nto specify the tool name which will be the prefix for both\n_TOOL_LIBRARIES and _VERBOSE_INIT var.\nFinally, if none of the two macros is defined, the header will\nprint a compiler warning and look at OMP_TOOL_VERBOSE_INIT.\n\nPatch prepared by Semih Burak\n\nDifferential Revision: https://reviews.llvm.org/D112809\n",
            "commit_timestamp": 1688828997.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688847446.477086,
            "elapsed_time": 6583.940421104431,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "3f370a2af59f83134cf1de405358506be9280251",
            "commit_message": "[test] Add more instantiation cases to visibility.cpp\n",
            "commit_timestamp": 1688844649.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688861878.243973,
            "elapsed_time": 6411.0070424079895,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "9e362e5e3fe0b7f85160c3a06e9c646e1c75e8e0",
            "commit_message": "Fix -Wunused-vairable on release build, NFC\n",
            "commit_timestamp": 1688849823.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688876253.455554,
            "elapsed_time": 7757.828397274017,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "643b7bcdb40433958e7c7022278748b77fe038c4",
            "commit_message": "[libc++] Fix simple cases of locale name construction\n\nWhen using the following constructors:\n\n```\nlocale(const locale& other, const char* std_name, category cat);\nlocale(const locale& other, const string& std_name, category cat);\nlocale(const locale& other, const locale& one, category cats);\n```\nThe new locale name is always \"*\". Locale names formed from parts of two named locales (that is, C++ locales having names) are supposed to have names in turn (see C++20 subclause 28.3.1.1 [locale.general] paragraph 8). This patch fixes the name construction for cases when either of locales are unnamed, when the category is locale::none, and when the two locale names are the same.\n\nReviewed By: #libc, ldionne\n\nDifferential Revision: https://reviews.llvm.org/D119441\n",
            "commit_timestamp": 1688868176.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688890542.32087,
            "elapsed_time": 6356.569326877594,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "dbaa5838c13e5593b9de37b8f3daffe4cb914a17",
            "commit_message": "[libc][NFC] Move memfunction's byte per byte implementations to a separate header\n\nThere will be subsequent patches to move things around and make the file layout more principled.\n\nDifferential Revision: https://reviews.llvm.org/D154770\n",
            "commit_timestamp": 1688887318.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688905011.91138,
            "elapsed_time": 6333.9233729839325,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "758c4640c95cbfec78fda4132aa5335dd54b1813",
            "commit_message": "[CGP] Enable CodeGenPrepares phi type convertion.\n\nThis is a recommit of 67121d7, enabling the CodeGenPrepare OptimizePhiTypes\noption that can help with the type of phi instructions into ISel.\n",
            "commit_timestamp": 1688895131.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688919296.550504,
            "elapsed_time": 6308.422134637833,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b4e09c0dea866e48be83eae8c2f269162f6f04e0",
            "commit_message": "[RISCV] Update test case riscv-attr-builtin-alias.c (NFC)\n",
            "commit_timestamp": 1688917319.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688933913.129764,
            "elapsed_time": 7845.574423313141,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "9ec5dc6944781b0c233e874a4ed8d12106df14ac",
            "commit_message": "[clang-format] Add note directive generation for docs\n\nGenerate a ..note:: directive when the \\note is encountered in Format.h.\n\nDifferential Revision: https://reviews.llvm.org/D154552\n",
            "commit_timestamp": 1688930695.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688948333.404336,
            "elapsed_time": 7159.326214551926,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ba7cc56782dbf4a26c0a043dd33c7949366e2b0d",
            "commit_message": "[Attributor] Port AANoRecurse to the isImpliedByIR interface\n",
            "commit_timestamp": 1688943862.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688962707.818502,
            "elapsed_time": 6850.925667285919,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "df38792efbdf8947bbf733ef81f183c0a11ffc97",
            "commit_message": "[Attributor][FIX] Add missing check lines for test\n",
            "commit_timestamp": 1688960544.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688976927.143052,
            "elapsed_time": 6322.35412979126,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "3a80bdb3169192361a6113397d9967a880de44bd",
            "commit_message": "[GlobalISel] Remove an erroneous oneuse check in the G_ADD reassociation combine.\n\nThis check was unnecessary/incorrect, it was already being done by the target\nhook default implementation, and the one in the matcher was checking for a\ncompletely different thing. This change:\n 1) Removes the check and updates affected tests which now do some more reassociations.\n 2) Modifies the AMDGPU hooks which were stubbed with \"return true\" to also do the oneuse\n    check. Not sure why I didn't do this the first time.\n",
            "commit_timestamp": 1688976192.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1688991487.443942,
            "elapsed_time": 7480.508595705032,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4c6f95be29c6ce0f89663a5103c58ee63d76cda3",
            "commit_message": "Revert \"[IRCE] Parse range checks in the form of 'LHS - RHS vs Limit'\"\n\nThis reverts commit e16c5c092205f68825466c25a1dd30783c4820f3.\n\nRevert due to Buildbot failure https://lab.llvm.org/buildbot/#/builders/193\n",
            "commit_timestamp": 1688990362.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689006021.031185,
            "elapsed_time": 7490.137391805649,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "86943d863ef66d68bf79d3e2f0ec2c205814b235",
            "commit_message": "Formula.h - fix MSVC \"'clang::dataflow::Formula::numOperands': not all control paths return a value\". NFC.\n",
            "commit_timestamp": 1689004552.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689020184.394861,
            "elapsed_time": 5903.085319280624,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a042a6502c17fe9a29be191298ca76d2c5394fc8",
            "commit_message": "[mlir] Add a parameter for passing default values to `StringRefParameter`\n\n**For an explanation of these patches see D154153.**\n\nCommit message:\nCurrently the `StringRefParameter` parameter doesn't support default values,\nthis patch allows the usage of them, eg:\n`StringRefParameter<\"description\", [{\"default_value\"}]>`\n\nReviewed By: mehdi_amini\n\nDifferential Revision: https://reviews.llvm.org/D154097\n",
            "commit_timestamp": 1689019316.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689034506.672326,
            "elapsed_time": 4865.596316337585,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b4a82b62258c5f650a1cccf5b179933e6bae4867",
            "commit_message": "[MemProf] Use new option/pass for profile feedback and matching\n\nPreviously the MemProf profile was expected to be in the same profile\nfile as a normal PGO profile, passed via the usual -fprofile-use=\noption, and was matched in the same pass. To simplify profile\npreparation, since the raw MemProf profile requires the binary for\nsymbolization and may be simpler to index separately from the raw PGO\nprofile, and also to enable providing a MemProf profile for a SamplePGO\nbuild, separate out the MemProf feedback option and matching pass.\n\nThis patch adds the -fmemory-profile-use=${file} option, and the\nprovided file is passed down to LLVM and ultimately used in a new\nMemProfUsePass which performs the matching of just the memory profile\ncontents of that file.\n\nNote that a single profile file containing both normal PGO and MemProf\nprofile data is still supported, and the relevant profile data is\nmatched by the appropriate matching pass(es) based on which option(s)\nthe profile is provided with (the same profile file can be supplied to\nboth feedback options).\n\nDifferential Revision: https://reviews.llvm.org/D154856\n",
            "commit_timestamp": 1689032576.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689049073.626749,
            "elapsed_time": 7896.6736080646515,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "abe9ae6d414e2b729f320626245e03b8bbde6143",
            "commit_message": "[TableGen] Extract functions to resolve arguments [nfc]\n\nThe code to resolve class/multiclass arguments are similar, we\nextract them to `resolveArguments`s to simplify code.\n\nReviewed By: tra, reames\n\nDifferential Revision: https://reviews.llvm.org/D154065\n",
            "commit_timestamp": 1689046071.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689063269.095461,
            "elapsed_time": 5830.184913158417,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7b72920af63d86242fa4a92ffa40d24d4c98f754",
            "commit_message": "[BOLT] Fix warning message\n\nAdd missing EOL in a warning message.\n\nReviewed By: rafauler\n\nDifferential Revision: https://reviews.llvm.org/D154895\n",
            "commit_timestamp": 1689062408.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689077912.820856,
            "elapsed_time": 7852.686666250229,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "142faf56f50054adf088e86993121fee381b6c60",
            "commit_message": "[OpenMP] [OMPT] [amdgpu] [5/8] Implemented device init/fini/load callbacks\n\nAdded support in the generic plugin to invoke registered callbacks.\n\nDepends on D124070\n\nPatch from John Mellor-Crummey <johnmc@rice.edu>\n(With contributions from Dhruva Chakrabarti <Dhruva.Chakrabarti@amd.com>)\n\nDifferential Revision: https://reviews.llvm.org/D124652\n",
            "commit_timestamp": 1689074002.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689092171.492652,
            "elapsed_time": 6413.374578475952,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "425c57489283adcaa28e916c5b1c2826e7a0e042",
            "commit_message": "[flang][openacc] Support ieor reduction operator\n\nAdd support for `ieor` reduction operator in\nOpenACC lowering.\n\nDepends on D154887\n\nReviewed By: razvanlupusoru\n\nDifferential Revision: https://reviews.llvm.org/D154888\n",
            "commit_timestamp": 1689091116.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689106490.364802,
            "elapsed_time": 6099.996742010117,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4a63264daa5b68210f83c97705db5dc4cf227638",
            "commit_message": "[flang] Use fir.type_desc in nullify\n\nDo not look for the global early in nullify codegen. The type descriptor\ncan be emitted later and it would raise an error as it could not be found.\nUse `fir.type_desc` instead so it delays the type descriptor lookup until\nevrything is emitted.\n\nhttps://github.com/llvm/llvm-project/issues/63775\n\nReviewed By: vzakhari\n\nDifferential Revision: https://reviews.llvm.org/D154982\n",
            "commit_timestamp": 1689104513.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689120952.807688,
            "elapsed_time": 6338.579768419266,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b10899d869954e1426684cbc20a43d7303075d49",
            "commit_message": "[clang] Fix -Wlogical-op-parentheses in Clang.cpp (NFC)\n\n/Users/jiefu/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:7345:56: error: '&&' within '||' [-Werror,-Wlogical-op-parentheses]\n      (WholeProgramVTables || SanitizeArgs.needsLTO()) &&\n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~\n/Users/jiefu/llvm-project/clang/lib/Driver/ToolChains/Clang.cpp:7345:56: note: place parentheses around the '&&' expression to silence this warning\n      (WholeProgramVTables || SanitizeArgs.needsLTO()) &&\n                                                       ^\n      (\n1 error generated.\n",
            "commit_timestamp": 1689119630.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689135402.724436,
            "elapsed_time": 6821.248302221298,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5b6b2caf3c6ec3cdf5565f935263361fbb2013cd",
            "commit_message": "[mlir][vector] Handle memory space conflicts in VectorTransferSplit patterns\n\nCurrently the transfer splitting patterns will generate an invalid cast\nwhen the source memref for a transfer op has a non-default memory space.\nThis is handled by first introducing a `memref.memory_space_cast` in\nsuch cases.\n\nDifferential Revision: https://reviews.llvm.org/D154515\n",
            "commit_timestamp": 1689130703.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689149843.450252,
            "elapsed_time": 7962.315145254135,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6d9fcc2ad874e4ee9b94eef4b85ffece18e501b1",
            "commit_message": "[clang][clangd] Don't crash/assert on -gsplit-dwarf=single without output\n\nThe crash happens in clang::driver::tools::SplitDebugName when Output is\nInputInfo::Nothing. It doesn't happen with standalone clang driver because\noutput is created in Driver::BuildJobsForActionNoCache.\n\nExample backtrace:\n```\n* thread #1, name = 'clangd', stop reason = hit program assert\n  * frame #0: 0x00007ffff5c4eacf libc.so.6`raise + 271\n    frame #1: 0x00007ffff5c21ea5 libc.so.6`abort + 295\n    frame #2: 0x00007ffff5c21d79 libc.so.6`__assert_fail_base.cold.0 + 15\n    frame #3: 0x00007ffff5c47426 libc.so.6`__assert_fail + 70\n    frame #4: 0x000055555dc0923c clangd`clang::driver::InputInfo::getFilename(this=0x00007fffffff9398) const at InputInfo.h:84:5\n    frame #5: 0x000055555dcd0d8d clangd`clang::driver::tools::SplitDebugName(JA=0x000055555f6c6a50, Args=0x000055555f6d0b80, Input=0x00007fffffff9678, Output=0x00007fffffff9398) at CommonArgs.cpp:1275:40\n    frame #6: 0x000055555dc955a5 clangd`clang::driver::tools::Clang::ConstructJob(this=0x000055555f6c69d0, C=0x000055555f6c64a0, JA=0x000055555f6c6a50, Output=0x00007fffffff9398, Inputs=0x00007fffffff9668, Args=0x000055555f6d0b80, LinkingOutput=0x0000000000000000) const at Clang.cpp:5690:33\n    frame #7: 0x000055555dbf6b54 clangd`clang::driver::Driver::BuildJobsForActionNoCache(this=0x00007fffffffb5e0, C=0x000055555f6c64a0, A=0x000055555f6c6a50, TC=0x000055555f6c4be0, BoundArch=(Data = 0x0000000000000000, Length = 0), AtTopLevel=true, MultipleArchs=false, LinkingOutput=0x0000000000000000, CachedResults=size=1, TargetDeviceOffloadKind=OFK_None) const at Driver.cpp:5618:10\n    frame #8: 0x000055555dbf4ef0 clangd`clang::driver::Driver::BuildJobsForAction(this=0x00007fffffffb5e0, C=0x000055555f6c64a0, A=0x000055555f6c6a50, TC=0x000055555f6c4be0, BoundArch=(Data = 0x0000000000000000, Length = 0), AtTopLevel=true, MultipleArchs=false, LinkingOutput=0x0000000000000000, CachedResults=size=1, TargetDeviceOffloadKind=OFK_None) const at Driver.cpp:5306:26\n    frame #9: 0x000055555dbeb590 clangd`clang::driver::Driver::BuildJobs(this=0x00007fffffffb5e0, C=0x000055555f6c64a0) const at Driver.cpp:4844:5\n    frame #10: 0x000055555dbe6b0f clangd`clang::driver::Driver::BuildCompilation(this=0x00007fffffffb5e0, ArgList=ArrayRef<const char *> @ 0x00007fffffffb268) at Driver.cpp:1496:3\n    frame #11: 0x000055555b0cc0d9 clangd`clang::createInvocation(ArgList=ArrayRef<const char *> @ 0x00007fffffffbb38, Opts=CreateInvocationOptions @ 0x00007fffffffbb90) at CreateInvocationFromCommandLine.cpp:53:52\n    frame #12: 0x000055555b378e7b clangd`clang::clangd::buildCompilerInvocation(Inputs=0x00007fffffffca58, D=0x00007fffffffc158, CC1Args=size=0) at Compiler.cpp:116:44\n    frame #13: 0x000055555895a6c8 clangd`clang::clangd::(anonymous namespace)::Checker::buildInvocation(this=0x00007fffffffc760, TFS=0x00007fffffffe570, Contents= Has Value=false ) at Check.cpp:212:9\n    frame #14: 0x0000555558959cec clangd`clang::clangd::check(File=(Data = \"build/test.cpp\", Length = 64), TFS=0x00007fffffffe570, Opts=0x00007fffffffe600) at Check.cpp:486:34\n    frame #15: 0x000055555892164a clangd`main(argc=4, argv=0x00007fffffffecd8) at ClangdMain.cpp:993:12\n    frame #16: 0x00007ffff5c3ad85 libc.so.6`__libc_start_main + 229\n    frame #17: 0x00005555585bbe9e clangd`_start + 46\n```\n\nTest Plan: ninja ClangDriverTests && tools/clang/unittests/Driver/ClangDriverTests\n\nDifferential Revision: https://reviews.llvm.org/D154602\n",
            "commit_timestamp": 1689148661.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689164551.208525,
            "elapsed_time": 8881.64424943924,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fe6cddef2020c8e103cff8180540d4e2e9102c6d",
            "commit_message": "[DWARF] Allow op-index in line number programs\n\nThis extends DWARFDebugLine to properly parse line number programs with\nmaximum_operations_per_instruction > 1 for VLIW targets.\n\nNo functions that use that parsed output to retrieve line information\nhave been extended to support multiple op-indexes. This means that when\nretrieving information for an address with multiple op-indexes, e.g.\nwhen using llvm-addr2line, the penultimate row for that address will be\nused, which in most cases is the row for the second largest op-index.\nThis will be addressed in further changes, but this patch at least\nallows us to correctly parse such line number programs, with a warning\nsaying that the line number information may be incorrect (incomplete).\n\nReviewed By: StephenTozer\n\nDifferential Revision: https://reviews.llvm.org/D152536\n",
            "commit_timestamp": 1689162389.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689178492.348022,
            "elapsed_time": 6496.502560853958,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a70ce8cb0e4b45841726347c723147af591b054a",
            "commit_message": "[libc++][PSTL] Fix double-move in std::transform_reduce\n\nReviewed By: #libc, ldionne\n\nSpies: h-vetinari, libcxx-commits\n\nDifferential Revision: https://reviews.llvm.org/D154913\n",
            "commit_timestamp": 1689177370.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689193102.742811,
            "elapsed_time": 7987.130672454834,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0e543747ab42b49bf7ca2e78a76639ac9bc1fda8",
            "commit_message": "[flang][openacc] Support .eqv. reduction operator\n\nAdd support for the `.eqv.` reduction operator for\nFlang/OpenACC lowering.\n\nDepends on D154898\n\nReviewed By: razvanlupusoru\n\nDifferential Revision: https://reviews.llvm.org/D154900\n",
            "commit_timestamp": 1689192010.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689207485.299451,
            "elapsed_time": 6431.543771982193,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "677a1da6fafddb13aebd4c170c8452029a05858d",
            "commit_message": "[clang] Fix crash caused by PseudoObjectExprBitfields::NumSubExprs overflow\n\nThis patch makes the bit-fields wider, and also implement a small optimization for `PseudoObjectExprBitfields`, when there is no result in `PseudoObjectExpr`, we use 32 bits to store the number of subexpressions, otherwise, we use 16 bits to store the number of subexpressions, and use 16 bits to store the result indexes.\n\nFixes https://github.com/llvm/llvm-project/issues/63169\n\nReviewed By: aaron.ballman\n\nDifferential Revision: https://reviews.llvm.org/D154784\n",
            "commit_timestamp": 1689206288.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689221771.256459,
            "elapsed_time": 6285.756520986557,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "020cdaff615acbdc9ef6a801075a484ef74d5070",
            "commit_message": "[Asan][Darwin][GCD] Add interceptor for dispatch_mach_create_f\n\nWhen enabling DriverKit, Address Sanitizer was unable to\nintercept thread creation directly for dispatch workerthreads.\n\nBecause of this calls to GetStackTraceFromID failed and ASan was\nunable to capture a meaningful stack trace.\n\nThis patch adds an interceptor for a dispatch function as a proxy\nthat is \"close enough\" to thread creation so that ASan is able\nto meaningfully capture and register the dispatched thread.\n\nNote: I propose not adding a test for this change.\nBecause this change is only meaningful in such a narrow usecase on Darwin\nand is incredibly difficult to add a meaningful test.\n\nDifferential Revision: https://reviews.llvm.org/D154753\n",
            "commit_timestamp": 1689220330.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689236415.234798,
            "elapsed_time": 7319.710772752762,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8ecc6c9378399bf8b7a0cec72e73138ac686a1bb",
            "commit_message": "[IR] Partially remove pointer element types from intrinsic signatures (NFC)\n\nAs typed pointers are no longer supported, we should no longer\nspecify element types in intrinsic signatures.\n\nThe only meaningful pointer types are now:\n\n    llvm_ptr_ty -> ptr\n    llvm_anyptr_ty -> ptr addrspace(any)\n    LLVMQualPointerType<N> -> ptr addrspace(N)\n\nThis is only \"partially\" because we also have a bunch of special\nIIT descriptors like LLVMPointerTo, LLVMPointerToElt and\nLLVMAnyPointerToElt, which I'll leave for a later revision.\n\nDifferential Revision: https://reviews.llvm.org/D155086\n",
            "commit_timestamp": 1689235251.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689250810.954249,
            "elapsed_time": 7607.229573726654,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "245d10b7a2c12ec25e7b5860a38c61991543a739",
            "commit_message": "[clang][Interp][NFC] Trim Source.h includes\n",
            "commit_timestamp": 1689247563.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689265150.791984,
            "elapsed_time": 9356.067201137543,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c660a2f0ab1297b178fd06853c4991d0f07d8fa0",
            "commit_message": "[X86] Fold ANDNP(X,NOT(Y)) -> NOT(OR(X,Y))\n\nRemoving the x86-specific node helps further folding and improves commutativity\n",
            "commit_timestamp": 1689263780.0
        },
        {
            "tool_version": "232.0.20230613.111753-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689279733.51929,
            "elapsed_time": 8431.89232969284,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7972b9c829966bb9541e1ae1f39c884efebc1d5a",
            "commit_message": "[AMDGPU] Move SIEncodingFamily into SIDefines.h. NFC.\n\nI need this for future patch in the MC, while TII is not available\nin the llvm-mc. Besides this is not a first time I want it there.\n\nDifferential Revision: https://reviews.llvm.org/D155228\n",
            "commit_timestamp": 1689277348.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689495398.969087,
            "elapsed_time": 8040.062523841858,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "48ee3193787840801314eae627c37444ed697c2e",
            "commit_message": "Revert \"[RISCV] Move comments before 'if' instead of after. NFC\"\n\nThis reverts commit ef1ccc493e6167488ac10da2842fa7cac2746565.\n\nCommitted by mistake.\n",
            "commit_timestamp": 1689486846.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689509937.228248,
            "elapsed_time": 9236.384525299072,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5708add6df24dcd7398e79ee0adfeee56962cc25",
            "commit_message": "[gn] port f0dfe682bca0 (no more _LIBCPP_ENABLE_ASSERTIONS_DEFAULT)\n",
            "commit_timestamp": 1689506755.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689524136.664688,
            "elapsed_time": 6771.259792804718,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6ed40418914b6439edd995298268d60e2df0cce4",
            "commit_message": "[libc++] Implement ostringstream members of P0408R7 (Efficient Access to basic_stringbuf's Buffer)\n\nReviewed By: #libc, Mordante\n\nDifferential Revision: https://reviews.llvm.org/D155276\n",
            "commit_timestamp": 1689513935.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689538566.130847,
            "elapsed_time": 7430.682577371597,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "cc4f86562127f29560abb54d0c11f277b3373a2a",
            "commit_message": "[clang-tidy] Improve build-in type handling in bugprone-swapped-arguments\n\nImproved detection of argument swaps involving integral and floating-point\ntypes by enhancing handling of implicit conversions. Now implicit casts\nfrom float to double are also considered, same for integers.\nImproved documentation.\n\nFixes: #62926\n\nReviewed By: carlosgalvezp\n\nDifferential Revision: https://reviews.llvm.org/D151495\n",
            "commit_timestamp": 1689532169.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689555442.324424,
            "elapsed_time": 6515.170094490051,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "199034e8acd602d5a2475d537ae8265c4e3ee5a7",
            "commit_message": "[ORC] In defineMaterializing, error out early if tracker is defunct.\n\nAn in-flight materialization may try to claim responsibility for new symbols\n(via MaterializationResponsibility::defineMaterializing) after the tracker that\nis associated with the materialization is removed, leaving the tracker defunct.\n\nFailure to error out early here could leave the JITDylib in an invalid state,\nwith defineMaterializing associating new symbols with the already-defunct\ntracker. Erroring out early prevents this.\n",
            "commit_timestamp": 1689554276.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689567806.520265,
            "elapsed_time": 7144.922644853592,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7ce4e933eab28d7a6b7a54ef96bee8853cc30bbc",
            "commit_message": "[RISCV] Implement prefetch locality by NTLH\n\nWe add the MemOperand then backend will generate NTLH automatically.\n\n```\n__builtin_prefetch(ptr,  0 /* rw==read */, 0 /* locality */); => ntl.all + prefetch.r (ptr)\n__builtin_prefetch(ptr,  0 /* rw==read */, 1 /* locality */); => ntl.pall + prefetch.r (ptr)\n__builtin_prefetch(ptr,  0 /* rw==read */, 2 /* locality */); => ntl.p1 + prefetch.r (ptr)\n__builtin_prefetch(ptr,  0 /* rw==read */, 3 /* locality */); => prefetch.r (ptr)\n```\n\nReviewed By: craig.topper\n\nDifferential Revision: https://reviews.llvm.org/D154691\n",
            "commit_timestamp": 1689564766.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689582353.065115,
            "elapsed_time": 7715.90022110939,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fdf36c3d4b467a48b628c96cc7e34c2f4bf090da",
            "commit_message": "[lldb][AArch64] Fix flakiness in TestSVEThreadedDynamic\n\nThis test runs to a breakpoint on thread 0. Thread 0 then starts\nthread 2 and 3, which both have breakpoints in them.\n\nIn https://lab.llvm.org/buildbot/#/builders/96/builds/41674\nI think that we managed to do the first check on thread 2 before\nthread 3 had started. Therefore \"thread continue 3\" failed.\n\nSo wait for all three to startup before we check their status.\n\nI considered putting a timeout on the while like the wait_for... methods,\nbut the test itself already has a global timeout. Plus, I'd rather\nnot be tuning a timeout per piece of hardware this runs on.\n\n99% of the time we will already have 3 threads when the check is done.\n\nReviewed By: omjavaid\n\nDifferential Revision: https://reviews.llvm.org/D154705\n",
            "commit_timestamp": 1689581475.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689597354.322326,
            "elapsed_time": 9399.69318819046,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "92542f2a400024e8a878242afe8231e17df345e5",
            "commit_message": "[AMDGPU] Add targets gfx1150 and gfx1151\n\nThis is the target definition only. Currently they are treated the same\nas GFX 11.0.x.\n\nDifferential Revision: https://reviews.llvm.org/D155429\n",
            "commit_timestamp": 1689595572.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689611129.237642,
            "elapsed_time": 7019.629465103149,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7583c73bc4faf2b37f6c75ec64eddaa99f058b65",
            "commit_message": "[libc++][format] Fixes an off by one error.\n\nThe post-condition on the functions is that the buffer is not full.\nThis post-conditon is used as pre-condition of the push_back function.\nWhen a copy, fill, of transform function exactly fit in the buffer this\npost-condition was validated.\n\nReviewed By: #libc, ldionne\n\nDifferential Revision: https://reviews.llvm.org/D155397\n",
            "commit_timestamp": 1689609679.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689625244.387349,
            "elapsed_time": 7136.5321588516235,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "71f95ecff27e4032ff1c5d196230b42f76a6eb5f",
            "commit_message": "[libc++] Move _LIBCPP_NO_THREAD_SAFETY_ANALYSIS to __config\n\nThis makes __threading_support contain nothing but the base threading\nAPI provided by the system.\n\nDifferential Revision: https://reviews.llvm.org/D155458\n",
            "commit_timestamp": 1689624406.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689642933.46552,
            "elapsed_time": 8579.3740067482,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a5cee3e386bde28ce21ff2ead3fc420f018604ca",
            "commit_message": "[mlir][linalg] Add a padding case for `ComplexType`\n\nIf the paddingAttr is an ArrayAttr with two values we know that\nthe element type is a `ComplexType` and we should pad the value\naccordingly.\n\nReviewed By: mravishankar\n\nDifferential Revision: https://reviews.llvm.org/D154908\n",
            "commit_timestamp": 1689639638.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689654132.463895,
            "elapsed_time": 6978.240034580231,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "31263211c6a4ef454216f2edbf9b2083a4c1474d",
            "commit_message": "[sanitizer][asan][win] Intercept _strdup on Windows instead of strdup\n\nIntercept `_strdup` on windows, instead of the nonexistent `strdup`.\n",
            "commit_timestamp": 1689653210.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689668753.596433,
            "elapsed_time": 9091.609967708588,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "447bb5bee402eab94987ebbd8f29d696f946ba9e",
            "commit_message": "[mlir][ArmSME] Introduce new lowering layer (Vector -> ArmSME)\n\nAt the moment, the lowering from the Vector dialect to SME looks like\nthis:\n\n  * Vector --> SME LLVM IR intrinsics\n\nThis patch introduces a new lowering layer between the Vector dialect\nand the Arm SME extension:\n\n  * Vector --> ArmSME dialect (custom Ops) --> SME LLVM IR intrinsics.\n\nThis is motivated by 2 considerations:\n1. Storing `ZA` to memory (e.g. `vector.transfer_write`) requires an\n   `scf.for` loop over all rows of `ZA`. Similar logic will apply to\n   \"load to ZA from memory\". This is a rather complex transformation and\n   a custom Op seems justified.\n2. As discussed in [1], we need to prevent the LLVM type converter from\n   having to convert types unsupported in LLVM, e.g.\n   `vector<[16]x[16]xi8>`. A dedicated abstraction layer with custom Ops\n   opens a path to some fine tuning (e.g. custom type converters) that\n   will allow us to avoid this.\n\nTo facilitate this change, two new custom SME Op are introduced:\n\n  * `TileStoreOp`, and\n  * `ZeroOp`.\n\nNote that no new functionality is added - these Ops merely model what's\nalready supported. In particular, the following tile size is assumed\n(dimension and element size are fixed):\n\n  * `vector<[16]x[16]xi8>`\n\nThe new lowering layer is introduced via a conversion pass between the\nVector and the SME dialects. You can use the `-convert-vector-to-sme`\nflag to run it. The following function:\n```\nfunc.func @example(%arg0 : memref<?x?xi8>) {\n  // (...)\n  %cst = arith.constant dense<0> : vector<[16]x[16]xi8>\n  vector.transfer_write %cst, %arg0 : vector<[16]x[16]xi8>, memref<?x?xi8>\n  return\n}\n```\nwould be lowered to:\n```\n  func.func @example(%arg0: memref<?x?xi8>) {\n    // (...)\n    %0 = arm_sme.zero : vector<[16]x[16]xi8>\n    arm_sme.tile_store %arg0[%c0, %c0], %0 : memref<?x?xi8>, vector<[16]x[16]xi8>\n    return\n  }\n```\n\nLater, a mechanism will be introduced to guarantee that `arm_sme.zero`\nand `arm_sme.tile_store` operate on the same virtual tile. For `i8`\nelements this is not required as there is only one tile.\n\nIn order to lower the above output to LLVM, use\n  * `-convert-vector-to-llvm=\"enable-arm-sme\"`.\n\n[1] https://github.com/openxla/iree/issues/14294\n\nReviewed By: WanderAway\n\nDifferential Revision: https://reviews.llvm.org/D154867\n",
            "commit_timestamp": 1689667499.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689683339.507124,
            "elapsed_time": 7351.556574583054,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "eadbc4b004b6f5bcd67f17b1d79c9955bd410fb8",
            "commit_message": "[Constants] Use getGEPReturnType() (NFC)\n\nThis reimplements essentially the same logic.\n",
            "commit_timestamp": 1689682298.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689697605.529338,
            "elapsed_time": 8877.176429986954,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fe22b9050c7296bc9d4d22d469f27b226153273d",
            "commit_message": "[AArch64] Regenerate a couple of vector-shuffle tests. NFC\n    As a request in https://reviews.llvm.org/D152205\n",
            "commit_timestamp": 1689696255.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689711895.627498,
            "elapsed_time": 9190.09621167183,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8e6482115c242543471efabf7fd82338f76ddd04",
            "commit_message": "[RISCV] Remove unnecessary _32 and _64 suffixes from some scalar crypto builtins.\n\nThe names of these builtins aren't ambiguous so they don't need the suffix.\n",
            "commit_timestamp": 1689710161.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689729479.818456,
            "elapsed_time": 7341.388203382492,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ca91d4ecbcc38923a122142206e62572416234a1",
            "commit_message": "[gn] port 3f65f718332c\n",
            "commit_timestamp": 1689728416.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689741250.87245,
            "elapsed_time": 9910.877204418182,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "12f35b39ee63e932d4bdf6b28cce2e3d07713c4d",
            "commit_message": "[tools] Use \"#pragma GCC\" instead of \"#pragma clang\" to ignore -Wcast-qual in c-index-test.c (NFC)\n",
            "commit_timestamp": 1689739505.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689755037.30844,
            "elapsed_time": 7346.621319770813,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e271049bc6a1408aa4e53771321117b3da6440ab",
            "commit_message": "[clang][analyzer] StdLibraryFunctionsChecker: Allow NULL buffer in `fread` and `fwrite` if size is zero.\n\nReviewed By: donat.nagy\n\nDifferential Revision: https://reviews.llvm.org/D154509\n",
            "commit_timestamp": 1689753494.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689769781.074584,
            "elapsed_time": 9391.905447244644,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b70e6e9681925ad06d9899462b9e43250be53f64",
            "commit_message": "[clang-tidy] Warn only for copyable/movable classes in cppcoreguidelines-avoid-const-or-ref-members\n\nSince that's what the guidelines require.\n\nFixes #63733\n\nDifferential Revision: https://reviews.llvm.org/D155625\n",
            "commit_timestamp": 1689768315.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689783830.481814,
            "elapsed_time": 7493.27255487442,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ab6ec66642623b515b264daa568fca3fb95dc7e2",
            "commit_message": "[SLP][X86] Regenerate some test checks to reduce diff in D154891\n",
            "commit_timestamp": 1689782531.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689798208.27479,
            "elapsed_time": 8218.839168787003,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7dfe62327db81cc5ee3e29a994818370d95dc9e3",
            "commit_message": "[RISCV] Add a DAG combine for (czero_eq X, (xor Y, 1)) -> (czero_ne X, Y) if Y is 0 or 1.\n\nThis is an alternative to D155288 that can handle other sources of\nxori like FP compares. Unfortunately, it misses the i64 setge case\non RV32 in condops.ll.\n\nReviewed By: asb\n\nDifferential Revision: https://reviews.llvm.org/D155328\n",
            "commit_timestamp": 1689795188.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689814283.513951,
            "elapsed_time": 7061.843919277191,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "359f170f5f712ee714193b46bad45a45656b2c59",
            "commit_message": "[lld-macho] Use fixed chunk size for UUID\n\nChunk size decided by the thread count makes the UUID less deterministic\n(e.g. across machines with different core counts.)\nFollow ELF and just use a fixed chunksize.\n\nFixes: https://github.com/llvm/llvm-project/issues/63961\n\nReviewed By: #lld-macho, keith\n\nDifferential Revision: https://reviews.llvm.org/D155761\n",
            "commit_timestamp": 1689812676.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689826712.760547,
            "elapsed_time": 5606.6328637599945,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8da7abb1f847a30df808630dedaab9a2b5e63e63",
            "commit_message": "[dsymutil] Sort entries in YamlDMO to stabilize print order\n\nSimilar to the llvm::sort call in DebugMapObject::print.\n",
            "commit_timestamp": 1689825721.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689841503.698507,
            "elapsed_time": 7495.594383716583,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8b61ae4e931842cf909c0365664eb79b65253598",
            "commit_message": "[MLIR][Tensor] Avoid crash on negative dimensions\n\nIn https://reviews.llvm.org/D151611, a check was added to the tensor verifier to\nemit an error on negative tensor dimensions. This check allowed for dynamic\ndimensions, hence negative dimensions were still able to get through the verifier.\nThis is a problem in situations such as #60558, where the dynamic dimension is\nconverted to a static (and possibly negative) dimension by another pass in the\ncompiler. This patch fixes that by doing another check during the\n`StaticTensorGenerate` conversion, and return a failure if the dimension is\nnegative.\n\nAs a side-note, I have to admit that I do not know why returning a failure in\n`StaticTensorGenerate` gives a nice \"tensor dimensions must be non-negative\"\nerror. I suspect that the verifier runs again when `return failure()` is called,\nbut I am not sure.\n\nFixes #60558.\n\nReviewed By: mehdi_amini\n\nDifferential Revision: https://reviews.llvm.org/D155728\n",
            "commit_timestamp": 1689840574.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689856130.391062,
            "elapsed_time": 7509.073064565659,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "465f65a549e5fd092f6da8b09d0f1d50ca7f4ddc",
            "commit_message": "[clang][Interp][NFC] Add a debugging assertion\n\nWe will probably have to remove this at some point, but until then, make\nsure we're not running into much-harder-to-debug problems later on.\n",
            "commit_timestamp": 1689854769.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689870501.291321,
            "elapsed_time": 9192.526088237762,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "9dc391e89c7984394e352ea1cbf948b4bbdcd8a8",
            "commit_message": "Revert \"[IR] Mark add constant expressions as undesirable\"\n\nThis reverts commit f8a36d8c3e264c4fccf8058e699201a452ea7bb7.\n\nI believe this is causing an assertion failure on the\nsanitizer-x86_64-linux buildbot:\n\nclang++: /b/sanitizer-x86_64-linux/build/llvm-project/llvm/include/llvm/Support/Casting.h:578: decltype(auto) llvm::cast(From *) [To = llvm::BinaryOperator, From = llvm::Value]: Assertion `isa<To>(Val) && \"cast<Ty>() argument of incompatible type!\"' failed.\n\n  #10 0x000055bdd7e82408 canonicalizeLogicFirst(llvm::BinaryOperator&, llvm::IRBuilder<llvm::TargetFolder, llvm::IRBuilderCallbackInserter>&) /b/sanitizer-x86_64-linux/build/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp:2131:5\n  #11 0x000055bdd7e80183 llvm::InstCombinerImpl::visitAnd(llvm::BinaryOperator&) /b/sanitizer-x86_64-linux/build/llvm-project/llvm/lib/Transforms/InstCombine/InstCombineAndOrXor.cpp:2661:20\n\nLikely the code is encountering a constant expression in a case it\ndidn't before.\n",
            "commit_timestamp": 1689869357.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689884397.300354,
            "elapsed_time": 7095.797766685486,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "760c208f6ff9e97a9a11523c00874a1eec4f876b",
            "commit_message": "[Sanitizers][Darwin][Test] XFAIL symbolize_pc test on Darwin/TSan+UBSan\n",
            "commit_timestamp": 1689883110.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689900550.16224,
            "elapsed_time": 7179.299919366837,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "25658879a022ca9a8d91ed214701bfd724d159a8",
            "commit_message": "[clang][test] Remove unused variable 'SM' (NFC)\n\n/data/llvm-project/clang/unittests/AST/DeclTest.cpp:153:18: error: unused variable 'SM' [-Werror,-Wunused-variable]\n  SourceManager &SM = Ctx.getSourceManager();\n                 ^\n1 error generated.\n",
            "commit_timestamp": 1689897570.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689913347.470896,
            "elapsed_time": 7201.798928976059,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8a45a54d59fcd29f559f4f260e2c447bef498e1e",
            "commit_message": "[lldb] Fix -Wreturn-type in RegisterInfos_x86_64_with_base_shared.cpp (NFC)\n\n/data/llvm-project/lldb/source/Plugins/Process/Utility/RegisterInfos_x86_64_with_base_shared.cpp:319:1: error: non-void function does\nnot return a value in all control paths [-Werror,-Wreturn-type]\n}\n^\n1 error generated.\n",
            "commit_timestamp": 1689910962.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689927783.695273,
            "elapsed_time": 7023.5945336818695,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "218f97578b26f7a89f7f8ed0748c31ef0181f80a",
            "commit_message": "[IR] Accept non-Instruction in BinaryOperator::CreateWithCopiedFlags() (NFC)\n\nThe underlying copyIRFlags() API accepts arbitrary values and can\nwork with flags on operators (i.e. instructions or constant\nexpressions). Remove the arbitrary limitation that the\nCreateWithCopiedFlags() API imposes, so we can directly pass through\nvalues matched by PatternMatch, which can be constant expressions.\n\nThe attached test case works fine now, but would crash with an\nupcoming change to not produce and constant expressions.\n",
            "commit_timestamp": 1689926752.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689942642.953709,
            "elapsed_time": 9295.360404014587,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "29112a994694baee070a2021e00f772f1913d214",
            "commit_message": "Mark this test as unsupported on Windows systems\n\nThere is a strange issue happening with command line processing though. The\ncommand line argument\n   --export-dynamic-symbol 'f*'\ndoes not have the single quotes stripped on some Windows targets (but not\nall). This causes the glob matching to fail, which means the test fails on\nsome Windows bots and passes on others.\n\nThis is expected to be a temporary measure to get bots back to green. I've not\nfound a commit that has caused a behavioral change that could be reverted\ninstead, so this could be an issue with lit or test machine configuration.\n",
            "commit_timestamp": 1689941452.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689956556.572834,
            "elapsed_time": 7110.357536792755,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4fb25ca51c851015d7e0081b08da342285de2cb1",
            "commit_message": "[MLIR][Linalg] Preserve DPS when decomposing Softmax\n\nPreserve destination passing style (DPS) when decomposing\n`linalg.Softmax`; instead of creating a new empty, which may materialize\nas a new buffer after bufferization, use the result directly.\n\nReviewed By: qcolombet\n\nDifferential Revision: https://reviews.llvm.org/D155942\n",
            "commit_timestamp": 1689955406.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689970992.878589,
            "elapsed_time": 6892.180688619614,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "25d34215bb80459dd328d6f8eb86c43684375d88",
            "commit_message": "[LV] Replace use of getMaxSafeDepDist with isSafeForAnyVector (NFC)\n\nReplace the use of getMaxSafeDepDistBytes with the more direct\nisSafeForAnyVector. This removes the need to define getMaxSafeDepDistBytes.\n",
            "commit_timestamp": 1689969950.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689987040.098968,
            "elapsed_time": 7304.675652980804,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f09f0a6b10765f0993255e52a62268472f586830",
            "commit_message": "[lldb] Consider OP_addrx in DWARFExpression::Update_DW_OP_addr\n\nThis rewrites DW_OP_addrx inside DWARFExpression as an DW_OP_addr so\nthat we can update addresses that are originally located in the\ndebug_addr section.\n\nThe full discussion behind this can be found in\nhttps://discourse.llvm.org/t/dwarfexpression-and-dw-op-addrx/71627/12, but a\nsummary follows.\n\nWhen SymbolFileDWARF::ParseVariableDIE creates DWARFExpressions for\nvariables whose location is an OP_addr, it knows how to remap\naddresses appropriately in the DebugMap case. It then calls\nDWARFExpression::Update_DW_OP_addr, which updates the value associated\nwith OP_addr.\n\nHowever, when we have an OP_addrx, the update function does\nnothing. This makes sense, as the DWARFExpression does not have a\nmutable view of the debug_addr section. In non-DebugMap flows this is\nnot an issue, as the debug_addr contains the correct addresses of\nvariables. In DebugMap flows, this is problematic because the work\ndone by RelinkOSOAddress is lost. By updating the OP to OP_addr, we\ncan also update the address as required,\n\nWe also explored the alternative of relinking the debug_addr section\nwhen we are initializing OSOs (InitOSO). However, this creates an\ninconsistent story for users of\nDWARFExpression::GetLocation_DW_OP_addr. This function returns an\naddress without telling callers whether that address came from an\nOP_addr or an OP_addrx. If we preemptively relink OP_addrx results\nwithout doing the same for OP_addr results, then callers can\u2019t know\nwhether the address they got was an executable address or an object\nfile address. In other words, they can\u2019t know whether they need to\ncall LinkOSOFileAddress on those results or not.\n\nThis patch addresses the majority of test failures when enabling DWARF\n5 for MachO (over 200 test failures).\n\nDifferential Revision: https://reviews.llvm.org/D155198\n",
            "commit_timestamp": 1689982936.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1689999754.791161,
            "elapsed_time": 7634.2703769207,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "2e7d711a106170185e9bbbf15115613d9a5854c5",
            "commit_message": "[clang] Add serialization support for the DynamicAllocLValue variant of APValue::LValueBase::Ptr\n\nDifferential Revision: https://reviews.llvm.org/D154471\n",
            "commit_timestamp": 1689995811.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690014086.594776,
            "elapsed_time": 7526.537280082703,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c51c607dfc6388050ed1381a32089cd08a36ff9a",
            "commit_message": "[VirtualFileSystem] Use std::map::emplace\n",
            "commit_timestamp": 1690009257.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690028672.086987,
            "elapsed_time": 7503.932558298111,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "9b2dfff57a382b757c358b43ee1df7591cb480ee",
            "commit_message": "Partially revert \"clang/HIP: Remove __llvm_amdgcn_* wrapper hacks\"\n\nRevert part of f407a7399575a6821940973c54754d42e72dd9ce.\n\nSome of the HIP headers were using the f16 rcp inline, such that it\nbreaks compiling code against non-top-of-tree headers. Need to wait\nfor a few HIP releases to expire to fully remove these.\n\nFixes #63981\n",
            "commit_timestamp": 1690027670.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690042883.324946,
            "elapsed_time": 8710.820062875748,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "1d0759e6c3c2eaa8cbacfd76d409ed80ffd9fe9d",
            "commit_message": "[clang-tidy][NFC] Fix list.rst generation when adding check\n\nadd_new_check.py does not work properly for checks that\ngenerate fixes in base class. Adding some comments to those\nchecks in order to fix list.rst generation.\n",
            "commit_timestamp": 1690041322.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690057201.444851,
            "elapsed_time": 7239.68176150322,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0e325081192be951a9d54bb246ef030c37bffd21",
            "commit_message": "[clang-tidy] Support concepts in `bugprone-forwarding-reference-overload`\n\nIgnore constrained perfect forwarding constructors.\n\nFixes: #58230\n\nReviewed By: PiotrZSL\n\nDifferential Revision: https://reviews.llvm.org/D135476\n",
            "commit_timestamp": 1690055191.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690073628.908491,
            "elapsed_time": 7405.530553817749,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a3e524df904963428dd6107167a3ac99b731a476",
            "commit_message": "[PowerPC] Reorder setMaxAtomicSizeInBitsSupported(). NFC\n\nReorder setMaxAtomicSizeInBitsSupported() in numerical and more logical order.\n\nReviewed By: MaskRay\n\nDifferential Revision: https://reviews.llvm.org/D155379\n",
            "commit_timestamp": 1690070487.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690086094.070564,
            "elapsed_time": 7601.089413166046,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e126fa27c07c83997fcdee2bd45996ffc860317b",
            "commit_message": "[unittest] Fix HighlighterTest.cpp after D151683\n\n:: is now parsed as tok::coloncolon even in C mode.\n",
            "commit_timestamp": 1690075802.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690100447.248448,
            "elapsed_time": 6949.331260681152,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "41af6ece6c6272ab2045e754f64d149079e899b5",
            "commit_message": "[PowerPC/SPE] powerpcspe load and store instruction has\n8-bit offset instead of 16-bit unlike other load/store instructions.\nso if stack grows any further than 8-bit, create one emergency slot\nfor spilling.\n",
            "commit_timestamp": 1690098875.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690115100.628796,
            "elapsed_time": 7248.58593416214,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "2974c2a0c304a91b157d41332bb37c3dd60448ad",
            "commit_message": "[X86] lowerRegToMasks - rename masklen -> MaskLenVT. NFC.\n\nFixes style warning\n",
            "commit_timestamp": 1690111653.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690129627.073286,
            "elapsed_time": 8839.041880607605,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6edc9a766213eed783e0b6dc5e2539ad925398f9",
            "commit_message": "[AArch64][GISel] Additional FPExt vector lowering\n\nSimilar to D155311, this adds lowering for more vector cases for FPExt\n\nDifferential Revision: https://reviews.llvm.org/D155601\n",
            "commit_timestamp": 1690127893.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690143963.983193,
            "elapsed_time": 10020.747985124588,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "1e512688376c83d96f097e9b0ddb19132247a646",
            "commit_message": "[clang-tidy] performance-* checks: Also allow allow member expressions to be used in a const manner.\n\nUntil now when determining all the const uses of a VarDecl we only considered\nhow the variable itself was used. This change extends checking for const usages\nof the type's members as well.\n\nThis increases the number of true positives for various performance checks that\nshare the same const usage analysis.\n\nPath by Felix Berger\n\nReviewed By: njames93, PiotrZSL\n\nDifferential Revision: https://reviews.llvm.org/D97567\n",
            "commit_timestamp": 1690137509.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690159966.343454,
            "elapsed_time": 8864.731892824173,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c979e79813f3ca22285dad0077cdda8816a50ccc",
            "commit_message": "[LLVM] Remove the module dump introduced mistakenly\n",
            "commit_timestamp": 1690152941.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690172517.079609,
            "elapsed_time": 7398.894332408905,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "49f3435286418c99dd4080fa427809ad72892127",
            "commit_message": "[RISCV] Adjust definition order in RISCVInstrInfoZvk.td to be the same with other td file\n\nThe definition order is operand/SDNode, instruction class template,\ninstruction, pseudo instruciton, codegen patterns, ....\n",
            "commit_timestamp": 1690169677.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690187082.622028,
            "elapsed_time": 7380.784732580185,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8ac137acefc01caf636db5f95eb0977c97def1ba",
            "commit_message": "[NFC] Add checks for self-assignment.\n\nDifferential Revision: https://reviews.llvm.org/D155776\n",
            "commit_timestamp": 1690184288.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690201834.351647,
            "elapsed_time": 8788.698611736298,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c80976549a117464234bd2d36d829e1b86f85963",
            "commit_message": "[AArch64] NFC: Move fadda tests to separate file.\n\nWe want to test the fadda tests with 'streaming-compatible' flags,\nsuch that we can ensure no 'fadda' (not valid in streaming mode) is\ngenerated.\n",
            "commit_timestamp": 1690200134.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690215668.292625,
            "elapsed_time": 5481.5321393013,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "9d9cde5a903ac9b20059b7bc815aa2381d02f6f4",
            "commit_message": "[RISCV] Remove combineCmpOp and associated code. NFCI\n\nThis code was originally added in D134277. This transform is now\navailable in target independent DAG combine after D153502.\n\nReviewed By: asb\n\nDifferential Revision: https://reviews.llvm.org/D156075\n",
            "commit_timestamp": 1690214744.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690230330.013116,
            "elapsed_time": 9713.82809472084,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "992fa7be3438bce61cfba7c0e0b07d9d1ddcc05b",
            "commit_message": "[clang-tidy] Initialize DiagnosticEngine in ExpandModularHeaders\n\nFix issue preventing suppression of compiler warnings with\n-Wno-<warning> under C++20 and above. Add call to\nProcessWarningOptions and propagate DiagnosticOpts more properly.\n\nFixes: #56709, #61969\n\nReviewed By: carlosgalvezp\n\nDifferential Revision: https://reviews.llvm.org/D156056\n",
            "commit_timestamp": 1690227827.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690246485.861972,
            "elapsed_time": 7256.852521419525,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5fa5c39871c8ea7df2173951be3a4a17b29fa42e",
            "commit_message": "[OpenMP] Add OMPT release note\n\nOMPT release note addition for LLVM 17\n\nDifferential Revision: https://reviews.llvm.org/D156191\n",
            "commit_timestamp": 1690245484.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690259010.866179,
            "elapsed_time": 7062.266646623611,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "998003eaf7b91b5620eeb0b77c81654b9f36efb7",
            "commit_message": "[mlir] Fix for MSVC bool splat issue encountered.\n\nWhen building MLIR using bazel on windows with MSVC2019, bool splats\nwere being created incorrectly:\n\n```\ndense<[true,true,true,true]> : tensor<4xi1>\n-(parse with mlir-opt)-> dense<[true, false, false, false]> : tensor<4xi1>\n```\n\nAppears that a Windows bazel build produces a corrupt DenseIntOrFPElementsAttr.\nUnable to repro using MSVC and cmake.\n\nIssue first discovered here:\nhttps://github.com/google/jax/issues/16394\n\nAdded test point for reproduction:\n\n```\n$ bazel test @llvm-project//mlir/unittests:ir_tests --test_arg=--gtest_filter=DenseSplatTest.BoolSplatSmall\n```\n\nDifferential Revision: https://reviews.llvm.org/D155745\n",
            "commit_timestamp": 1690256743.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690273411.28841,
            "elapsed_time": 7603.627952337265,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c1ad11e12bb505419c5d066d01f83f024b0779e7",
            "commit_message": "[AMDGPU] Remove unused variable 'CNI' in /AMDGPUMachineCFGStructurizer.cpp (NFC)\n\n/Users/jiefu/llvm-project/llvm/lib/Target/AMDGPU/AMDGPUMachineCFGStructurizer.cpp:2603:10: error: variable 'CNI' set but not used [-Werror,-Wunused-but-set-variable]\n    auto CNI = CI;\n         ^\n1 error generated.\n",
            "commit_timestamp": 1690271800.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690288034.744087,
            "elapsed_time": 7054.340248346329,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4706251a3186c34da0ee8fd894f7e6b095da8fdc",
            "commit_message": "Clear release notes for 18.x\n",
            "commit_timestamp": 1690286329.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690302323.789553,
            "elapsed_time": 7758.985878944397,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b34a8b3a5207965f13fd3a700bad612a3afe5867",
            "commit_message": "[RISCV] Generalize combineAddOfBooleanXor to support any boolean not just setcc.\n\nInstead of checking for setcc, look for any 0/1 value.\n\nReviewed By: asb\n\nDifferential Revision: https://reviews.llvm.org/D156153\n",
            "commit_timestamp": 1690301089.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690316952.835863,
            "elapsed_time": 10093.188709259033,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a0b9f1f84b33b9546795697b1fbce2951acdc81a",
            "commit_message": "[scudo] set/check invalid cache entries\n\nmade checking for invalid cache entries and setting invalid cache\nentries more implicit and clear.\n\nReviewed By: cferris\n\nDifferential Revision: https://reviews.llvm.org/D155983\n",
            "commit_timestamp": 1690313192.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690332812.762249,
            "elapsed_time": 7082.160385608673,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6cc9244baa63fcb7c6f35f46dab9fa17a421a6ce",
            "commit_message": "Enable hwasan-use-after-scope by default\n\nThis has been in use for a long time without any issues.\n\nReviewed By: vitalybuka\n\nDifferential Revision: https://reviews.llvm.org/D156267\n",
            "commit_timestamp": 1690331775.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690345367.293446,
            "elapsed_time": 8617.754209280014,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b3fec1067a15a5b619e3ebb3467babdb5b2f5799",
            "commit_message": "[Attributor] Improve NonNull deduction\n\nWe can improve our deduction if we stop at PHI and select instructions\nand also iterate the returned values explicitly. The latter helps with\nisImpliedByIR deductions.\n",
            "commit_timestamp": 1690342281.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690359815.416696,
            "elapsed_time": 7240.277133464813,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ae667f03d369cab8f32f28c3d765695ed4c1972b",
            "commit_message": "[clang][Interp][NFC] Take a const InterpFrame* in InterpBuiltin.cpp\n",
            "commit_timestamp": 1690358786.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690374370.232455,
            "elapsed_time": 6889.08186674118,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f2d307c4ede0c55b28bd366511907bda29703994",
            "commit_message": "[DebugInfo] Remove the `cross-cu-inlining-2.ll` test case.\n\nThis reverts the test case in commit 549773f9e98f9c5895f4cc461a7fb1dbdb216af8.\nAfter committing 2ee4d0386c783f58abe708298228de648239b435, We don't support subprogram definitions nested within `DICompositeType` when doing LTO builds.\nFor a detailed discussion, see https://reviews.llvm.org/D152095.\n",
            "commit_timestamp": 1690372692.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690388841.651371,
            "elapsed_time": 8652.087083816528,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "cb63fa00d1f723e3b4e2fb5e6645595eb0a6e84c",
            "commit_message": "[NFC][clang] Fix static analyzer concerns\n\nTypeLocBuilder frees resources in the destructor but doesn't have\nuser-written copy c'tor or assignment operator, so copying it using\ndefault ones can cause double free.\n\nReviewed By: aaron.ballman\n\nDifferential Revision: https://reviews.llvm.org/D156222\n",
            "commit_timestamp": 1690386040.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690403092.188143,
            "elapsed_time": 8832.164922237396,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e00e0b6fb004080214645b14cfe68c3c4eccd437",
            "commit_message": "[asan] Block signals when starting threads\n\nAsync signals may crash the process if AsanThread is not fully\ninitialized. We do the same for other sanitizers already.\n\nCan't have good reproducer for test. We see this in internal test with prob 1e-6.\n\nReviewed By: kstoimenov\n\nDifferential Revision: https://reviews.llvm.org/D156299\n",
            "commit_timestamp": 1690401820.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690418738.552265,
            "elapsed_time": 5678.485698223114,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a6ae740e743a2241f7104c13152cd0a0582765c5",
            "commit_message": "[-Wunsafe-buffer-usage] Add a facility for debugging low fixit coverage\n\nDifferential Revision: https://reviews.llvm.org/D154880\n",
            "commit_timestamp": 1690416456.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690431756.017673,
            "elapsed_time": 9098.064804315567,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "1462053608041c34e871b7d0a565f4ca541e2fd1",
            "commit_message": "[AMDGPU] Propagate constants for llvm.amdgcn.wave.reduce.umin/umax\n\nReviewed By: arsenm, #amdgpu\n\nDifferential Revision: https://reviews.llvm.org/D156077\n",
            "commit_timestamp": 1690429561.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690446078.512286,
            "elapsed_time": 7114.862952947617,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "90d825be708cd09ab7bfbb6b7a10a98a9847c7c4",
            "commit_message": "Reapply [ConstantFold] Avoid creation of undesirable binop\n\nThis was reverted together with another commit due to a test\nconflict. Reapply without functional changes.\n\n-----\n\nWhen commuting the operands, don't create a constant expression\nfor undesirable binops. Only invoke the constant folding function\nin that case.\n",
            "commit_timestamp": 1690444134.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690460753.03177,
            "elapsed_time": 7025.4813413619995,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "cea72fe34194d58ac1ba9485ee9c9a63cf98a4e6",
            "commit_message": "[llvm][llvm-reduce] Disable uselistorder test everywhere\n\nThis also fails sometimes on x86:\nhttps://lab.llvm.org/buildbot/#/builders/58/builds/42534\n\nDisable it completely peding investigation.\n",
            "commit_timestamp": 1690458240.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690475085.049704,
            "elapsed_time": 8705.5720307827,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "aad360d671f068736ee6d532c939c99ecfbe7c63",
            "commit_message": "[RISCV] Add EmitPriority=0 to Zcb load/store aliases with no immediate offset.\n\nWe only want to be able to parse a missing offset. We don't want\nto print with no offset.\n\nThis matches the non-compressed form of these aliases.\n",
            "commit_timestamp": 1690473950.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690489269.006849,
            "elapsed_time": 7461.782213687897,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a2b92017d3f65327af7f9ec26994053886d0b6d0",
            "commit_message": "[flang][openacc] Lower acc declare link for module variable\n\nThis patch adds support to lower the link clause on OpenACC\ndeclare construct in module declaration.\n\nDepends on D156463\n\nReviewed By: razvanlupusoru\n\nDifferential Revision: https://reviews.llvm.org/D156464\n",
            "commit_timestamp": 1690488240.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690505338.522693,
            "elapsed_time": 8985.59527850151,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "2f976b921071cf4349175554f690798a0d2b81f3",
            "commit_message": "[gn build] Port b3c0055c172b\n",
            "commit_timestamp": 1690501034.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690518097.74873,
            "elapsed_time": 5355.495993375778,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "16522054822e411bafcb9fc1d551244312ebd870",
            "commit_message": "[BOLT][test] Add --show-all-symbols to llvm-objdump -d command\n\nllvm-objdump -d has been changed to not display mapping symbols by default.\n",
            "commit_timestamp": 1690517318.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690532628.080546,
            "elapsed_time": 7408.151387691498,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "cd029a4f5c35fb97cbee2404808d9030460244c1",
            "commit_message": "Revert \"[mlir][llvm] Improve error message when translating `llvm.call_intrinsic`\"\n\nThis reverts commit 5a51a44f82497b089337cfd6c3d86e3d7e3e0041.\n\nThe build is broken.\n",
            "commit_timestamp": 1690531660.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690547428.231926,
            "elapsed_time": 8328.584025859833,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a4d65fe67f7ce1b2a0dcc89bf6aa4672797cb92c",
            "commit_message": "[mlir][LLVMIR] Support switch without cases\n\nLLVM supports switch ops without case values, for which the optional\ncaseValues has no value (i.e., std::nullopt, no the empty array).\nHandle this case properly when translating MLIR-LLVM to LLVM-IR.\n\nReviewed By: Dinistro, Mogball\n\nDifferential Revision: https://reviews.llvm.org/D156431\n",
            "commit_timestamp": 1690545714.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690561494.642344,
            "elapsed_time": 7546.317041873932,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c13e310fa769a6449291b6a6bfbadc6ddc737eff",
            "commit_message": "[DAGCombine] Support truncated constants for fptosi.sat combining\n\nCloses https://github.com/llvm/llvm-project/issues/56779\n\nReviewed By: RKSimon, dmgreen\n\nDifferential Revision: https://reviews.llvm.org/D152926\n",
            "commit_timestamp": 1690559679.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690575891.594069,
            "elapsed_time": 8709.221496343613,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4a3c865d8ed2fc60170495bc6e6e2a9356e5faf2",
            "commit_message": "[mlir] Fix arith verifier for tensor with encoding\n\nThe verifier for some arith ops were not considering that ranked\ntensor types can have encodings.\n\nDifferential Revision: https://reviews.llvm.org/D156557\n",
            "commit_timestamp": 1690574276.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690591702.468663,
            "elapsed_time": 7391.805052757263,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c956f915cd4cd365cb071393977306fef3aa643b",
            "commit_message": "[RISCV][MC][MSan] Fix uninitialized data members\n\nAdded in a0d8a53c7d0e6ca1c94b5d5c4a65790dd5705ef8. Some fields are not always initialized.\n",
            "commit_timestamp": 1690589294.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690604546.866382,
            "elapsed_time": 7131.476876497269,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e39bf32b3bc2f0cc21d783ba789bd82553493875",
            "commit_message": "[Driver] -###: exit with code 1 if hasErrorOccurred\n\nThe exit code for -### is inconsistent. Unrecognized options lead to\nexit code 1, as expected. However, most others errors (including invalid\noption value) lead to exit code 0, differing from GCC and most utilities.\n\nThis is a longstanding quirk of -###, and we didn't fix it because many\ndriver tests need adjustment.\n\nChange -### to be similar to -fdriver-only -v and exit with code 1.\n\nThis requires fixing many driver tests, but the end result gives us\nstronger tests.\n\n* Existing `RUN: %clang -### ...` tests usually don't use `CHECK-NOT: error:` or `--implicit-check-not=error:`.\n  If a change introduces an error, such a change usually cannot be detected.\n* Many folks contributing new tests don't know `-fdriver-only -v`.\n  To test no driver error/warning for new tests, they can use the familiar `-### -Werror`\n  instead of `-fdriver-only -v -Werror`.\n\nReviewed By: jhuber6, yaxunl, dblaikie\n\nDifferential Revision: https://reviews.llvm.org/D156363\n",
            "commit_timestamp": 1690601499.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690618807.32893,
            "elapsed_time": 7151.904597759247,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fc395884decf5dc55964e68f4422ba43aca88020",
            "commit_message": "[BOLT][RISCV] Recognize mapping symbols\n\nThe RISC-V psABI [1] defines them similarly to AArch64.\n\n[1] https://github.com/riscv-non-isa/riscv-elf-psabi-doc/blob/master/riscv-elf.adoc#mapping-symbol\n\nReviewed By: yota9, Amir\n\nDifferential Revision: https://reviews.llvm.org/D153277\n",
            "commit_timestamp": 1690615116.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690633600.650384,
            "elapsed_time": 7772.276116371155,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7c1a6c07ccd93a801dad27780cd1301c56c13829",
            "commit_message": "[gn build] Port 87d0aedaa285\n",
            "commit_timestamp": 1690627501.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690647626.446278,
            "elapsed_time": 7397.069679021835,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "eb1617a5821c35d862ff76e1e0223443c4591ff1",
            "commit_message": "[InstCombineVectorOps] Use poison instead of undef as placeholder [NFC]\nIt's used to create a vector where only 1 element is used\nWhile at it, change OOB extractelement to yield poison per LangRef\n",
            "commit_timestamp": 1690640893.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690662050.558152,
            "elapsed_time": 7420.375843048096,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "239777c8616a614531bed68fff2eaa0c97721cb3",
            "commit_message": "[mlir][emitc] Add literal constant.\n\nA literal constant is not emitted as a variable but rather printed inline. The\nform used is same as the Attribute emission form.\n\nDifferential Revision: https://reviews.llvm.org/D150356\n",
            "commit_timestamp": 1690658843.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690678073.844845,
            "elapsed_time": 5175.245137214661,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "239777c8616a614531bed68fff2eaa0c97721cb3",
            "commit_message": "[mlir][emitc] Add literal constant.\n\nA literal constant is not emitted as a variable but rather printed inline. The\nform used is same as the Attribute emission form.\n\nDifferential Revision: https://reviews.llvm.org/D150356\n",
            "commit_timestamp": 1690658843.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690690785.040898,
            "elapsed_time": 7433.0497624874115,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0c2cd74ff85a43a346ee05a2bfb88f07d9e60647",
            "commit_message": "[Driver][test] Ensure fuzzer.c commands have --target=\n",
            "commit_timestamp": 1690689220.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690705225.274691,
            "elapsed_time": 6941.076591491699,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "12f3d97fc68b304e0efbe183665c0183d9a372b3",
            "commit_message": "[lldb] Support recursive record types in CTF\n\nSupport recursive record types in CTF, for example a struct that\ncontains a pointer to itself:\n\n  struct S {\n    struct S *n;\n  };\n\nWe are now more lazy when creating LLDB types. When encountering a\nrecord type (struct or union) we create a forward declaration and only\ncomplete it when requested.\n\nDifferential revision: https://reviews.llvm.org/D156498\n",
            "commit_timestamp": 1690695144.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690720063.227306,
            "elapsed_time": 7043.495567560196,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "2992d084774f44e7626a7d640fe6c30163db450e",
            "commit_message": "[clang-tidy] Do not warn on macros starting with underscore and lowercase letter in bugprone-reserved-identifier\n\nFixes #64130\n\nDifferential Revision: https://reviews.llvm.org/D156608\n",
            "commit_timestamp": 1690719048.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690734158.732408,
            "elapsed_time": 7505.601037502289,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7bd481d9afc83a99fbb5d0a92484ab9993942784",
            "commit_message": "[ORC] Add ExecutionSession::removeJITDylibs (plural), use it in endSession.\n\nThe ExecutionSession::removeJITDylibs operation will remove all JITDylibs in\nthe given list (i.e. first clear them, then remove them from the session).\n\nExecutionSession::endSession is updated to remove JITDylibs rather than just\nclearing them. This prevents new code from being added to any JITDylib once\nendSession has been called.\n",
            "commit_timestamp": 1690732302.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690748437.478598,
            "elapsed_time": 7344.565040111542,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "54e8cfe6d6d8add38056bf7e294c75f0d9ff3986",
            "commit_message": "[RISCV] Simplify some predicate functions in RISCVSubtarget.h. NFC\n\nRemove some redundancy.\n\nHasStdExtZve32f implies HasStdExtF\nHasStdExtZve64d implies HasStdExtD\nHasStdExtZvfbfwma implies HasStdExtZvfbfmin\n",
            "commit_timestamp": 1690745870.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690764690.869877,
            "elapsed_time": 7793.997010946274,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "75f770a68f70498f0b5229597f70dd8204c66e7c",
            "commit_message": "[BOLT][DWARF] Update handling of size 1 ranges and fix sub-programs with ranges\n\nWhen output range is only one entry, and input is low_pc/high_pc do not convert\nto ranges. This helps with size of .debug_ranges/.debug_rnglists. It also helps\nwhen either low_pc/high_pc is 0. We not generating potentially invalid ranges\nthat result in LLDB error.\n\nAlso fixed handling of DW_AT_subprogram with ranges. This can be created with\n-fbasic-block-sections=all.\n\nReviewed By: maksfb\n\nDifferential Revision: https://reviews.llvm.org/D156374\n",
            "commit_timestamp": 1690763552.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690776999.652784,
            "elapsed_time": 8791.34377026558,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "beb89e7fc0026bd04ce1da2d2d0f171a8293eecc",
            "commit_message": "Revert \"[flang][test] Update %flang tests after D156363\"\n\nThis reverts commit 7141c5b113a0c4e06aed3451ec83e984b1cb2f18\nafter the base commit D156363 was reverted.\n",
            "commit_timestamp": 1690773416.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690791350.0732,
            "elapsed_time": 7639.209570169449,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "063b37e7b40ace03184923213bc9ead6aadee540",
            "commit_message": "Reapply [IR] Mark and/or constant expressions as undesirable\n\nReapply after D156401, which stops PatternMatch from recognizing\nbinop constant expressions, which should avoid the infinite loops\nand assertion failures this patch previously exposed.\n\n-----\n\nIn preparation for removing support for and/or expressions, mark\nthem as undesirable. As such, we will no longer implicitly create\nsuch expressions, but they still exist.\n",
            "commit_timestamp": 1690790064.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690805884.434159,
            "elapsed_time": 7487.561123371124,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "da1f1b229246a64ebf385a133c5528a8ce622731",
            "commit_message": "Prevent extraneous copy in f752265231c2d15590a53e45bcc850acf2450dfc\n\nCommit f752265231c2d15590a53e45bcc850acf2450dfc uses\nextraneous copy to the loop variable. Fixing the same\n",
            "commit_timestamp": 1690804879.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690820084.94971,
            "elapsed_time": 7459.282187461853,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "cce35994bb7294d273478b5756f760c4137e1194",
            "commit_message": "[Object] Fix grammar mistake in the comment\n\nUpdate comment in previous commit from D156603.\n",
            "commit_timestamp": 1690818322.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690834757.693984,
            "elapsed_time": 9018.040891647339,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5fbee1c6e300eee9ce9d18275bf8a6de0a22ba59",
            "commit_message": "[PassRegistry] Add verify-fixpoint to instcombine parameter string\n\nFollow up to commit 41895843b5915bb,\n\"[InstCombine] Only perform one iteration\".\n\nThis will make sure verify-fixpoint/no-verify-fixpoint is mentioned\nwhen doing \"opt -print-passes\".\n",
            "commit_timestamp": 1690832712.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690849053.844376,
            "elapsed_time": 6985.214593172073,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "42c9354a928d4d9459504527085fccc91b46aed3",
            "commit_message": "Revert \"Reland \"[LoongArch] Support -march=native and -mtune=\"\"\n\nThis reverts commit c56514f21b2cf08eaa7ac3a57ba4ce403a9c8956. This\ncommit adds global state that is shared between clang driver and clang\ncc1, which is not correct when clang is used with `-fno-integrated-cc1`\noption (no integrated cc1). The -march and -mtune option needs to be\nproperly passed through cc1 command-line and stored in TargetInfo.\n",
            "commit_timestamp": 1690847826.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690863529.243105,
            "elapsed_time": 8996.609743833542,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "3e386b227886e2fb77b0c1e9182026c4e049f346",
            "commit_message": "[InstSimplify] Remove the remainder loop if we know the mask is always true\n\nWe check the loop trip count is known a power of 2 to determine\nwhether the tail loop can be eliminated in D146199.\nHowever, the remainder loop of mask scalable loop can also be removed\nIf we know the mask is always going to be true for every vector iteration.\nDepend on the assume of power-of-two vscale on D155350\n\nproofs\uff1a https://alive2.llvm.org/ce/z/FkTMoy\n\nFix https://github.com/llvm/llvm-project/issues/63616.\n\nReviewed By: goldstein.w.n, nikic, david-arm, paulwalker-arm\nDifferential Revision: https://reviews.llvm.org/D154953\n",
            "commit_timestamp": 1690860020.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690877893.690009,
            "elapsed_time": 7345.99453663826,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ccd7f0f1c38966b3e5e0a231e27152f67c6b7dc8",
            "commit_message": "[mlir][memref][transform][python] Create mix-in for MemRefMultiBufferOp.\n\nCreate a mix-in class with an overloaded constructor that makes the\nreturn type optional.\n\nReviewed By: ftynse\n\nDifferential Revision: https://reviews.llvm.org/D156561\n",
            "commit_timestamp": 1690876600.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690892276.982676,
            "elapsed_time": 6770.945392847061,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "cd921e0fd79cd9bd2ab2ee1820476810847f5516",
            "commit_message": "[MISched] Do not erase resource booking history for subunits.\n\nWhen dealing with the subunits of a resource group, we should reset\nthe subunits availability at the first avaiable cycle of the resource\nthat contains the subunits. Previously, the reset operation was\nreturning cycle 0, effectively erasing the booking history of the\nsubunits.\n\nWithout this change, when using intervals for models have make use of\nsubunits, the erasing of resource booking for subunits can raise the\nassertion \"A resource is being overwritten\" in\n`ResourceSegments::add`. The test added in the patch is one of such\ncases.\n\nReviewed By: andreadb\n\nDifferential Revision: https://reviews.llvm.org/D156530\n",
            "commit_timestamp": 1690891237.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690906522.143572,
            "elapsed_time": 7036.334915876389,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "bd077e98e463933e72bbd7bd03c6432d529e710c",
            "commit_message": "Released restriction that prevented implicit dynamic-to-static dimension type cast in TOSA ops.\n\nReviewed By: jpienaar, gflegar\n\nDifferential Revision: https://reviews.llvm.org/D156714\n",
            "commit_timestamp": 1690905428.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690920872.885387,
            "elapsed_time": 7588.074256181717,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fdbe9312b1c626ea61a2456db94cd52109ff1a50",
            "commit_message": "[mlir][sparse] Adding getters/setters to `DimLvlMap`\n\nDepends On D156768\n\nReviewed By: aartbik\n\nDifferential Revision: https://reviews.llvm.org/D156770\n",
            "commit_timestamp": 1690919745.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690935700.666012,
            "elapsed_time": 9345.641000509262,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "1f0d24ce24e92ed69f949d6974b87a10af27bd2b",
            "commit_message": "update_llc_test_checks: Fix broken amdgpu test\n\nUse the correct address space for alloca. Also use opaque pointers.\n",
            "commit_timestamp": 1690934421.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690949730.445401,
            "elapsed_time": 7436.576730489731,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "91b7952afc82f90e7b810701d9d5c776a8e21688",
            "commit_message": "[ASTImporter] Fix corrupted RecordLayout caused by circular referenced fields\n\nUnaryOperator(&)'s creation might need layout of some records\nwhose fields importation are still on fly, the layout is incorrectly\ncomputed and cached. Clients relying on this will not work properly\nor crash direclty (e.g StaticAnalyzer's MemRegion.cpp (calculateOffset)).\n\nUse UnaryOperator::CreateEmpty() instead of UnaryOperator::Create()\nto avoid this computation.\n\nFixes https://github.com/llvm/llvm-project/issues/64170\n\nReviewed By: aaron.ballman, balazske, shafik\n\nDifferential Revision: https://reviews.llvm.org/D156201\n",
            "commit_timestamp": 1690946470.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690964259.48366,
            "elapsed_time": 7308.329812288284,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c2093b85044d87805c39267c65ac9032d5454e0e",
            "commit_message": "[AMDGPU] Add target features for GDS and GWS\n\nGFX9 subtargets from GFX90A onwards lack GDS but still have GWS.\n\nDifferential Revision: https://reviews.llvm.org/D156713\n",
            "commit_timestamp": 1690963327.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690978599.553659,
            "elapsed_time": 7151.072760820389,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "abb09a6788c142e4da728c23c29e2f36c06aea59",
            "commit_message": "Fix LLVM Sphinx build\n\nThis addresses issues found by:\nhttps://lab.llvm.org/buildbot/#/builders/30/builds/38316\n\nas well as issues found when building locally.\n",
            "commit_timestamp": 1690977201.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1690993188.882717,
            "elapsed_time": 7539.337713479996,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8ea274b46beb01756c2b26743fa165d3cbdeb355",
            "commit_message": "[VPlan] Fix in-loop reduction chains using VPlan def-use chains (NFCI)\n\nUpdate adjustRecipesForReductions to directly use the VPlan def-use\nchains for in-loop reductions to collect the reduction operations that\nneed adjusting.\n\nThis allows the removal of\n * ReductionChainMap\n * recording of recipes for instruction in the reduction chain\n * removes late uses of getVPValue\n * removes to need for removeVPValueFor.\n\nReviewed By: Ayal\n\nDifferential Revision: https://reviews.llvm.org/D155845\n",
            "commit_timestamp": 1690992269.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691007434.786752,
            "elapsed_time": 9103.911113023758,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "49d41de57896e935cd5726719c5208bce22694ae",
            "commit_message": "MachineSink: Fix strict weak ordering in GetAllSortedSuccessors\n\nCodeGen/X86/pseudo_cmov_lower2.ll fails using libc++ debug mode\n(D150264) without this change.\n\nReviewed By: MaskRay, aeubanks\n\nDifferential Revision: https://reviews.llvm.org/D155811\n",
            "commit_timestamp": 1691005975.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691022158.308073,
            "elapsed_time": 8290.0258436203,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0834355227c0f521de0165ea0aae173174a51f84",
            "commit_message": "[RISCV] Add VP patterns for vwsll.[vv,vx,vi]\n\nThis patch adds patterns for the existing riscv_shl_vl VL node.\n\nReviewed By: craig.topper\n\nDifferential Revision: https://reviews.llvm.org/D156915\n",
            "commit_timestamp": 1691019793.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691036294.107003,
            "elapsed_time": 7283.321365118027,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e545392b1de304d3bf2776f671cb7327e335b90b",
            "commit_message": "[HLSL] Add reversebits library function\n\nThis change exposes the reversebits library function for HLSL, excluding floating point types.\nThe reversebits function is supported for all scalar, vector, and matrix types.\n\nThe full documentation of the HLSL reversebits function is available here:\nhttps://learn.microsoft.com/en-us/windows/win32/direct3dhlsl/reversebits\n\nReviewed By: python3kgae\n\nDifferential Revision: https://reviews.llvm.org/D156933\n",
            "commit_timestamp": 1691034640.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691050519.590287,
            "elapsed_time": 7260.669469118118,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d0dc887d7ed285688004c75de3784cfe94febd34",
            "commit_message": "[Driver] Remove references to Solaris 12\n\nSolaris 12 was re-christened as Solaris 11.4 while still in beta, so all\nreferences are long obsolete and can be removed.\n\nTested on `amd64-pc-solaris2.11`.\n\nDifferential Revision: https://reviews.llvm.org/D156861\n",
            "commit_timestamp": 1691049265.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691065119.54736,
            "elapsed_time": 7445.844793081284,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "067ecad620b682ebd1003621edd354f31f31ea2c",
            "commit_message": "[Flang][OpenMP] Convert elementTypeAttr for AtomicRead Op\n\nConvert the elementTypeAttr of AtomicRead Op for LLVMConversion.\nThis is required when the elementType is non-integer, non-real.\n\nReviewed By: NimishMishra\n\nDifferential Revision: https://reviews.llvm.org/D155817\n",
            "commit_timestamp": 1691063366.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691079397.181213,
            "elapsed_time": 7278.979920387268,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "dbf798fa646811c03e40c25f9bb3a456267c5a73",
            "commit_message": "[mlir] Fix generating checks for multiple funcs in generate-test-checks\n\nThis regressed in D154458 due to the added tracking of used variable\nnames that now also has to be cleared alongside the counter.\n\nReviewed By: rafaelubalmw, c-rhodes, awarzynski\n\nDifferential Revision: https://reviews.llvm.org/D156547\n",
            "commit_timestamp": 1691078103.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691093671.903761,
            "elapsed_time": 6570.243794679642,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "9a3f0cd717f68ccf9e348bce2d76a2372482f4f2",
            "commit_message": "Fix crash in lldb-vscode when missing function name\n\nSummary:\nIn cases where the PC has no function name, lldb-vscode crashes.\n\n`lldb::SBFrame::GetDisplayFunctionName()` returns a `nullptr`, and when we\nattempt to construct an `std::string`, it raises an exception.\n\nTest plan:\nThis can be observed with creating a test file (credit to @clayborg for\nthe example):\n```\nint main() {\n  typedef void (*FooCallback)();\n  FooCallback foo_callback = (FooCallback)0;\n  foo_callback(); // Crash at zero!\n  return 0;\n}\n```\nand attempting to debug the file through VSCode.\n\nI add a test case in D156732 which should cover this.\n\nDifferential Revision: https://reviews.llvm.org/D156970\n",
            "commit_timestamp": 1691092597.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691107959.857569,
            "elapsed_time": 5164.757710933685,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "08dc847d55fbdfa7ff6cb8034633139df0199562",
            "commit_message": "[lldb][NFCI] Add SBTraceCursor.h to swig headers file\n\nDifferential Revision: https://reviews.llvm.org/D156934\n",
            "commit_timestamp": 1691106077.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691122550.51802,
            "elapsed_time": 7437.107741355896,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8fd56ea11256f220502fe9819b496b15582f8d1e",
            "commit_message": "[clang][deps] NFC: Speed up canonical context hash computation\n\nThis patch makes use of the infrastructure established in D157046 to speed up computation of the canonical context hash in the dependency scanner. This is somewhat hot code, since it's ran for all modules in the dependency graph of every TU.\n\nI also tried an alternative approach that tried to avoid allocations as much as possible (essentially doing `HashBuilder.add(Arg.toStringRef(ArgVec))`), but that turned out to be slower than approach in this patch.\n\nNote that this is not problematic in the same way command-line hashing used to be prior D143027. The lambda is now being called even for constant strings.\n\nDepends on D157046.\n\nReviewed By: benlangmuir\n\nDifferential Revision: https://reviews.llvm.org/D157052\n",
            "commit_timestamp": 1691120194.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691137091.501527,
            "elapsed_time": 7395.961035013199,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "76cfdbe2546f6e278e5c37f5607b0fbc36086a76",
            "commit_message": "[RegScavenger] Remove support for forwards register scavenging\n\nDifferential Revision: https://reviews.llvm.org/D156987\n",
            "commit_timestamp": 1691135535.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691151557.558076,
            "elapsed_time": 9387.303550720215,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "2532b68f684c25d98d6b25be2814bef0fd164332",
            "commit_message": "[TableGen]  Do not compile CombineRuleBuilder::verify in release builds\n\nAvoids a warning about the function being unused.\n\nReviewed By: DavidSpickett\n\nDifferential Revision: https://reviews.llvm.org/D157085\n",
            "commit_timestamp": 1691150393.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691165758.017563,
            "elapsed_time": 7163.011624336243,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "df6b35e329ebecad6dc3bfb83183e482eb7a0020",
            "commit_message": "Fix Clang Sphinx bot\n\nAddresses the issue found in:\nhttps://lab.llvm.org/buildbot/#/builders/92/builds/48490\n",
            "commit_timestamp": 1691163815.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691179904.559893,
            "elapsed_time": 5162.042903423309,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fe195781ad2f1aaecd5def14f361f3590a17c79e",
            "commit_message": "[hwasan] Enable leak detection in hwasan for Fuchsia by default\n\nDifferential Revision: https://reviews.llvm.org/D157127\n",
            "commit_timestamp": 1691177358.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691194402.758485,
            "elapsed_time": 5645.637929677963,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "34fe58e0bc76eff973c9dd7daeddf13c38d184d9",
            "commit_message": "[lldb] Add a deduction guides for scoped_lock in OptionValue.cpp & ThreadList.cpp (NFC)\n\n/data/llvm-project/lldb/source/Interpreter/OptionValue.cpp:28:3: error: 'scoped_lock' may not intend to support class template argument deduction [-Werror,-Wctad-maybe-unsupported]\n  std::scoped_lock lock(m_mutex, other.m_mutex);\n  ^\n/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/mutex:692:11: note: add a deduction guide to suppress this warning\n    class scoped_lock\n          ^\n1 error generated.\n\n/data/llvm-project/lldb/source/Target/ThreadList.cpp:739:5: error: 'scoped_lock' may not intend to support class template argument deduction [-Werror,-Wctad-maybe-unsupported]\n    std::scoped_lock guard(GetMutex(), rhs.GetMutex());\n    ^\n/opt/rh/gcc-toolset-12/root/usr/lib/gcc/x86_64-redhat-linux/12/../../../../include/c++/12/mutex:692:11: note: add a deduction guide to suppress this warning\n    class scoped_lock\n          ^\n1 error generated.\n",
            "commit_timestamp": 1691193398.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691209046.730416,
            "elapsed_time": 7131.342781305313,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "43b8e86bf76648bf0f34f34bc0a606e527decc43",
            "commit_message": "[llvm-exegesis] enable memory annotation and subprocess tests\n\nThese tests were causing issues on the clang-cmake-x86_64-avx512-linux\nbuilder due to transient failures. I'm unable to reproduce the issue\nlocally now, so we'll see what happens. There were a couple changes in\nbetween disabling them and now that might have an impact.\n",
            "commit_timestamp": 1691207800.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691223349.822082,
            "elapsed_time": 7472.774591207504,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "69b19f284836f6059355167f904a2ab9f4b96992",
            "commit_message": "[RISCV] Use i64 instead of XLenVT in RV64 only patterns. NFC\n\nThis stops tablegen from generating unneeded entries in\nRISCVGenDAGISel.inc.\n",
            "commit_timestamp": 1691221766.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691237718.303213,
            "elapsed_time": 7493.970508098602,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "400fde92963588ae2b618626cb1ac73fd91c7d4d",
            "commit_message": "[Attributor] Add lightweight version for attribute deduction only.\n\nThis patch adds a lightweight instance of Attributor that only deduces\nattributes.\n\nThis is just an initial version with the goal to have a version that\nonly focuses on attributes to replace the function-attrs pass.\n\nThe initial version has a few open issues pending until default\nenablement, the main one probably being compile time. The main\nadditional functionality this will provide in general is propagating\nattributes to call sites.\n\nOpen issues:\n\n* compile time\n  The current version increase O3 +2.67% and ThinLTO +6.18% when replacing FunctionAttr\n   https://llvm-compile-time-tracker.com/compare.php?from=c4bb3e073548cf436d5fa0406e3ae75e94684dec&to=d992630a69c79a2587d736e6a88f448850413bd1&stat=instructions%3Au\n   Both are with an additional change to preserve more analysis, like FunctionAttrs CGSCC run.\n\n* some missed attribute inference\n\nReviewed By: jdoerfert\n\nDifferential Revision: https://reviews.llvm.org/D152081\n",
            "commit_timestamp": 1691232448.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691252249.770408,
            "elapsed_time": 7321.63268995285,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ce2ec065165b9c675394e182717b5dec8f3b0535",
            "commit_message": "[X86] Only fold broadcast with extract_vector_elt/scalar_to_vector if the scalar type matches the vector element type\n\nAvoid handling implicit extension/truncation with scalar<->vector transfers\n\nFixes #64439\n",
            "commit_timestamp": 1691247682.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691266800.10224,
            "elapsed_time": 8781.115060806274,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e1a9da3b49d481e5636028da96a633ac388100f3",
            "commit_message": "[IR] Remove CreateExtractInteger\n\nThe last use was removed by:\n\n  commit 5a7c2f17009460251cc27d9bda183d3272a419ba\n  Author: Eric Christopher <echristo@gmail.com>\n  Date:   Thu Jun 22 22:58:12 2017 +0000\n",
            "commit_timestamp": 1691264760.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691281168.687443,
            "elapsed_time": 7449.032003164291,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "14d57545b261f0ad09b7b4c78e6509c6f585448d",
            "commit_message": "[NFC][OpenMP] Fix compile warnings introduced in recent patches\n",
            "commit_timestamp": 1691278725.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691295294.975915,
            "elapsed_time": 7201.342021226883,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a3a7e76893b81934b9aaa4ecfe8f24496c48ddab",
            "commit_message": "[SelectionDAG] Add Opc_CheckPatternPredicate2 to support targets with more than 256 predicates.\n\nThis is an alternative to D156967 where I suggested the author\ncould use a VBR type.\n\nThis patch takes inspirations from Opc_EmitRegister2 that is used\nfor two byte registers.\n\nI'm assuming 1 or 2 byte predicates should be enough so we don't\nneed the fully generality of VBR.\n\nThis avoids impacting the table size on targets that have more than\n128 predicates already like X86.\n\nReviewed By: bogner\n\nDifferential Revision: https://reviews.llvm.org/D157196\n",
            "commit_timestamp": 1691279985.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691309783.114344,
            "elapsed_time": 7315.395832777023,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "bd0ed0abc31fa5a49e87eeca7aa872e7f6e4d1e7",
            "commit_message": "[Clang][SemaCXX] Add unused warning for variables declared in condition expressions\n\nThis patch marks the declarations with initializations in condition expressions such as\nif (int var = init) as unreferenced so that -Wunused can warn on them.\n\nFixes https://github.com/llvm/llvm-project/issues/61681\n\nReviewed By: cor3ntin\nDifferential Revision: https://reviews.llvm.org/D152495\n",
            "commit_timestamp": 1691306649.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691324247.060773,
            "elapsed_time": 8897.708087444305,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b8e297d1af5ae42e81b4c79e14a6d2427db0311b",
            "commit_message": "[OpenMP][libomptarget] Improve kernel initialization in plugins\n\nThis patch modifies the plugins so that the initialization of KernelTy objects\nis done in the init method. Part of the initialization was done in the\nconstructKernelEntry method. Now this method is called constructKernel\nand only allocates and constructs a KernelTy object.\n\nThis patch prepares the kernel class for the new implementation of device\nreductions.\n\nDifferential Revision: https://reviews.llvm.org/D156917\n",
            "commit_timestamp": 1691315638.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691338498.937478,
            "elapsed_time": 7527.556481122971,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ffc5ed976a47b28a7b59673614e6f0bac770c4a9",
            "commit_message": "[AArch64][GISel] Expand handling for G_FABS to more vector types.\n\nThis now reuses the existing lowering for G_FMIN/MAX for G_FABS too, which can\nhandle more type successfully. We can hopefully reuse the same pattern action\ndefinition for other fp operations too.\n",
            "commit_timestamp": 1691330305.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691352974.238617,
            "elapsed_time": 7426.10581946373,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "aac8acb11551225b6a8083102e828154e3e76e47",
            "commit_message": "[VPlan] Model masked assumes as replicate recipes, drop them (NFCI).\n\nReplace ConditionalAssume set by treating conditional assumes like other\npredicated instructions (i.e. create a VPReplicateRecipe with a mask)\nand later remove any assume recipes with masks during VPlan cleanup.\n\nThis reduces coupling of VPlan construction and Legal by removing a\nshared set between the 2 and results in a cleaner code structure\noverall.\n\nReviewed By: Ayal\n\nDifferential Revision: https://reviews.llvm.org/D157034\n",
            "commit_timestamp": 1691351784.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691367351.42487,
            "elapsed_time": 6978.234280586243,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ef888bc67c726deb8c74ea32e7c8c9ace756b667",
            "commit_message": "[HIP] Make test rocm-detect.hip more stable\n\nSome downstream clang is configured to add -rpath to HIP runtime for ld.\nAlso clang may use code object version by default.\n\nMake this test result not affected by those.\n\nReviewed by: Joseph Huber\n\nDifferential Revision: https://reviews.llvm.org/D157243\n",
            "commit_timestamp": 1691359689.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691381734.511818,
            "elapsed_time": 7384.248557329178,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4225f54bf576daf1555de44f71670bbc7c7e5923",
            "commit_message": "[InstCombine] Fold abs of known sign operand when source is sub\n\nabs(x-y) --> x-y where x >= y, done on D122013\nabs(x-y) --> y-x where x <= y\n\nproofs: https://alive2.llvm.org/ce/z/KkeEsd\n\nReviewed By: goldstein.w.n, nikic\nDifferential Revision: https://reviews.llvm.org/D156499\n",
            "commit_timestamp": 1691380511.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691396171.564503,
            "elapsed_time": 7529.643394708633,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "af07ec316fee636292668cd5a8c1fabcb9091a96",
            "commit_message": "[JITLink][PowerPC] Enable more tests for ppc64 big-endian target. NFC.\n",
            "commit_timestamp": 1691394778.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691410631.612908,
            "elapsed_time": 8870.249684810638,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0b17e9d2859acfec2cf757472f3822f6b5aad020",
            "commit_message": "[VPlan] Move VPRecipeWithIRFlags::getFastMathFlags. (NFCI)\n\nSplit off suggested refactoring from D157144. Also adds a assert to make\nsure this is only used when OpType is FPMathOp.\n",
            "commit_timestamp": 1691408153.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691424701.277901,
            "elapsed_time": 5241.4375331401825,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fab49721b4ef0b5079194bc09528df78f38c32a8",
            "commit_message": "Revert \"[Clang][OpenMP] Support for Code Generation of loop bind clause\"\n\nThis reverts commit 4097a24584121dba562d471fab97d3dfec1b5bff.\nBreaks tests on macOS, see https://reviews.llvm.org/rG4097a2458412#1235854\n",
            "commit_timestamp": 1691424114.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691439749.906713,
            "elapsed_time": 9717.836622953415,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7cc615413fd7c93421052a193bc3e114465747c9",
            "commit_message": "[RISCV] Add back handling of X > -1 to ISD::SETCC lowering.\n\nThere are cases where the -1 doesn't become visible until lowering\nso the folding doesn't have a chance to run.\n\nI think in these cases there is a missed DAGCombine for truncate (undef),\nwhich I may fix separately, but RISC-V backend should protect itself.\n\nFixes #64503.\n\nReviewed By: asb\n\nDifferential Revision: https://reviews.llvm.org/D157314\n",
            "commit_timestamp": 1691438457.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691453999.30034,
            "elapsed_time": 7479.134444952011,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "211692137af45fcf6d6b14582e004a746f9e5b2e",
            "commit_message": "[InstCombine] Fold `select` of `srem` and conditional add\n\nSimplify a pattern that may show up when computing\nthe remainder of euclidean division. Particularly,\nwhen the divisor is a power of two and never negative,\nthe signed remainder can be folded with a bitwise and.\n\nFixes 64305.\n\nProofs: https://alive2.llvm.org/ce/z/9_KG6c\n\nDifferential Revision: https://reviews.llvm.org/D156811\n",
            "commit_timestamp": 1691452936.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691468300.086562,
            "elapsed_time": 7509.084926843643,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6e07e90890d61b1be19d3f5fbf00ea7430068325",
            "commit_message": "[PPC32] Parse bl __tls_get_addr(x@tlsgd)@plt+32768\n\nPPC32 -fpic/-fPIC generates `bl __tls_get_addr(x@tlsgd)@PLT` or\n`bl __tls_get_addr(x@tlsgd)@PLT+32768`.\n`powerpc-linux-gnu-gcc -fPIC` generates `bl __tls_get_addr+32668(x@tlsgd)@plt`.\n\nThese expressions can be parsed by GNU assembler but not by the integrated\nassembler. Add the support.\n\nDifferential Revision: https://reviews.llvm.org/D153206\n",
            "commit_timestamp": 1691462728.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691482743.607075,
            "elapsed_time": 8824.400058984756,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "575310330bd503287fd8959a87b2b6efab2f3067",
            "commit_message": "[libc][doc] Update macros documentation\n\nUpdate documentaiton now that macros are laid out in a more structured way.\n\nReviewed By: sivachandra\n\nDifferential Revision: https://reviews.llvm.org/D143911\n",
            "commit_timestamp": 1691481750.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691496854.851213,
            "elapsed_time": 5576.3859968185425,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b6d994de0f1fadff7e135dcd96c3eb06e4c1e88a",
            "commit_message": "[VPlan] Address post-commit suggestions for af635a554 (NFC).\n",
            "commit_timestamp": 1691495974.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691511573.187988,
            "elapsed_time": 9025.07383775711,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "27e15513dacf9f6ad1e77465fea5c9bf36f075f0",
            "commit_message": "[bazel] Add '$(STACK_FRAME_UNLIMITED)' to //mlir:Analysis\n\nThis target goes over the limit in some build modes.\n",
            "commit_timestamp": 1691510161.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691525716.105679,
            "elapsed_time": 6946.44061255455,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "211c9752c8200fbb3ff7be1f6aa98037901758ce",
            "commit_message": "[mlir][NVVM] Adds the NVVM target attribute.\n\n**For an explanation of these patches see D154153.**\n\nCommit message:\nThis patch adds the NVVM target attribute for serializing GPU modules into\nstrings containing cubin.\n\nDepends on D154113 and D154100 and D154097\n\nReviewed By: mehdi_amini\n\nDifferential Revision: https://reviews.llvm.org/D154117\n",
            "commit_timestamp": 1691522496.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691540181.1659,
            "elapsed_time": 6700.875254154205,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a7f0195b440499483839ba284b7c24c4c707a866",
            "commit_message": "[scudo] secondary allocator cache optimal-fit retrieval\n\nchanged cache retrieve algorithm to an \"optimal-fit\" which immediate\nreturns blocks that are less than 110% of the requested size. This\nreduces memory waste while still allowing for an early return without\ntraversing the entire array of cached blocks\n\nReviewed By: cferris, Chia-hungDuan\n\nDifferential Revision: https://reviews.llvm.org/D157155\n",
            "commit_timestamp": 1691537851.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691554512.208872,
            "elapsed_time": 7386.831998586655,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ebb0a210995dcf69d9696f8e14629e1378e63a21",
            "commit_message": "[GlobPattern] Update invalid glob pattern diagnostic for unmatched '['\n\nUpdate this diagnostic to mention the reason (unmatched '['), matching\nthe other diagnostic about stray '\\'. The original pattern is omitted,\nas some users may mention the original pattern in another position, not\nrepeating it.\n",
            "commit_timestamp": 1691551510.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691569027.543098,
            "elapsed_time": 7171.253917694092,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c4769ef59c07bcb8c1ab0d9c0fe6e9ef319ffa6a",
            "commit_message": "[mlir][Conversion] Re-submit: Implement ConvertToLLVMPatternInterface (1)\n\nThis is a resubmit of the original D157391 change, which was reverted\nbecause it needed special handling for the async dialect. (I removed it\nfrom this change.)\n\nImplement ConvertToLLVMPatternInterface for more dialects: arith,\ncomplex, cf.\n\nDifferential Revision: https://reviews.llvm.org/D157391\n",
            "commit_timestamp": 1691567857.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691583438.471746,
            "elapsed_time": 7205.244945526123,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "2ef7e2085fd62615e32c3c71348c2ec0317d31c3",
            "commit_message": "[MLIR] Enable converting dialect attributes on external functions\n\nThis patch modifies the MLIR-to-LLVMIR translation pass to enable dialect\nattributes attached to external functions being processed by the corresponding\ndialect's translation interface via `amendOperation()`.\n\nDifferential Revision: https://reviews.llvm.org/D156988\n",
            "commit_timestamp": 1691581847.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691597826.291395,
            "elapsed_time": 7538.594732046127,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "bbce1fcbaa2768328816a01e680710d06e441828",
            "commit_message": "[mlir] Fix verifier for call debug locations\n\nD157096 introduces a new verifier for debug location\non call operation. `isDeclaration()` is actually not defined\nfor `LLVMFuncOp` and default to the interface definition that always\nreturn `false`. This leads to wrong diagnostic in some case as shown in the added test.\nUse `callee.isExternal()` instead that returns the\ndesired information.\n\nWe have seen this error being triggered during flang codegen.\n\nReviewed By: Dinistro, vzakhari\n\nDifferential Revision: https://reviews.llvm.org/D157447\n",
            "commit_timestamp": 1691597037.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691612102.023225,
            "elapsed_time": 7965.830514431,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f542497182851ea1d8f4689a402238c78c42b40a",
            "commit_message": "[test] Simplify MC/PowerPC/ppc32-R_PPC_DTPREL32-reloc.s after D156953\n\nApply a review comment from me that is unaddressed.\n",
            "commit_timestamp": 1691611174.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691626560.256112,
            "elapsed_time": 8898.263561487198,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ec129c28af58d8200538184cab0ec659c437095d",
            "commit_message": "[YAML][NFC] Use BumpPtrAllocator instead of unique_ptrs\n\nAvoid both memory leaks and expensive dynamic allocations by using\nSpecificBumpPtrAllocator for HNode types. It's expected they're not deallocated\nuntil the `Input` class is destroyed, so deallocating all at once works well in\nthis case.\n\nReduces YAML profile pre-processing time in BOLT from\n>   11.2067 (  3.2%)   1.6487 (  7.3%)  12.8554 (  3.5%)  12.8635 (  5.6%)  pre-process profile data\nto\n>   10.6613 (  3.1%)   1.6489 (  6.7%)  12.3102 (  3.3%)  12.3134 (  5.3%)  pre-process profile data\n\nReviewed By: dblaikie\n\nDifferential Revision: https://reviews.llvm.org/D155006\n",
            "commit_timestamp": 1691624545.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691640842.798978,
            "elapsed_time": 7942.2038397789,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "9be8892908d49c19fd6c9fc930d0f41276c3e345",
            "commit_message": "[asan] Fix GC of FakeFrames\n\nWhen FakeStack GC from altstack, it may see default stack on lower\naddressed and incorectly disard all frames.\n\nFixes bug exposed by D153536.\n\nReviewed By: kstoimenov\n\nDifferential Revision: https://reviews.llvm.org/D157552\n",
            "commit_timestamp": 1691639243.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691655617.910662,
            "elapsed_time": 10373.174070119858,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "513d47c65aa64fa25a1848de3a1cb0bdacc36a90",
            "commit_message": "[FunctionAttrs] Extract some code into separate functions (NFC)\n\nTo reduce diff in a future patch.\n",
            "commit_timestamp": 1691654563.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691669838.051332,
            "elapsed_time": 7964.8712837696075,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7d259b36d2e8148d13087844e6494ad3a5c63edf",
            "commit_message": "Revert \"[Sema] Fix handling of functions that hide classes\"\n\nThis reverts commit d031ff38779bd688c514136dbdcce3169ee82b6e.\nSee https://reviews.llvm.org/D154503#4576393 for a reproducer and\ndetails.\n",
            "commit_timestamp": 1691669160.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691684200.078773,
            "elapsed_time": 7818.017461299896,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b1ada7a1d31ee28a7c0e57268c6c6fe24931f25d",
            "commit_message": "[DAG] Support store merging of vector constant stores (try 2)\n\nOriginal commit didn't handle the case where one of the stores was a\ntruncating store of the build_vector.  The existing codepath produced\nwrong code (which thankfully also failed asserts) instead of guarding\nagainst unexpected types.  Original commit message follows..\n\nRan across this when making a change to RISCV memset lowering. Seems\nvery odd that manually merging a store into a vector prevents it from\nbeing further merged.\n\nDifferential Revision: https://reviews.llvm.org/D156349\n",
            "commit_timestamp": 1691682845.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691698378.2712,
            "elapsed_time": 7773.513194322586,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8a15bdb5e637f81041591d97bea0267b5f053f16",
            "commit_message": "[NFC][xray] Fix enable_if usage in XRay.h\n\nThe original usage of enable_if does not actually lookup\nthe nested type called type, so the SFINAE does not kick in.\n\nDifferential Revision: https://reviews.llvm.org/D157240\n",
            "commit_timestamp": 1691696220.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691713003.153113,
            "elapsed_time": 7217.748050689697,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5a4171efdf5dcc640de3af5fdfdc8f022af31894",
            "commit_message": "[flang] Fix -Wstring-conversion in PPCIntrinsicCall.cpp (NFC)\n\n/Users/jiefu/llvm-project/flang/lib/Optimizer/Builder/PPCIntrinsicCall.cpp:1785:16: error: implicit conversion turns string literal into bool: 'const char[21]' to 'bool' [-Werror,-Wstring-conversion]\n        assert(\"invalid element size\");\n        ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~\n",
            "commit_timestamp": 1691711761.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691727354.102209,
            "elapsed_time": 7577.549515008926,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "14292d9f1e87cab7801de7a4a78ee52510013a67",
            "commit_message": "[libcxx] Fix typos in documentation\n",
            "commit_timestamp": 1691718259.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691741899.910134,
            "elapsed_time": 7710.452909946442,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "59d558a37850611f9b63a5c1a8bfe87a9606c81e",
            "commit_message": "[X86] Add test for PR64589 (NFC)\n",
            "commit_timestamp": 1691740345.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691756007.021449,
            "elapsed_time": 5527.319029569626,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6e0fc88836a8ecc4520f6be09d392c03e21d8b40",
            "commit_message": "Fix examples after C2x renaming\n\nThis amends 0ce056a814f8dbfd8d9b7720ce1df489c6ba5ddb and fixes an\nexample that was not built locally for me.\n",
            "commit_timestamp": 1691755277.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691770404.993892,
            "elapsed_time": 6743.925181150436,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d0e54e377b5771f3cafc8a4772710f25dc0ac437",
            "commit_message": "[AMDGPU] Extend CalculateByteProvider to capture vectors and signed\n\nDifferential Revision: https://reviews.llvm.org/D157133\n\nChange-Id: I9ba8727b4ac5a627de2f7d87d2169eb79e01f0ee\n",
            "commit_timestamp": 1691768837.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691785055.225924,
            "elapsed_time": 7363.049749135971,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e789bcbb967f391d4f641bc8fa0403a45039a592",
            "commit_message": "[clang][NFC] Robustify testcase\n\nProtect this testcase from 'cleanup' appearing in metadata due to a pathname.\n\nReviewed By: jroelofs, bruno\n\nDifferential Revision: https://reviews.llvm.org/D157661\n",
            "commit_timestamp": 1691783992.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691799379.615082,
            "elapsed_time": 7431.550515413284,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e86be1fd303ec3bed3b8ff8e7e871aa06e3d23fb",
            "commit_message": "ValueTracking: frexp never introduces poison\n",
            "commit_timestamp": 1691798098.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691813748.208366,
            "elapsed_time": 7470.484433174133,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6e4ea4eeba50d99e822015e42aba22b2c5a880ca",
            "commit_message": "add `owner` to OpResultsList. this is useful for when the list is empty and an element can't be used to fetch the owner.\n\nDifferential Revision: https://reviews.llvm.org/D157769\n",
            "commit_timestamp": 1691806146.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691828228.812975,
            "elapsed_time": 7770.771765708923,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "db11fd8bf4ce1b1ce08db6011ea7c22d030eb473",
            "commit_message": "[MLIR][NVVM] Change WgmmaMmaSyncOp to WgmmaMmaAsyncOp (NFC)\n\nWgmmaMmaSyncOp is asynchronous operation. There was a typo named op. This work fixes that.\n\nReviewed By: nicolasvasilache\n\nDifferential Revision: https://reviews.llvm.org/D157697\n",
            "commit_timestamp": 1691826911.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691842682.33592,
            "elapsed_time": 7752.579084634781,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "bd7c6e3c48e9281ceeaae3a93cc493b35a3c9f29",
            "commit_message": "[AMDGPU] Precommit lit test for wwm-reg AV spill pseudos D155646.\n",
            "commit_timestamp": 1691837298.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691857004.697502,
            "elapsed_time": 7660.445987462997,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "45500fa08acdf3849de9de470cdee5f4c8ee2f32",
            "commit_message": "[libc++] Fix the signature of std::rotl and std::rotr\n\n- Changed parameters type in `std::rotr` and `std::rorl` functions from `unsigned int` to `int`.\n- Implemented behaviour for negative parameter values.\n\nFixes #64544\n\nReviewed By: #libc, philnik\n\nSpies: arichardson, philnik, libcxx-commits\n\nDifferential Revision: https://reviews.llvm.org/D157569\n",
            "commit_timestamp": 1691855171.0
        },
        {
            "tool_version": "232.0.20230713.141352-eap09",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1691871445.172584,
            "elapsed_time": 7843.6981637477875,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "da56750f82a60b5872679424fc6ae78a42c786a0",
            "commit_message": "[RISCV] Change naming of vector pseudos with scalar FP operand.\n\nWe need a pseudo for each scalar FP register class. Previously\nwe distinquished the pseudos by naming them with F16, F32, F64, or\nBF16 in place of the F in the normal instruction name.\n\nBecause these strings can appear in other parts of the name we had\nto do things like matching \"_VBF16\" to \"_VF\".\n\nThis patch replaces the F16, F32, F64 strings with FPR16, FPR32, and\nFPR64. We also use FPR16 for BF16 since that is the scalar register\nclass for bf16.\n\nSince the FPR16/32/64 string does not anywhere else in the pseudo\nnames, we can use this to simplify the string replacements. This\nalso allows us to simplify some BF16 related code.\n\nReviewed By: wangpc\n\nDifferential Revision: https://reviews.llvm.org/D157749\n",
            "commit_timestamp": 1691864447.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695384999.971387,
            "elapsed_time": 7316.749178886414,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b07005aba06cafe484ea1df9fef003ff61e2c222",
            "commit_message": "[Flang][OpenMP] Create versions of a few tests with HLFIR lowering\n",
            "commit_timestamp": 1695383481.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695399499.325152,
            "elapsed_time": 7857.227303504944,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "62a3d84f5cef96bd2d4d349807e1d55a8e077963",
            "commit_message": "[libc][NFC] Extend ErrnoSetterMatcher to test expected inequalities. (#67153)\n\nBefore this change, ErrnoSetterMatcher only allowed testing for equality\r\nof the expected return and errno values. This change extends it to allow\r\ntesting for expected inequalities of the return and errno values. The\r\ntest libc.test.src.stdio.fileop_test has been updated to use the\r\nErrnoSetterMatcher with tests for inequalities.",
            "commit_timestamp": 1695398350.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695414069.687252,
            "elapsed_time": 9803.569010019302,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "64d1ceaa3884608c97f8457de6ab64a038ea49d8",
            "commit_message": "Add command line option --no-trap-after-noreturn (#67051)\n\nAdd the command line option --no-trap-after-noreturn, which exposes the\r\npre-existing TargetOption `NoTrapAfterNoreturn`.\r\n\r\nThis pull request was split off from this one:\r\nhttps://github.com/llvm/llvm-project/pull/65876",
            "commit_timestamp": 1695413001.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695428280.137553,
            "elapsed_time": 7818.99774312973,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "12ee3a6f53db552b121b733ca21fb8c4f048398a",
            "commit_message": "[mlir][sparse] make high and 2:4 a level format, not a level property (#67206)\n\nAfter some internal discussion, we decided that these features were best\r\nrepresented as a separate format, and not a property.",
            "commit_timestamp": 1695426756.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695442620.019606,
            "elapsed_time": 7927.102456331253,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b8b4ee6b450766796b162b4811a6b3f723d07268",
            "commit_message": "[Support] Add [[nodiscard]] (NFC)\n",
            "commit_timestamp": 1695437908.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695457097.145233,
            "elapsed_time": 7738.725257396698,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "782f1a0d895646c364a53f9dcdd6d4ec1f3e5ea0",
            "commit_message": "[gn build] Port e5f169f91a86\n",
            "commit_timestamp": 1695444268.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695471802.743364,
            "elapsed_time": 10653.25516986847,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e06fc2b2e0651b60e8d21b46f9708bc74d8e4f16",
            "commit_message": "Fix: Distinguish CFI Metadata Checks in MergeFunctions Pass (#65963)\n\nThis diff fixes an issue in the MergeFunctions pass where two different\r\nControl Flow Integrity (CFI) metadata checks were incorrectly considered\r\nidentical. These merges would lead to runtime violations down the line\r\nas two separate objects contained a single destructor which itself\r\ncontained checks for only one of the objects.\r\n\r\nHere I update the comparison logic to take into account the metadata at\r\nllvm.type.test checks. Now, only truly identical checks will be\r\nconsidered for merging, thus preserving the integrity of each check.\r\n\r\nPrevious discussion: https://reviews.llvm.org/D154119",
            "commit_timestamp": 1695464909.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695485524.927707,
            "elapsed_time": 5660.307045221329,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a6e81df289ec21a535971469d117d2ebe6ccabf4",
            "commit_message": "[Workflow] Roll back some settings since they caused more issues\n\nThis needs more investigation.",
            "commit_timestamp": 1695484431.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695500374.771637,
            "elapsed_time": 9071.745139598846,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7df88212d43acd90b2fdd01e730375bcb238c6b5",
            "commit_message": "[ProfileData] Use llvm::byteswap instead of sys::getSwappedBytes (NFC)\n",
            "commit_timestamp": 1695499247.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695514777.623668,
            "elapsed_time": 8000.1973786354065,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "3f0bddb56ac33389e0a02444c6f67c7a42855582",
            "commit_message": "Use llvm::find (NFC)\n",
            "commit_timestamp": 1695511622.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695528993.700445,
            "elapsed_time": 8357.68263888359,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "186a4b3b657878ae2aea23caf684b6e103901162",
            "commit_message": "[LLVM][OpenMP] Allow OpenMPOpt to handle non-OpenMP target regions (#67075)\n\nCurrent OpenMPOpt assumes all kernels are OpenMP kernels (aka. with\r\n\"kernel\"\r\nattribute). This doesn't hold if we mix OpenMP code and CUDA code by\r\nlingking\r\nthem together because CUDA kernels are not annotated with the attribute.\r\nThis\r\npatch removes the assumption and added a new counter for those\r\nnon-OpenMP\r\nkernels.\r\n\r\nFix #66687.",
            "commit_timestamp": 1695522847.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695543430.050709,
            "elapsed_time": 7887.095913887024,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c97c28dfb3608a78cb70e99ecdc798f65941d46e",
            "commit_message": "[clang][Interp][NFC] Make a local variable const\n",
            "commit_timestamp": 1695542209.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695558057.289627,
            "elapsed_time": 9217.576036930084,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4c241a9335c3046e418e1b4afc162bc576c072fd",
            "commit_message": "[InstCombine] Fold `(-1 + A) & B` into `A ? 0 : B` where A is effectively a bool\n\nSolves issue https://github.com/llvm/llvm-project/issues/63321.\n\nThis patch explicitly folds `(-1 + A) & B` into `A ? 0 : B`. Additional trunc will be created when `A` is neither i1 nor <N x i1>.\n\nhttps://alive2.llvm.org/ce/z/pWv9jJ\n\nReviewed By: goldstein.w.n\n\nDifferential Revision: https://reviews.llvm.org/D153148\n",
            "commit_timestamp": 1695553847.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695572221.619634,
            "elapsed_time": 7747.536341905594,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b05f1d93469fbd645118739798e51f21a9e410de",
            "commit_message": "[InstCombine] Add pre-commit tests for PR57328. NFC.\n",
            "commit_timestamp": 1695567650.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695586628.157648,
            "elapsed_time": 7380.612751722336,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d2abe8dc662a94e6c9aca5b64af53c7f815b5701",
            "commit_message": "[InstCombine] Fold `icmp eq/ne min|max(X, Y), Z` (#67087)\n\nThis patch further improves the simplification of pattern `icmp eq/ne\r\nmin|max(X, Y), Z` as discussed in\r\n[D156238](https://reviews.llvm.org/D156238).\r\nWhen `X < Z`:\r\n`min(X, Y) == Z -> false`\r\n`min(X, Y) != Z -> true`\r\n`max(X, Y) == Z -> Y == Z`\r\n`max(Y, Z) != Z -> Y != Z`\r\nWhen `X > Z`:\r\n`max(X, Y) == Z -> false`\r\n`max(X, Y) != Z -> true`\r\n`min(X, Y) == Z -> Y == Z`\r\n`min(Y, Z) != Z -> Y != Z`\r\n\r\nAlive2:  https://alive2.llvm.org/ce/z/evkmaq",
            "commit_timestamp": 1695585589.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695601134.965698,
            "elapsed_time": 7418.451166152954,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "2c3cae3f01b10a2ba3745761e11b63a2b129eee9",
            "commit_message": "Remove unused clang::TargetInfo::adjustTargetOptions\n\nThe hook introduced by https://reviews.llvm.org/D22815 for AMDGPU was\nremoved by commit ce2258c1cd5dc9cf20040d1b1e540d80250c1435 in 2020.\n",
            "commit_timestamp": 1695598644.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695615359.633704,
            "elapsed_time": 7925.855309486389,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4c59f809c926567195da4030fd3f8d5b0f4db79f",
            "commit_message": "Coroutines: Cleanup typed pointer code in CoroFrame.cpp. NFC\n",
            "commit_timestamp": 1695612614.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695629760.890347,
            "elapsed_time": 7241.567437887192,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "214ce4da351f62d9c4341cf2d7c52ff38b6787a1",
            "commit_message": "[MLIR][Transform] Fix PrintOp::build with StringRef (#67052)\n\ntransform::PrintOp::build(OpBuilder &builder, OperationState &result,\r\nStringRef name) does not set name correctly. Calling\r\nPrintOp::build(builder, result, \"whatever name\") is going to end up with\r\na PrintOp with no name.\r\n\r\nThis patch fixes it by replicating the approach from tablegen created\r\ncode. Refer to\r\nbuild/mlir/include/mlir/Dialect/Transform/IR/TransformOps.cpp.inc",
            "commit_timestamp": 1695628708.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695644545.337524,
            "elapsed_time": 10802.315469264984,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b7ff03206d668cd5a620a9d4e1b22ea112ed56e3",
            "commit_message": "[Documentation] Replace recommonmark by myst-parser (#65664)\n\nRecommonmark has been deprecated, then archived last year. This was\r\ntracked by: https://github.com/llvm/llvm-iwg/issues/30\r\n\r\nSee https://github.com/readthedocs/recommonmark\r\n\r\nThis patch migrates all our doc to use myst\r\n\r\nAdditional details for bot maintainers: https://discourse.llvm.org/t/maintenance-required-on-sphinx-build-bots/73612",
            "commit_timestamp": 1695643359.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695658693.635397,
            "elapsed_time": 7561.797605752945,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7b70af297a255167b6d4e03a80626965d4739011",
            "commit_message": "[AMDGPU] Add IR lowering changes for preloaded kernargs\n\nPreloaded kernel arguments should not be lowered in the IR pass\nAMDGPULowerKernelArguments. Therefore it's necessary to calculate the\ntotal number of user SGPRs that are available for preloading and how\nmany SGPRs would be required to preload each argument to determine\nwhether we should skip lowering i.e. the argument will be preloaded\ninstead.\n\nReviewed By: bcahoon\n\nDifferential Revision: https://reviews.llvm.org/D156853\n",
            "commit_timestamp": 1695657247.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695673231.986095,
            "elapsed_time": 10243.22985959053,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a677a173273f7735a3a5447a47851591b984e7aa",
            "commit_message": "[mlir][py] Enable AsmState overload for operation.\n",
            "commit_timestamp": 1695669908.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695687427.695112,
            "elapsed_time": 7763.380135536194,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b7961f2cb97556bfc50f7828d5f869d96ab9352e",
            "commit_message": "[lldb] [debugserver] Preserve signing bits on lr in debugserver (#67384)\n\nIn https://reviews.llvm.org/D136620 I changed debugserver to stop using\r\nthe kernel-provided functions\r\narm_thread_state64_get_{pc,lr,sp,fp} to postprocess those four registers\r\non aarch64 systems after we thread_get_state() them. The kernel stores\r\nthese four registers with signing internally, either from the inferior\r\nprocess' actual signing, or its own.\r\n\r\nWhen a program had crashed by doing an authenticated BL to an address\r\nwith improper signing, the inferior process would crash and that\r\nimproperly signed pc would be given to debugserver via thread_get_state.\r\ndebugserver would run that through arm_thread_state64_get_pc() and then\r\ndebugserver would crash when authenticating & stripping the value, on\r\nnewer Mac hardware.\r\n\r\nTo avoid debugserver crashing on a crashed inferior process, I switched\r\nfrom using these system functions to strip the values, to simply\r\nclearing the bits outright in debugserver.\r\n\r\nHowever, lr is a special case where the inferior may have signed this\r\nvalue (against the stack pointer value at the time). Or it may not yet\r\nhave any authentication bits, right after a BL. In the latter case, the\r\nkernel will add its own auth bits for while it is stored inside the\r\nkernel. In the case of a user lr value, we cannot authenticate it in\r\ndebugserver without knowing the sp value it was signed against (and the\r\nway it is signed is not specified by the ABI) so an \"improperly\" signed\r\nlr (whatever that means) won't cause debugserver to crash.\r\n\r\ndebugserver can thread_get_state the inferior's lr, run it through\r\narm_thread_state64_get_lr(), and get the actual signed 64-bit value that\r\nthe inferior process is using. And the specifics of how that lr is\r\nsigned may be important for debugging the process, instead of how I am\r\ncurrently clearing the auth bits outright.\r\n\r\nThis patch reverts that change for lr only, and also adds a new logging\r\nto debugserver specifically for the four sp/fp/lr/pc values that\r\nthread_get_state hands to us, before we process them at all.",
            "commit_timestamp": 1695686545.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695701900.5355,
            "elapsed_time": 10177.81210899353,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6417ce4336ea2b239c9f7047169cda0b5f92c92b",
            "commit_message": "[LoongArch] Improve codegen for i8/i16 'atomicrmw xchg a, {0,-1}'\n\nSimilar to D156801 for RISCV.\n\nLink: https://github.com/rust-lang/rust/pull/114034\nLink: https://github.com/llvm/llvm-project/issues/64090\n\nReviewed By: SixWeining, xen0n\n\nDifferential Revision: https://reviews.llvm.org/D159252\n",
            "commit_timestamp": 1695699967.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695716269.342822,
            "elapsed_time": 8136.90943980217,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b797a6aede3dbdf7e2287e4fbde13f2550961d96",
            "commit_message": "[flang] Lower special bind(c) cases without binding labels (#65758)\n\n1. Deal with BIND(C,NAME=\"\")\r\n\r\nBIND(C,NAME=\"\") is different from BIND(C). The latter implies that there\r\nus a binding label which is the Fortran symbol name (no Fortran mangling\r\nmust be added like underscores). The former implies there is no binding\r\nlabel (the name in the object file must be the same as if it there was\r\nno BIND(C) attribute at all).\r\n\r\nThis is correctly implemented in the front-end, but lowering mistakenly\r\noverrode this in the code dealing with the case where BIND(C) is\r\ninherited from a procedure interface. Handling of  this last case is moved into name\r\nresolution.\r\n\r\n2. Deal with BIND(C) internal procedure\r\n\r\nAlso according to 18.10.2, BIND(C) does not give a p prevent name\r\nresolution from adding a label to them, otherwise,\r\nbindc_internal_proc.f90 was not going through semantics (bogus error\r\nabout conflicting global names). Nothing TODO in lowering other than\r\nremoving the TODO.",
            "commit_timestamp": 1695713377.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695730799.398794,
            "elapsed_time": 9885.583567142487,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a09e32e5fe13e3b64bef1defddf71a9e83022e76",
            "commit_message": "[InstSimplify] Respect UseInstrInfo in more folds\n\nSome folds using m_NUW, m_NSW style matchers were missed, make\nsure they respect UseInstrInfo.\n\nThis is part of #53218, but not a complete fix for the issue.\n",
            "commit_timestamp": 1695729243.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695745123.568129,
            "elapsed_time": 7999.958117008209,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "9555736ac6d02bdfa4f1d92ce764740cc6c5be24",
            "commit_message": "[BOLT][RISCV] Implement LO/HI relocations (#67444)\n\nImplement the following relocations used by the medlow code model and\r\nnon-PIE binaries:\r\n- R_RISCV_HI20\r\n- R_RISCV_LO12_I\r\n- R_RISCV_LO12_S",
            "commit_timestamp": 1695743651.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695759395.537811,
            "elapsed_time": 7535.9831755161285,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "210e8984fe1568889779baf5144d610b3f099604",
            "commit_message": "[lld/mac] Resolve defined symbols before undefined symbols in bitcode (#67445)\n\nPorts https://reviews.llvm.org/D106293 to bitcode, or\r\nhttps://github.com/llvm/llvm-project/commit/bd448f01a6 from ELF to\r\nMachO.\r\n\r\nSee also #59162 for some vaguely related discussion.",
            "commit_timestamp": 1695756711.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695773946.730203,
            "elapsed_time": 9281.54028916359,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "368d74932efa2a8782c5e5d0c956bd45fd1d04fa",
            "commit_message": "[DFSan] Fix sscanf wrapper handling %*d (the star skips capturing). (#67392)\n\nBug introduced in https://reviews.llvm.org/D153775",
            "commit_timestamp": 1695771688.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695788314.664435,
            "elapsed_time": 9523.03372335434,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "134ae13adaffcb80693819f498a28b2b1bbde9cf",
            "commit_message": "[compiler-rt] Fix instrprof-darwin-exports test (#67487)\n\n",
            "commit_timestamp": 1695786160.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695803015.03148,
            "elapsed_time": 9890.493425607681,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "913286baed9bf8dd5bc1763184228c2e5e3286ea",
            "commit_message": "[mlir][linalg] Add `SubsetInsertionOpInterface` to `linalg.copy` (#67524)\n\nThis commit enables empty tensor elimination on `linalg.copy` ops.",
            "commit_timestamp": 1695801877.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695817212.805286,
            "elapsed_time": 9761.512342453003,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "30fe8762446ca91a34174ab9c5dde34bde4d4394",
            "commit_message": "[mlir][cfg-to-scf] Fix invalid transformation when value is used in a subregion (#67544)\n\nThe current loop-reduce-form transformation incorrectly assumes that any\r\nvalue that is used in a block that isn't in the set of loop blocks is a\r\nblock outside the loop. This is correct for a pure CFG but is incorrect\r\nif operations with subregions are present. In that case, a use may be in\r\na subregion of an operation part of the loop and incorrectly deemed\r\noutside the loop. This would later lead to transformations with code\r\nthat does not verify.\r\n\r\nThis PR fixes that issue by checking the transitive parent block that is\r\nin the same region as the loop rather than the immediate parent block.",
            "commit_timestamp": 1695816174.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695831454.489072,
            "elapsed_time": 7662.6346089839935,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "339fc5e6b013dfdb185f1f1e9494076bd9d2a3cd",
            "commit_message": "[test] Mark test added in #67479 as XFAIL\n\nThis was merged after a different change caused the test to fail in the meantime.\n",
            "commit_timestamp": 1695829408.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695845795.241005,
            "elapsed_time": 7597.3596794605255,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "97bd6d60be8af4279efad1d2b064882574218028",
            "commit_message": "MCPseudoProbe: don't copy std::list. NFC\n",
            "commit_timestamp": 1695844843.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695860330.704355,
            "elapsed_time": 9662.543250799179,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "22433cc541ff706d9e845774ef1c8c959dc67799",
            "commit_message": "[Driver][test] Fix hexagon-toolchain-elf.c\n\n\"ld\" may match a build direcory path, making the `-SAME:` pattern fail.\n",
            "commit_timestamp": 1695858958.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695874598.762987,
            "elapsed_time": 8019.066827297211,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "11819a1031fc67ef216de380a918dc5f33646fc4",
            "commit_message": "[RISCV][NFC] Move some common class/multiclass from riscv_vector.td to riscv_vector_common.td (#67587)\n\nSince there are more vendor extensions that needs to implement\r\ncustom intrinsics, it's useful to move some common usages to\r\nriscv_vector_common.td.",
            "commit_timestamp": 1695871553.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695889126.794849,
            "elapsed_time": 7791.048006057739,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "cc627828f5176c6d75a25f1756d387d18539c1fb",
            "commit_message": "Pre-commit some PowerPC test cases\n",
            "commit_timestamp": 1695887474.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695903541.151804,
            "elapsed_time": 9703.689833641052,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ec8df0c7e3a3d9e6352a3d8c5c4540a9d0352ca0",
            "commit_message": "[LLDB] Skip TestTlsGlobals.py for Linux Arm/AArch64\n\nRecently added TLS linux support fails on Arm/AArch64. I am skiping test\nfor now and will investigate the issue later.\n",
            "commit_timestamp": 1695899801.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695918009.937497,
            "elapsed_time": 9370.776129245758,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d5ccbaff9892416d7fc2abebad01805acd111930",
            "commit_message": "Revert \"[Basic] Support 64-bit x86 target for UEFI\"\n\nThis reverts commit 315a407086b0ab302d0293b720d7f9b3e8f6ffa9.\nThe new test added fails to link the unit tests correctly and breaks\ncertain buildbots.\n",
            "commit_timestamp": 1695916890.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695932094.422799,
            "elapsed_time": 7449.815980195999,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "12866a2b87038abf2d69f2a6040a4ff4ce27b6cd",
            "commit_message": "[clang][modules] Use `FileEntryRef` in `ModuleMap` (2/2)\n",
            "commit_timestamp": 1695931166.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695946922.352546,
            "elapsed_time": 7910.515473127365,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "78c49743c7fb2353b1ca56d56f9ffda7f47e4bae",
            "commit_message": "[MLIR][Vector] Allow non-default memory spaces in gather/scatter lowerings (#67500)\n\nGPU targets can gather on non-default address spaces (e.g. global), so\r\nthis removes the check for the default memory space.",
            "commit_timestamp": 1695943232.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695961067.301151,
            "elapsed_time": 7864.542669296265,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ab472cd4ea12b916e53a9121cf72664cf2c9346a",
            "commit_message": "[flang] Split flang/test/Lower/math-lowering.f90. (#67600)\n\n",
            "commit_timestamp": 1695959032.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695975595.482394,
            "elapsed_time": 9562.498332977295,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b4afade17564c61e9baf8024f8cf6921bdb3bde3",
            "commit_message": "[InstCombine] Avoid use of ConstantExpr::getZExtOrBitcast() (NFC)\n\nUse the constant folding API instead. In the second case using\nIR builder should also work, but the way the instructions are\ncreated an inserted there is very unusual, so I've left it alone.\n",
            "commit_timestamp": 1695973483.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1695989690.532786,
            "elapsed_time": 6902.900442123413,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6dd96d6e80e9b3679a6161c590c60e0e99549b89",
            "commit_message": "[clang analysis][thread-safety] Handle return-by-reference... (#67776)\n\n...of guarded variables, when the function is not marked as requiring\r\nlocks:\r\n\r\n```\r\nclass Return {\r\n  Mutex mu;\r\n  Foo foo GUARDED_BY(mu);\r\n\r\n  Foo &returns_ref_locked() {\r\n    MutexLock lock(&mu);\r\n    return foo;  // BAD\r\n  }\r\n\r\n  Foo &returns_ref_locks_required() SHARED_LOCKS_REQUIRED(mu) {\r\n    return foo;  // OK\r\n  }\r\n};\r\n```\r\n\r\nReview on Phabricator: https://reviews.llvm.org/D153131",
            "commit_timestamp": 1695985864.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696004329.518022,
            "elapsed_time": 9795.225108623505,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c718336c4cb14e27aa88054cc30ee0c2fc6505d1",
            "commit_message": "Add option to dump IR to files instead of stderr (#66412)\n\nThis patch adds a flag to LLVM such that the output generated by the\r\n`-print-(before|after|all)`\r\nfamily of flags is written to files in a directory rather than to\r\nstderr.\r\n\r\nThis new flag is `-ir-dump-directory` and is used to specify where to\r\nwrite the files. No other flags are added, it just modifies the behavior\r\nof the print flags.\r\n\r\nThis is a second simplified version of the changes proposed in\r\nhttps://github.com/llvm/llvm-project/pull/65179.\r\n\r\nThis patch only adds support for the new pass manager. If this patch is\r\naccepted, similar support can be added to the legacy pass manager.\r\n\r\nCo-authored-by: Nuri Amari <nuriamari@fb.com>",
            "commit_timestamp": 1696002106.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696018806.95883,
            "elapsed_time": 9678.015743494034,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b915f60678c3033c466611be1119a46ba4b0869c",
            "commit_message": "[CodeGen] Don't treat thread local globals as large data (#67764)\n\nOtherwise they may mistakenly get the large section flag.",
            "commit_timestamp": 1696017413.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696033262.867868,
            "elapsed_time": 7948.765444517136,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f88f090a2ef1eae500db9c398059a0eb4907ab4e",
            "commit_message": "[libc] Correct 'memrchr' definition and re-enable on GPU (#67850)\n\nSummary:\nThis was disabled on the GPU because it conflicted with the definition\nin `glibc`. According to information online and in the `glibc`\nimplementation, the first argument should be a `const void *`. Fixing\nthis resolves the problem when exporting this to offloading languages.",
            "commit_timestamp": 1696029720.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696047437.487968,
            "elapsed_time": 7743.186006784439,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4b13c86d980af81fb9badc1b6b88f77f4faf5e53",
            "commit_message": "[ORC] Fix heap-use-after-free error in MachODebugObjectSynthesizer.cpp\n\nAt line 191, `addSymbol` takes the name by reference but does not make\nan internal copy to the string, meaning the local\n`optional<std::string>` would get freed and leave Orc with a dangling\npointer. Fix this by just using an `optional<StringRef>` instead.\n",
            "commit_timestamp": 1696040234.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696061976.434859,
            "elapsed_time": 10030.073004722595,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fef1bec39642d7733eae22d6e79ac07c779bdef5",
            "commit_message": "[X86]Remove X86-specific dead code in ScheduleDAGRRList.cpp (#67629)\n\nAfter patch https://github.com/llvm/llvm-project/pull/67288 landed,\r\nunfoldMemoryOperand would not return NewMIs whose size ==3. So the\r\nremoved line is useless.",
            "commit_timestamp": 1696060177.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696076178.756821,
            "elapsed_time": 7461.917389154434,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4346aaf05b66a204a7c21fad8e7673860e0270eb",
            "commit_message": "[llvm] Remove uses of Type::getPointerTo() (NFC)\n\n* Remove if its sole use is to support an unnecessary ptr-to-ptr bitcast\n  (remove the bitcast as well)\n* Replace with use of other APIs.\n\nNFC opaque pointer cleanup effort.\n",
            "commit_timestamp": 1696071341.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696090739.557777,
            "elapsed_time": 8004.548253297806,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d222c5ec47a09a3e120000e4a1006f4da7741256",
            "commit_message": "[C API] Fix LLVMGetOrdering/LLVMIsAtomicSingleThread for fence/memory instrs (#65228)\n\nFixes https://github.com/llvm/llvm-project/issues/65227\r\n\r\nLLVMGetOrdering previously did not support Fence instructions, and\r\ncalling it on a fence would lead to a bad cast as it\r\nassumed a load/store, or an AtomicRMWInst. This would either read a\r\ngarbage memory order, or assertion\r\n\r\nLLVMIsAtomicSingleThread did not support either Fence instructions,\r\nloads, or stores, and would similarly lead to a bad cast.\r\nIt happened to work out since the relevant types all have their synch\r\nscope ID at the same offset, but it still should be fixed\r\n\r\nThese cases are now fixed for the C API, and tests for these\r\ninstructions are added. The echo test utility now also supports cloning\r\nFence instructions, which it did not previously\r\n\r\n-----\r\n\r\nFrom what I can tell, there's no unified API to pull\r\n`getOrdering`/`getSyncScopeID` from, and instead requires casting to\r\nindividual types: if there is a better way of handling this I can switch\r\nto that",
            "commit_timestamp": 1696085551.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696104943.231449,
            "elapsed_time": 8172.244656801224,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a5686c2b5541c58c9a1dd760761c369124546f78",
            "commit_message": "[InstSimplify] Avoid use of ConstantExpr::getICmp. NFC (#67873)\n\n",
            "commit_timestamp": 1696104089.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696119531.159912,
            "elapsed_time": 7767.629121303558,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "dc1a2cb9718966e9050e32962dc86377088f2d7e",
            "commit_message": "[lldb][windows] Cover more symbols in LLDB_EXPORT_ALL_SYMBOLS\n\nFollowup to #67628 that relaxes the symbol regex a bit to cover more\nlldb_private symbols.\n",
            "commit_timestamp": 1696115179.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696133826.915856,
            "elapsed_time": 7591.8894209861755,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e7247f1010b546ca4d98a6ee40414d2d1cae0381",
            "commit_message": "[profiling] Move option declarations into headers\n\nThis will make it possible to add visibility attributes to these\nvariables.  This also fixes some type mismatches between the\ndeclaration and the definition.\n\nReviewed By: bogner, huangjd\n\nDifferential Revision: https://reviews.llvm.org/D156599\n",
            "commit_timestamp": 1696125088.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696148120.392132,
            "elapsed_time": 7782.099273443222,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5b7a7ec5a2106772de90a59c52e9fac7481f7e8a",
            "commit_message": "[NVPTX] Fix code generation for `trap-unreachable`. (#67478)\n\nhttps://reviews.llvm.org/D152789 added an `exit` op before each\r\n`unreachable`. This means we never get to the `trap` instruction.\r\n\r\nThis change limits the insertion of `exit` instructions to the cases\r\nwhere `unreachable` is not lowered to `trap`. Trap itself is changed to\r\nbe emitted as `trap; exit;` to convey to `ptxas` that it exits the CFG.",
            "commit_timestamp": 1696139964.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696162628.081901,
            "elapsed_time": 7770.428970813751,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0b0ed8f76a264c3677b8254d8d334de43600568f",
            "commit_message": "[RISCV] Add missing hunk to #67889 to fix test failures\n\nWithout this, various CodeGen tests fail because a\nRISCV::FCVT_D_W[_IN32X] machine node is created without the rounding\nmode operand.\n\nThe relevant PR was committed as bf94ba39b65d1212ea84d5783b393280e1ce7478\n",
            "commit_timestamp": 1696156497.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696176987.065157,
            "elapsed_time": 7523.1381368637085,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "632022e61c544280685763333685b4743f105f2e",
            "commit_message": "[AArch64] aarch64-saturating-arithmetic.ll - refresh test missed in #67890\n",
            "commit_timestamp": 1696171164.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696191350.225502,
            "elapsed_time": 8128.967188119888,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "95f4b2a70850b5e6ab83ec21af3fe5246cac0675",
            "commit_message": "[GSYM] Fix the initialization of DataExtractor (#67904)\n\nWithout this patch, we pass Endian as one of the parameters to the\r\nconstructor of DataExtractor.  The problem is that Endian is of:\r\n\r\n  enum endianness {big, little, native};\r\n\r\nwhereas the constructor is expecting \"bool IsLittleEndian\".  That is,\r\nwe are relying on an implicit conversion to convert big and little to\r\nfalse and true, respectively.\r\n\r\nWhen we migrate llvm::support::endianness to std::endian in future, we\r\ncan no longer rely on an implicit conversion because std::endian is\r\ndeclared with \"enum class\".  Even if we could, the conversion would\r\nnot be guaranteed to work because, for example, libcxx defines:\r\n\r\n  enum class endian {\r\n    little = 0xDEAD,\r\n    big = 0xFACE,\r\n    :\r\n\r\nwhere big and little are not boolean values.\r\n\r\nThis patch fixes the problem by properly converting Endian to a\r\nboolean value.",
            "commit_timestamp": 1696187470.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696206024.50593,
            "elapsed_time": 7962.333077907562,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "2375d84f0656ea97d221a68bba5a6b125e2f0856",
            "commit_message": "Fix MLIR test for UBSAN: define enum values that are set in cl::opt (NFC)\n",
            "commit_timestamp": 1696201731.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696220200.06675,
            "elapsed_time": 7719.940675497055,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "97829935844e7f35216e12c13231f35fbea640c3",
            "commit_message": "[mlir][affine] Check the input vector sizes to be greater than 0 (#65293)\n\nIn the process of vectorization of the affine loop, the 0 vector size\r\ncauses the crash with building the invalid AffineForOp. We can catch the\r\ncase beforehand propagating to the assertion.\r\n\r\nSee: https://github.com/llvm/llvm-project/issues/64262",
            "commit_timestamp": 1696207920.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696234373.310162,
            "elapsed_time": 5654.607284784317,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8245ca994bc524ef7a047526c128dbe0cb14d104",
            "commit_message": "[clang][Interp] Don't disable int128 tests everywhere.\n",
            "commit_timestamp": 1696233335.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696249270.884632,
            "elapsed_time": 9280.951941728592,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e9b33d085da05da6ce943dc563134f5ba91ca35b",
            "commit_message": "[ConstraintElim] Add extra tests with nested loops and iv decrements.\n\nAdd extra test coverage for induction logic to cover nested loops and\nloops with induction decrements. This adds coverage for upcoming\npatches.\n",
            "commit_timestamp": 1696247511.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696263680.569832,
            "elapsed_time": 10467.314404726028,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c2fd3ebe83444de05482d5a5a332dc2cf0db1a92",
            "commit_message": "[clang] Add test for CWG2267 (#67931)\n\nhttps://cplusplus.github.io/CWG/issues/2267.html\r\nRelated: #63416",
            "commit_timestamp": 1696262441.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696277850.377467,
            "elapsed_time": 7913.530917167664,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "3c0990c188e97086dec70ce1a36729f236f86093",
            "commit_message": "[RISCV] Generalize the (ADD (SLLI X, 32), X) special case in constant materialization. (#66931)\n\nWe don't have to limit ourselves to a shift amount of 32. We can support\r\nother shift amounts that make the upper 32 bits line up.",
            "commit_timestamp": 1696276986.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696292646.844223,
            "elapsed_time": 10192.477254629135,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "824b1677a44e25b7c9808c774ba2d894ff14df2b",
            "commit_message": "[libc][NFC] Fix missing field 'tm_isdst' initializer warning (#67837)\n\nThis patch fixes several warnings thrown by clang about an uninitialized\r\nmember of struct tm, tm_isdst.\r\n\r\nWeirdly, gcc doesn't complain about it, probably this member is never\r\nread in the tests.",
            "commit_timestamp": 1696289575.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696306627.784821,
            "elapsed_time": 7625.224354505539,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0502d83470202de6412d4b310692c7b06f1791cb",
            "commit_message": "Minor fixes on the MLIR ActionProfiler (NFC)\n\nEnsure the stream flushed to the string before acquiring the mutext.\nNo need to flush the output stream, the goal of the mutex is to sync\nahead before content is added to the stream.\n",
            "commit_timestamp": 1696302678.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696321116.491727,
            "elapsed_time": 9702.443712711334,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "853e126ce32ac899e6be5d18c632a1814797ca79",
            "commit_message": "[BOLT] Support input binaries that use R_X86_GOTPC64\n\nIn large code model, the address of GOT is calculated by the\nstatic linker via R_X86_GOTPC64 reloc applied against a MOVABSQ\ninstruction. In the final binary, it can be disassembled as a regular\nimmediate, but because such immediate is the result of PC-relative\npointer arithmetic, we need to parse this relocation and update this\ncalculation whenever we move code, otherwise we break the code trying\nto read GOT.\n\nA test case showing how GOT is accessed was provided.\n\nReviewed By: #bolt, maksfb\n\nDifferential Revision: https://reviews.llvm.org/D158911\n",
            "commit_timestamp": 1696313564.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696335477.164837,
            "elapsed_time": 7819.76292514801,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "481df274d37b24edbd06e08052f1220e5a42fcc6",
            "commit_message": "[RISCV][SelectionDAG] Sign extend splats of i32 in getConstant on RV64 (#67027)\n\nWe get better constant materialization if we sign extend the value to be\r\nsplatted for i32 on RV64 instead of zero extending it.",
            "commit_timestamp": 1696334259.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696350039.030032,
            "elapsed_time": 9611.716289758682,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "42de2b7e9911a1cafa818d5c5ec1124e6aec79a4",
            "commit_message": "[SystemZ/z/OS] Add library names for intrinsics (#68114)\n\nOn z/OS, many library functions have a non-standard name. This change\r\ninitializes the table of runtime function which results from lowering\r\nintrinsics to library calls.",
            "commit_timestamp": 1696348432.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696364121.777503,
            "elapsed_time": 7774.426850318909,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "1129dec778ae9873d5d4270eeb15d25d530d7c5f",
            "commit_message": "Revert \"[IR]Add NumSrcElts param to is..Mask static function in ShuffleVectorInst.\"\n\nThis reverts commit 6f43d28f3452b3ef598bc12b761cfc2dbd0f34c9 to fix\na crash reported in https://reviews.llvm.org/D158449.\n",
            "commit_timestamp": 1696363336.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696378624.930425,
            "elapsed_time": 7912.552099704742,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "427f120f60becd23d6e037ccd14104adde8a3af9",
            "commit_message": "[mlir][sparse] minor edits in runtime lib Cpp files (#68165)\n\n",
            "commit_timestamp": 1696375734.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696393080.776361,
            "elapsed_time": 7762.822603225708,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "548d67a0393c7bd200e335ada0a3d684750c2697",
            "commit_message": "[clang][Sema] Fix a bug when instantiating a lambda with requires clause (#65193)\n\nInstantiating a lambda at a scope different from where it is defined\r\nwill paralyze clang if the trailing require clause refers to local\r\nvariables. This patch fixes this by re-adding the local variables to\r\n`LocalInstantiationScope`.\r\n\r\nFixes #64462",
            "commit_timestamp": 1696385975.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696407436.438326,
            "elapsed_time": 8236.380528450012,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "503bc5f66111f7e4fc79972bb9bfec8bb5606bab",
            "commit_message": "[LLD] [COFF] Fix handling of comdat .drectve sections (#68116)\n\nThis can happen when manually emitting strings into .drectve sections\r\nwith `__attribute__((section(\".drectve\")))`, which is a way to emulate\r\n`#pragma comment(linker, \"...\")` for mingw compilers, without requiring\r\nbuilding with -fms-extensions.\r\n\r\nNormally, this doesn't generate any comdat, but if compiled with\r\n-fsanitize=address, this section does get turned into a comdat section.\r\n\r\nThis fixes #67261. This issue can be seen as a regression; a change in\r\nthe \"lli\" tool in 17.x triggers this case, if compiled with ASAN\r\nenabled, triggering this unsupported corner case in LLD. With this\r\nchange, LLD can handle it.",
            "commit_timestamp": 1696406090.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696422125.077551,
            "elapsed_time": 9017.739095926285,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "452fa6b86da76809252c6a1d4514603f19838703",
            "commit_message": "[libc] Change the GPU to use builtin memory functions (#68003)\n\nSummary:\nThe GPU build is special in the sense that we always know that\nup-to-date `clang` is always going to be the compiler. This allows us to\nrely directly on builtins, which allow us to push a lot of this\ncomplexity into the backend. Backend implementations are favored on\nthe GPU because it allows us to do a lot more target specific\noptimizations. This patch changes over the common memory functions to\nuse builtin versions when building for AMDGPU or NVPTX.",
            "commit_timestamp": 1696420975.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696436373.527816,
            "elapsed_time": 9320.578997135162,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "1964118ace4926f4d103aa0538db1f1f5baa343a",
            "commit_message": "[mlir][sparse] fix codegen header ordering of methods into sections (#68175)\n\n",
            "commit_timestamp": 1696434746.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696450673.132128,
            "elapsed_time": 8147.920762300491,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "9d6ec280fc537b55ef8641ea85d3522426bc5766",
            "commit_message": "[lld/ELF] Don't relax R_X86_64_(REX_)GOTPCRELX when offset is too far\n\nFor each R_X86_64_(REX_)GOTPCRELX relocation, check that the offset to the symbol is representable with 2^32 signed offset. If not, add a GOT entry for it and set its expr to R_GOT_PC so that we emit the GOT load instead of the relaxed lea. Do this in finalizeAddressDependentContent() where we iteratively attempt this (e.g. RISCV uses this for relaxation, ARM uses this to insert thunks).\n\nDecided not to do the opposite of inserting GOT entries initially and removing them when relaxable because removing GOT entries isn't simple.\n\nOne drawback of this approach is that if we see any GOTPCRELX relocation, we'll create an empty .got even if it's not required in the end.\n\nReviewed By: MaskRay\n\nDifferential Revision: https://reviews.llvm.org/D157020\n",
            "commit_timestamp": 1696449836.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696465307.694384,
            "elapsed_time": 9182.918283700943,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6e9ee42a5161081dcada4c2d187eb8e1bbff633a",
            "commit_message": "DWARFContext: use std::make_unique rather than reset+new\n",
            "commit_timestamp": 1696460407.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696479403.017059,
            "elapsed_time": 7912.559092998505,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "bbdbcd83e6702f314d147a680247058a899ba261",
            "commit_message": "[Support] Rename llvm::support::endianness to llvm::endianness (#68174)\n\nAs part of an effort to make our codebase ready for the migration from\r\nllvm::support::endianness to std::endian in C++20, this patch renames\r\nllvm::support::endianness to llvm::endianness.\r\n\r\nThe intent of this patch is to make fully qualified names less\r\npainful.  That is, with this patch, we can just say\r\nllvm::endianness::big rather than llvm::support::endianness::big.\r\n\r\nI'm not renaming llvm::support::endianness to llvm::endian because we\r\nhave a lot of places with \"using namespace support;\" where it would be\r\nambiguous whether \"endian\" refers to llvm::endian or\r\nllvm::support::endian.\r\n\r\nThis patch defines several helpers for gradual migration:\r\n\r\n  namespace llvm {\r\n  namespace support {\r\n  using endianness = llvm::endianness;\r\n  constexpr llvm::endianness big = llvm::endianness::big;\r\n  constexpr llvm::endianness little = llvm::endianness::little;\r\n  constexpr llvm::endianness native = llvm::endianness::native;\r\n\r\nWhile we are at it, this patch changes the enum to \"enum class\".  The\r\n\"enum class\" prevents implicit conversions from endianness to bool.\r\nI've fixed three such instances of implicit conversions:\r\n\r\n  95f4b2a70850b5e6ab83ec21af3fe5246cac0675\r\n  8de2ecc2e75d496fc7fc8a24c3acf71732a3bd0c\r\n  a7517e12caab0750d3dfd7c0c6faec9acc7e5a2b",
            "commit_timestamp": 1696476842.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696493923.228528,
            "elapsed_time": 7677.8329429626465,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ba149f6e097242dd41aacf747bef35ba374ac467",
            "commit_message": "[ValueTracking] Add SimplifyQuery ctor without TLI (NFC)\n\nWhile we pretty much always want to pass DT, AC and CxtI, most\nplaces don't care about TLI. Add an overload where this is not\none of the first parameters.\n",
            "commit_timestamp": 1696492500.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696508276.05092,
            "elapsed_time": 8054.865986824036,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "33a194b158069fdd713665f9cccf5dac0bc8a781",
            "commit_message": "[InstCombine] Add pre-commit tests for #67915. NFC.\n",
            "commit_timestamp": 1696507315.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696522880.869737,
            "elapsed_time": 10041.851748943329,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0ca7e609fc5ebdd9c95f6cba3c608cae4b575846",
            "commit_message": "[DX] Fix changed meaning of 'Signature' after #67346\n\nSummary:\nThis caused a lot of bots to fail, fix this so I can compile again by\nexplicitly stating the associated struct.\n",
            "commit_timestamp": 1696521791.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696537212.765092,
            "elapsed_time": 9162.495755910873,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "dc129d6f715cf83a2072fc8de8b4e4c70bca6935",
            "commit_message": "[libc++] Add std::fpclassify overloads for floating-point. (#67913)\n\nStandard says that implementation of math functions that have\r\nfloating-point-type parameter should provide an \"overload for each\r\ncv-unqualified floating-point type\".",
            "commit_timestamp": 1696533482.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696551569.595927,
            "elapsed_time": 8905.995112657547,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8f397e04e5ce87fb5ff99d6659ba959c22ea926c",
            "commit_message": "[mlir][memref] Fix emulate narrow types for strided memref offset (#68181)\n\nThis patch fixes strided memref offset calculation for emulating narrow\r\ntypes.\r\n\r\nAs a side effect, this patch also adds support for a 1-D subviews with\r\nstatic sizes, static offsets and strides of 1 for testing. Emulate\r\nnarrow types pass was not tested for strided memrefs before this patch.",
            "commit_timestamp": 1696548153.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696565756.505372,
            "elapsed_time": 7002.251370191574,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "da0ce32cc3221686f30a6267f43d8c5dd469ef80",
            "commit_message": "[MLIR] NFC. Move remaining affine test cases to its dialect dir (#67921)\n\nNFC. Move remaining affine test cases to its dialect dir.",
            "commit_timestamp": 1696561369.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696580344.692049,
            "elapsed_time": 8922.15738582611,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fad0919c508a666eb634ea9793a69322143dbd69",
            "commit_message": "[NFC][compiler-rt] Fix typo in FuzzedDataProvider.h doc\n",
            "commit_timestamp": 1696579365.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696594579.010538,
            "elapsed_time": 7637.583951711655,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4e311ea20fa77d6bcdaf444d9a3073ad382e27ae",
            "commit_message": "[mlir][bazel] Fix after https://github.com/llvm/llvm-project/commit/6a2071cc6a129dfe645ef4743fda78e76d748f16",
            "commit_timestamp": 1696593663.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696609246.479502,
            "elapsed_time": 9910.126506328583,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "092ef55a564ad2ed96f4767902eaa1349ba5644d",
            "commit_message": "[AArch64] Fix for misched-branch-targets.mir test\n\nFix test failure in non-assertion builds introduced by\r\nf1b2dd2a111f038420b3f69d4ce0b3b3f245c873.",
            "commit_timestamp": 1696607891.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696623316.601256,
            "elapsed_time": 7346.935183763504,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "71d83bb426104fb77605382c61968aaf55b537b8",
            "commit_message": "Add -fkeep-system-includes modifier for -E\n\nThis option will cause -E to preserve the #include directives\nfor system headers, rather than expanding them into the output.\nThis can greatly reduce the volume of preprocessed source text\nin a test case, making test case reduction simpler.\n\nNote that -fkeep-system-includes is not always appropriate. For\nexample, if the problem you want to reproduce is induced by a\nsystem header file, it's better to expand those headers fully.\nIf your source defines symbols that influence the content of a\nsystem header (e.g., _POSIX_SOURCE) then -E will eliminate the\ndefinition, potentially changing the meaning of the preprocessed\nsource. If you use -isystem to point to non-system headers, for\nexample to suppress warnings in third-party software, those will\nnot be expanded and might make the preprocessed source less useful\nas a test case.\n",
            "commit_timestamp": 1696622148.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696637868.526544,
            "elapsed_time": 7792.107746839523,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "78502251f4019953e462bb8bc886381589e9d257",
            "commit_message": "[DWARF] Change to consistently print out abbrev code in .debug_names (#68353)\n\nChanged so that when Abbrev code is printed out for entry it is done in\r\nthe same\r\nway as in Abbrev table.\r\nOnce letters are present in a hex number in abbrev table they will be\r\nlower case,\r\nand in the Entry upper case. Which makes FIleCheck Pattern recognition\r\nfail.\r\nExample in: llvm/test/tools/llvm-dwarfdump/X86/debug-names-misaligned.s",
            "commit_timestamp": 1696634383.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696652148.471807,
            "elapsed_time": 7654.059324502945,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8abb2ace888bdd04a1bdb4ac2f2fc25d57a5760a",
            "commit_message": "Revert \"Re-apply \"[AArch64] Enable \"sink-and-fold\" in MachineSink by default (#67432)\"\"\n\nThis reverts commit a9d0ab2ee572f179f80483f3ebbbcdd03c3b4481.\nThat commit is causing clang crashes.\n",
            "commit_timestamp": 1696650708.0
        },
        {
            "tool_version": "232.0.20230818.141747",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1696666568.653302,
            "elapsed_time": 7652.513694286346,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "2fc5649ccff4e44e1d8bd3afe93a12a89e813606",
            "commit_message": "[bazel] Add missing dependency for 5d2a7101b72a8cae8c4c1f7a11ede7f656efd583\n",
            "commit_timestamp": 1696665323.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1696680958.123051,
            "elapsed_time": 8674.49048256874,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7b93611260fc1d58c431fae80e68d6022caf7f74",
            "commit_message": "[BOLT][RISCV] Fix reloc-tls tests\n\nWas broken after ff5e2babcb46e7eb3887ee265decb2948da2792c.\n",
            "commit_timestamp": 1696676604.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1696695401.095721,
            "elapsed_time": 9045.483298540115,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "635eb5f370859c6140c1315176c8579ba8bc861f",
            "commit_message": "[clang][NFC] Typo fix in PPC.cpp\n\ns/Definitoin/Definition/",
            "commit_timestamp": 1696691263.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1696709686.073671,
            "elapsed_time": 7421.545933961868,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "45636ecf2c3a4a216f26bfe5a7d1495b9f7a8405",
            "commit_message": "[RISCV] Add sink-and-fold support for RISC-V. (#67602)\n\nThis uses the recently introduced sink-and-fold support in MachineSink.\r\nhttps://reviews.llvm.org/D152828\r\n    \r\nThis enables folding ADDI into load/store addresses.\r\n    \r\nEnabling by default will be a separate PR.",
            "commit_timestamp": 1696700315.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1696724487.091283,
            "elapsed_time": 10331.266002893448,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "dae91f5dbc5bee579eac7f4cbb71e86f2934817f",
            "commit_message": "[VPlan] Avoid VPTransformState::reset in fixReduction (NFCI).\n\nThere's no need to repeatedly query and reset the state for\nLoopExitInstDef. This removes one of the last uses of\nVPTransformState::reset, by use a vector to store and update the\nresults. No other code should try to retrieve the result from State\noutside the fixReductionCall.\n",
            "commit_timestamp": 1696717464.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1696738592.171758,
            "elapsed_time": 8190.08003616333,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "76fc871552c28b37b81c67f411a90065077816a0",
            "commit_message": "[RISCV] Support fptoi like ops for fp16 vectors input when only have Zvfhmin (#67532)\n\nThis patch supports FP_TO_SINT, FP_TO_UINT, VP_FP_TO_SINT and\r\nVP_FP_TO_UINT for fp16 vectors input when we only have Zvfhmin but no\r\nZvfh.",
            "commit_timestamp": 1696733059.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1696753254.963558,
            "elapsed_time": 10173.119676589966,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b8f70feaeff075b998f42c9ac54f8ee330cc0a6e",
            "commit_message": "[llvm] Remove \"using support::endianness;\" (NFC)\n\nNow that llvm::support::endianness has been renamed to\nllvm::endianness, we can directly get endianness from the llvm\nnamespace.  We don't need to go through support.\n",
            "commit_timestamp": 1696749075.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1696767337.405615,
            "elapsed_time": 7491.466132640839,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "32f719776552542691f14e786400fc222b7416f1",
            "commit_message": "[VP] Use the interface of 'getFunctionalIntrinsicID' to get the non-p\u2026 (#68508)\n\n\u2026redicated Intrinsic ID",
            "commit_timestamp": 1696760088.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1696795979.092947,
            "elapsed_time": 5567.293607473373,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "876334321f842edadcc0cd4241c76b59bb888b9e",
            "commit_message": "[mlir][bufferization] Update empty_tensor_elimination transform op (#68497)\n\nThe empty tensor elimination pass semantics have changed recently: when\r\napplied to a module, the One-Shot Module Analysis is run. Otherwise, the\r\nregular One-Shot Analysis is run. The latter one is slightly different\r\nbecause it ignores function boundaries and treats function block\r\narguments as \"read-only\".\r\n\r\nThis commit updates the transform dialect op to behave in the same way.",
            "commit_timestamp": 1696780003.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1696810662.870852,
            "elapsed_time": 8204.222125768661,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7cc1bfaf371c4a816cf4e62fe31d8515bf8f6fbd",
            "commit_message": "[clang-tidy][modernize-return-braced-init-list]fix false-positives (#68491)\n\n",
            "commit_timestamp": 1696807223.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1696825049.369699,
            "elapsed_time": 9648.487332105637,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7cc1bfaf371c4a816cf4e62fe31d8515bf8f6fbd",
            "commit_message": "[clang-tidy][modernize-return-braced-init-list]fix false-positives (#68491)\n\n",
            "commit_timestamp": 1696807223.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1696839326.069327,
            "elapsed_time": 7861.08312702179,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d7b18d5083648c26b94adc2651edb87848138728",
            "commit_message": "Use llvm::endianness{,::little,::native} (NFC)\n\nNow that llvm::support::endianness has been renamed to\nllvm::endianness, we can use the shorter form.  This patch replaces\nllvm::support::endianness with llvm::endianness.\n",
            "commit_timestamp": 1696838087.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1696854113.381837,
            "elapsed_time": 10011.482209444046,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "111c7c1d072ccfe0799787436f4fb72cbd2bc61c",
            "commit_message": "[VP] IR expansion for bitreverse/bswap (#68504)\n\n",
            "commit_timestamp": 1696852792.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1696868193.447121,
            "elapsed_time": 8098.385457515717,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "414709ee5c74ae35ac5eb204007fef35cc1c8079",
            "commit_message": "[mlir][tosa] Add verifier for `ArgMax` operator (#68410)\n\nVerifier ensures that operator is valid by checking:\r\n\r\n* Output type is I32\r\n* Axis is within the rank of the tensor\r\n\r\nSigned-off-by: Georgios Pinitas <georgios.pinitas@arm.com>",
            "commit_timestamp": 1696866918.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1696882755.220231,
            "elapsed_time": 9740.29052233696,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7a73da4c85a12341752a4573c55ebff46ba20db0",
            "commit_message": "[clang-tidy] Add support for optional parameters in config.\n\nIf a parameter value is either 'none', 'null', 'false', '-1'\nor '', we will in that case use the default value.\n\nReviewed By: PiotrZSL\n\nDifferential Revision: https://reviews.llvm.org/D159436\n",
            "commit_timestamp": 1696881524.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1696896960.167772,
            "elapsed_time": 7520.909536361694,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ac0dda894231e6281e7739aa0ea01a4e9697c747",
            "commit_message": "[lldb] add stop-at-user-entry option to process launch (#67019)\n\n## Description\r\nThis pull request adds a new `stop-at-user-entry` option to LLDB\r\n`process launch` command, allowing users to launch a process and pause\r\nexecution at the entry point of the program (for C-based languages,\r\n`main` function).\r\n\r\n## Motivation\r\nThis option provides a convenient way to begin debugging a program by\r\nlaunching it and breaking at the desired entry point.\r\n\r\n## Changes Made\r\n- Added `stop-at-user-entry` option to `Options.td` and the\r\ncorresponding case in `CommandOptionsProcessLaunch.cpp` (short option is\r\n'm')\r\n- Implemented `GetUserEntryPointName` method in the Language plugins\r\navailable at the moment.\r\n- Declared the `CreateBreakpointAtUserEntry` method in the Target API.\r\n- Create Shell test for the command\r\n`command-process-launch-user-entry.test`.\r\n\r\n## Usage\r\n`process launch --stop-at-user-entry` or `process launch -m` launches\r\nthe process and pauses execution at the entry point of the program.",
            "commit_timestamp": 1696895039.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1696911374.662043,
            "elapsed_time": 8112.668198823929,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "9ab732f630de94aeac47d95a8d1e6093f432506e",
            "commit_message": "[MLIR][TOSA] Add tosa.slice operation conversion failure scenario (#68578)\n\nFixes #68481, In the following scenario, the conversion fails:\r\n1. resultType of tosa.slice is UnrankedTensorType\r\n2. tosa.slice.getsize().size() < resultType.getRank()",
            "commit_timestamp": 1696909165.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1696925793.761432,
            "elapsed_time": 7820.944409132004,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "3542dd8f9179dc25ac0a21972d1d4fe66da174e0",
            "commit_message": "[clang][Interp][NFC] Move int128 tests to their own file\n",
            "commit_timestamp": 1696924448.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1696940201.205597,
            "elapsed_time": 8078.066593408585,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0c21dfdf1263bad26e09fe4232fcea01a69693ab",
            "commit_message": "[mlir][spirv] SCFToSPIRV: fix WhileOp block args types conversion (#68588)\n\nWhileOp before/after block args types weren't converted, resulting in\r\ninvalid IR.",
            "commit_timestamp": 1696939278.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1696954608.046804,
            "elapsed_time": 8137.797980546951,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fc654b4f598eba8c4cf8989be8376277d268740f",
            "commit_message": "[RISCV][NFC] Correct/clarify RISCVPushPopOptimizer.cpp header comment\n\nRefer to Zcmp rather than Zca. Also, this pass will only modify POP\ninstructions (replacing with POPRET if possible).\n",
            "commit_timestamp": 1696953015.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1696969040.188892,
            "elapsed_time": 8016.790988683701,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "97b989b27496d5aeadb3b90cbb9305ddcd9e35d2",
            "commit_message": "[compiler-rt] During profile flushing, setup SIGKILL mask earlier (#68622)\n\nIn multi threaded application, it is possible for one thread to\r\nterminate the program while another is flushing profile information. We\r\nsetup a signal mask to delay SIGKILL so that we can safely flush the\r\nprofile.\r\n\r\nThis patch setups the mask earlier: it reduces the window during which a\r\nSIGKILL can end the computation prematurely.\r\n\r\nThis fixes https://bugzilla.mozilla.org/show_bug.cgi?id=1850940, where a\r\nprofiled firefox was encountering several:\r\n\r\nLLVM Profile Error: Failed to write file \"default_*.profraw\": Broken\r\npipe\r\n\r\nCo-authored-by: serge-sans-paille <sguelton@mozilla.com>",
            "commit_timestamp": 1696965563.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1696983422.685443,
            "elapsed_time": 7958.904709339142,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4df74963ea0f6c8650d5837ab52e3cdcf1dcf016",
            "commit_message": "[analyzer] Compute length of string literal initializers (#66990) (#68368)\n\nFix issue https://github.com/llvm/llvm-project/issues/66990",
            "commit_timestamp": 1696979298.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1696997757.153361,
            "elapsed_time": 7766.048278808594,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "255f826d6f656bad17cc0aeacbd20306c266f653",
            "commit_message": "[X86] Fix value-extending/truncating loads and stores of __ptr32/__ptr64 pointers (#67168)\n\nThe value extension and truncation were missed during casting __ptr32/__ptr64\r\npointers to the default address space.\r\n\r\nCloses #66873",
            "commit_timestamp": 1696994376.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697012306.150908,
            "elapsed_time": 9241.21955704689,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d5444ab26743115e42e4abb3782bbefb0e8912d0",
            "commit_message": "[clang][C2x] Remove confusing diagnostic auto storage class specifier (#68710)\n\nWhen declaring `auto int` at local or file scope, we emit a warning\r\nintended for C++11 and later, which is incorrect and confusing in C23.\r\nSee [Godbolt example](https://godbolt.org/z/j1acGhecd).\r\nNow this diagnostic does not show up in C23.",
            "commit_timestamp": 1697010706.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697026539.586712,
            "elapsed_time": 7407.588338851929,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "25935c384dd83b131f3c09caaf23f7c63822cd46",
            "commit_message": "Revert \"[HIP][LLVM][Opt] Add LLVM support for `hipstdpar`\"\n\nThis reverts commit c5bba7ea5a05f540948f76a189c880eb24a5e8c6.\n",
            "commit_timestamp": 1697023623.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697041267.443189,
            "elapsed_time": 10451.419733285904,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6d88ac11d7d7353beab83016a363d7542e0b020c",
            "commit_message": "[mlir][bufferization] Transfer `restrict` during empty tensor elimination (#68729)\n\nEmpty tensor elimination is looking for\r\n`bufferization.materialize_in_destination` ops with a `tensor.empty`\r\nsource. It replaces the `tensor.empty` with a `bufferization.to_tensor\r\nrestrict` of the memref destination. As part of this rewrite, the\r\n`restrict` keyword should be removed, so that no second `to_tensor\r\nrestrict` op will be inserted. Such IR would be invalid.\r\n`bufferization.materialize_in_destination` with memref destination and\r\nwithout the `restrict` attribute are ignored by empty tensor\r\nelimination.\r\n\r\nAlso relax the verifier of `materialize_in_destination`. The `restrict`\r\nkeyword is not generally needed because the op does not expose the\r\nbuffer as a tensor.",
            "commit_timestamp": 1697039476.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697055414.632161,
            "elapsed_time": 7945.115653514862,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "eb21049b4b904b072679ece60e73c6b0dc0d1ebf",
            "commit_message": "[libunwind] Avoid reading OOB for non-existent .eh_frame_hdr (#68815)\n\nI was running the tests with baremetal picolibc which has a linker\r\nscript that __eh_frame_start==__eh_frame_end (not equal to zero) in\r\ncase there is no .eh_frame_hdr.\r\nI noticed that libunwind was trying to read nonsense data because it\r\nwas printing messages such as\r\n`libunwind: unsupported .eh_frame_hdr version: 20 at\r\nhttps://github.com/llvm/llvm-project/commit/8000d308146ebf49cb364cb600e28a0a42e22c83`\r\n\r\nThis change adds a ehHdr size check to avoid reading this out-of-bounds\r\ndata and potentially crashing.",
            "commit_timestamp": 1697049969.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697070027.854539,
            "elapsed_time": 9500.440246105194,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b6043f98673e33f17564dd240be3878c61e22333",
            "commit_message": "[RA] Disable split around hint register if optimize for size (#68619)\n\nSplit a virtual register with hint may generate COPY instructions in\r\nmultiple cold basic blocks, and increase code size. So disable this\r\nsplit when the function is optimized for size.",
            "commit_timestamp": 1697061435.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697084323.462203,
            "elapsed_time": 10142.13856267929,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "dcf9d946f5b5b90a9f95b21da116a6608122a415",
            "commit_message": "[PowerPC][Atomics] Simplify atomicrmw i128 patterns. NFC. (#68779)\n\nMost fragments of these patterns are the same, we can simplify them by\r\ndefining a common pattern.",
            "commit_timestamp": 1697083235.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697098746.465829,
            "elapsed_time": 9709.557708024979,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "97cd39ff09883990aa5c2f6366135a09124bac49",
            "commit_message": "[bazel] fix linter complains for libc bazel\n",
            "commit_timestamp": 1697097620.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697113214.083849,
            "elapsed_time": 7977.46192574501,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "37441f1ae66e6ca5380b338454db736173ff9fcd",
            "commit_message": "[PhaseOrdering] Add test for switch with different GEP types (NFC)\n",
            "commit_timestamp": 1697112118.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697127703.099196,
            "elapsed_time": 11374.408457994461,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ef9f6170b61647e07ecbeabea7400bf4ac8e1fce",
            "commit_message": "[Flang][OpenMP] NFC: Fix test\n\nFix test expectations after https://github.com/llvm/llvm-project/pull/68723\nGets CI to pass https://lab.llvm.org/buildbot/#/builders/268/builds/142\n",
            "commit_timestamp": 1697125830.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697142018.67487,
            "elapsed_time": 8661.830684185028,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "220244b71ba2a0301bb13fb195d64a66418d1c70",
            "commit_message": "[gn build] Port 1c9035d1b5a9\n",
            "commit_timestamp": 1697139787.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697156272.12346,
            "elapsed_time": 7792.657564640045,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "2cea1babefbb726b00573c4cb5c89dc47664dc17",
            "commit_message": "[libc++] Remove libc++'s own <setjmp.h> header (#68806)\n\nIt doesn't seem to do anything useful beyond what the C library header\r\nis doing, so there's no purpose in having one.",
            "commit_timestamp": 1697155144.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697170577.960759,
            "elapsed_time": 8257.335657835007,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c40902c41c007ae42ab9a1e80008d81ec4eec24f",
            "commit_message": "[AMDGPU] Use llvm::endianness::little (NFC)\n\nNote that llvm::support::endianness has been renamed to\nllvm::endianness.  This patch replaces support::endianness::little\nwith llvm::endianness::little.\n",
            "commit_timestamp": 1697169722.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697184987.778429,
            "elapsed_time": 8374.593487262726,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "69b6b48670c79a7440fcc273ee58420795bb9b43",
            "commit_message": "[ADT] Stop including identity.h (NFC)\n\nThe last use of identity was removed by:\n\n  commit 388b8c16c5610a54c639bb74e3c8de161e8ca1c6\n  Author: Benjamin Kramer <benny.kra@googlemail.com>\n  Date:   Wed Jan 25 01:38:28 2023 +0100\n\nWhile I am at it, this patch teaches IndexedMap.h to include\nidentity.h as it is relying on transitive includes via\nllvm/ADT/STLExtras.h.\n",
            "commit_timestamp": 1697184002.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697199392.389168,
            "elapsed_time": 7948.047850370407,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5d35273a32d239b7407338e13ed71b59174d6536",
            "commit_message": "[lldb] fix release build (#68979)\n\ndue to 64d78d8b3cd09dff32c97fbefa56bcfc8b676406 that used side effects\r\nin assert()",
            "commit_timestamp": 1697198011.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697214010.000684,
            "elapsed_time": 9446.335472106934,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "05bde3cc23b05a8ee4a77d00e6c4bea2ac44647b",
            "commit_message": "[llvm][TableGen][Jupyter] Link to tutorial notebook from README\n",
            "commit_timestamp": 1697212704.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697228424.20203,
            "elapsed_time": 10990.190404176712,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "99d92d18e334d776db4bca7cc45d015e2d14cfe0",
            "commit_message": "[scudo] Add specific die functions for linux specific failures. (#68650)\n\nWhile running into failures on unmap calls, it becomes difficult to\r\nfigure out what's wrong. Break the dieOnMapUnmapError into specific\r\nversions for map, unmap, and then one for mprotect.\r\n\r\nAlso, put these in a common linux space so that all linux derived code\r\ncan reuse this code.",
            "commit_timestamp": 1697224751.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697242598.132659,
            "elapsed_time": 7855.023311138153,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "25d93f3f6843d0e2b8b6c1920a12b59d9dc6bf60",
            "commit_message": "NFC: Precommit GISel checks for arm64-indexed-memory.ll\n",
            "commit_timestamp": 1697241099.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697256923.698353,
            "elapsed_time": 7847.563569784164,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "643b2ccd8296a3f8a2950421e72aa5ca59e4fecc",
            "commit_message": "[tools] Stop including llvm/ADT/StringMap.h (NFC)\n\nThese source files do not use StringMap.h.\n",
            "commit_timestamp": 1697255459.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697271311.655248,
            "elapsed_time": 8526.187964200974,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7060422265902f11a13f785a1a0ba246eff96114",
            "commit_message": "[mlir][Linalg]: Optimize linalg generic in transform::PromoteOp to avoid unnecessary copies (#68555)\n\nIf the operands are not used in the payload of linalg generic operations, there is no need to copy them before the operation.",
            "commit_timestamp": 1697269245.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697285827.802247,
            "elapsed_time": 7869.547541379929,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a502dddfd0da8ccefd2cee15599b49f6eaf74efa",
            "commit_message": "[AArch64] Additional GISel test for FMA. NFC\n",
            "commit_timestamp": 1697283294.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697300170.78264,
            "elapsed_time": 7977.228032588959,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c442d20e23d739ec89c719cb7b96c3623a58126d",
            "commit_message": "[gn build] Port f445be9790f9\n",
            "commit_timestamp": 1697297714.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697314597.152377,
            "elapsed_time": 9510.345206260681,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0603737ac0f73ff33326d0274b3152cc5a81e1ec",
            "commit_message": "[llvm-remarkutil] Fix issues after #66214 and its fixups\n\nDon't use reserved identifier (_GroupBy)\nFix GCC 7.4/7.5 builds (return Filter => return std::move(Filter))\nRemove trailing spaces\n",
            "commit_timestamp": 1697310419.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697329090.406027,
            "elapsed_time": 9523.920073747635,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "557299c9b6464f27968904aad5429cfb1512434e",
            "commit_message": "[ELF][test] Test relocations referencing weak symbol, which is defined relative to a section discarded by /DISCARD/\n",
            "commit_timestamp": 1697320750.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697343378.26206,
            "elapsed_time": 8019.513696908951,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ab6d5fa3d0643e68d6ec40d9190f20fb14190ed1",
            "commit_message": "[Sparc] Use isNullConstant (NFC)\n",
            "commit_timestamp": 1697342459.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697357687.148447,
            "elapsed_time": 7799.617975473404,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fad99d398a714f2fed18e2e65aef47a9b273f2f7",
            "commit_message": "[clang][Driver] Fix a spot in commit 169f60f7c76cb6f7d234ab5dfb2b5e367a35ccbb\n\nMy previous commit leads to a failure in 'Builders/ppc64le-lld-multistage-test',\nas shown at \"https://lab.llvm.org/buildbot/#/builders/36/builds/38790\".\n",
            "commit_timestamp": 1697354954.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697372190.190037,
            "elapsed_time": 7925.090465068817,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "eca2fcbdeb328c396d19f7970e94eca40ae79229",
            "commit_message": "[AMDGPU] Fix cost of fast unsafe f32 fdiv (#68988)\n\n",
            "commit_timestamp": 1697369136.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697386727.642691,
            "elapsed_time": 9943.755867481232,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6dfea561ba96974b205c31546c5e2069429c75b1",
            "commit_message": "[builtins] Start to refactor int to fp conversion functions to use a common implementation (#66903)\n\nAfter this patch, the softfp implementations of floatdidf and floatundidf\r\nuse a common implementation (int_to_fp.h and int_to_fp_impl.inc). This\r\nroughly follows the pattern used for a wide range of other builtins,\r\ne.g. fp_trunc_impl.inc.\r\n\r\nCurrently there is substantial copy and paste for the various int to fp\r\nconversion functions, with just a few constants being changed. This is a\r\nbarrier to maintainability, and it's also not attractive to copy this\r\napproach as we introduce additional int to fp conversion functions for\r\nbf16 and half (which we currently lack, but need - see\r\n<https://reviews.llvm.org/D157509>).\r\n\r\nI've opted to conservatively start by replacing just two functions,\r\nleaving a follow-up patch to replace others that follow the same\r\npattern. Also, for better or worse I've left the logic in float[un]didf\r\nlargely unchanged other than using a similar approach to\r\nfp_trunc_impl.inc to remove the constants that are tied to a specific\r\noutput floating point format.",
            "commit_timestamp": 1697382895.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697400967.434354,
            "elapsed_time": 7682.981890916824,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "546c3d792addc24bcc44382dd83939c50924c909",
            "commit_message": "[OpenMP][mlir] Added `num_teams`, `thread_limit` translation to LLVM IR (#68821)\n\nThis patch adds translation to LLVM IR for `num_teams` and\r\n`thread_limit` in for `omp.teams` operation.",
            "commit_timestamp": 1697393866.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697415446.900675,
            "elapsed_time": 8022.111476182938,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ab737a86993bc7bf92cbb9d51f47f8825a717333",
            "commit_message": "[mlir][Interfaces] `LoopLikeOpInterface`: Add helper to get yielded values (#67305)\n\nAdd a new interface method that returns the yielded values.\r\n    \r\nAlso add a verifier that checks the number of inits/iter_args/yielded\r\nvalues. Most of the checked invariants (but not all of them) are already\r\ncovered by the `RegionBranchOpInterface`, but the `LoopLikeOpInterface`\r\nnow provides (additional) error messages that are easier to read.",
            "commit_timestamp": 1697413548.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697429764.89756,
            "elapsed_time": 7606.139455795288,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "019d67f19721f54ad6be81bcc29285713ae23249",
            "commit_message": "[RISCV][NFC] Remove space\n",
            "commit_timestamp": 1697428697.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697444256.165865,
            "elapsed_time": 9813.78527879715,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "2371d0ab263c164be820f961095cc22076566d12",
            "commit_message": "[DebugInfo] Only call upgradeCULocals() at module level (#68965)\n\nLoading a 2GB bitcode file, I noticed that we spend minutes just running\r\nupgradeCULocals(). Apparently it gets invoked every time a metadata\r\nblock is loaded, which will be once at the module level and then once\r\nper function. However, the relevant metadata only exists at the module\r\nlevel, so running this upgrade per function is unnecessary.",
            "commit_timestamp": 1697442902.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697458600.525533,
            "elapsed_time": 8142.3275492191315,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4d6fc88946eec6b2ef1d8a91e3425a8e0a84288b",
            "commit_message": "[AMDGPU] Add patterns for V_CMP_O/U (#69157)\n\nFixes SWDEV-427162",
            "commit_timestamp": 1697454476.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697473226.662795,
            "elapsed_time": 9973.119614124298,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6ade5183232dc1398205d7c9dbe21243b2560837",
            "commit_message": "[flang][openacc][NFC] Issue better error message when directive is wrong (#69034)\n\n",
            "commit_timestamp": 1697471522.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697487343.781149,
            "elapsed_time": 8336.690752267838,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8e2b2c4181506efc5b9321c203dd107bbd63392b",
            "commit_message": "[SLP]Fix PR69196: Instruction does not dominate all uses\n\nDuring emission of the postponed gathers, need to insert them before\nuser instruction to avoid use before definition crash.\n",
            "commit_timestamp": 1697486238.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697502066.851918,
            "elapsed_time": 9184.029834985733,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "28a686a704fab6631d18160e5f8ee2e07620ebe1",
            "commit_message": "[flang][NFC] Speed up large DATA statement initializations (#67585)\n\nTo ensure that the map from symbols to their initial images has an entry\r\nfor a particular symbol, use std::map<>::find() before\r\nstd::map<>::emplace() to avoid needless memory allocation and\r\ndeallocation. Also, combine adjacent intervals in the lists of\r\ninitialized ranges so that contiguous initializations don't require long\r\nlists.\r\n\r\nFixes https://github.com/llvm/llvm-project/issues/66452.",
            "commit_timestamp": 1697500306.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697516283.766137,
            "elapsed_time": 8154.404665231705,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "cc6a5ea6e33d3febafc4334617230c528a0c4fa7",
            "commit_message": "[M68k][NFC] Fix some unused variable warnings\n\nInduced by variables that are only used in assertion statements. NFC.\n",
            "commit_timestamp": 1697514671.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697530646.41141,
            "elapsed_time": 7862.003201007843,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4606712ef5b422edbe3799b665dcad7dcf348b90",
            "commit_message": "[lldb][lldb-vscode] Add example configuration for connecting to a remote gdbserver (#68866)\n\nThis can be used to have VS Code debug various emulators, remote\r\nsystems, hardware probes, etc.\r\n\r\nIn my case I was doing this for the Gameboy Advance,\r\nhttps://github.com/stuij/gba-llvm-devkit/blob/main/docs/Debugging.md#debugging-using-visual-studio-code.\r\n\r\nIt's not very complex if you know LLDB well, but when using another\r\nplugin, CodeLLDB, I was very glad that they had an example for it. So we\r\nshould have one too.",
            "commit_timestamp": 1697529667.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697545167.100803,
            "elapsed_time": 9730.70290851593,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "90576084c1d797f845055e8d95c2d9f455268841",
            "commit_message": "[Bazel] fix typo\n",
            "commit_timestamp": 1697543923.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697559579.709907,
            "elapsed_time": 9930.000549554825,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "20af0e5e8d5692327753286ac869ff1c347d819b",
            "commit_message": "Enable v for RISCV64 Android (#69261)\n\nAndroid has already enabled V by default for aosp:\r\nhttps://android-review.googlesource.com/c/platform/build/soong/+/2752805\r\nfour weeks back.",
            "commit_timestamp": 1697557975.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697574005.437808,
            "elapsed_time": 9982.797818422318,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "9922aadf9e9d1b9d10dd69882d8515757f127a91",
            "commit_message": "[OpenMPIRBuilder] Added `if` clause for `teams` (#69139)\n\nThis patch adds support for the `if` clause on `teams` construct. The\nvalue of the argument must be an integer value. If the value evaluates\nto true (non-zero) integer, then the number of threads is determined by\n`num_threads` clause (or default and ICV if `num_threads` is absent).\nWhen the condition evaluates to false (zero), then the bounds are set to\n1. ([OpenMP 5.2 Section\n10.2](https://www.openmp.org/spec-html/5.2/openmpse58.html))\n\nThis essentially means that\n```\nupperbound = ifexpr ? upperbound : 1\nlowerbound = ifexpr ? lowerbound : 1\n```",
            "commit_timestamp": 1697572839.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697588249.275591,
            "elapsed_time": 7922.686058044434,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "bd0fc480df2f04b579ecac60cd9709c570b34f1f",
            "commit_message": "[sanitizer_common] Use 38-bit mmap range for Fuchsia (#69387)\n\n46cb8d9a325233ac11ed5e90367c43774294d87e unconditionally changed the\r\nmmap range to 2^48 for all riscv sanitizers. This changes the allocator\r\ntunings for the 32-bit allocator for riscv and led to a severe\r\nperformance regression for our lsan tests. This effectively revers the\r\ntuning change but only for Fuchsia.\r\n\r\nOnce we enable the 64-bit allocator for everything riscv, this value\r\nwill be irrelevant since it's only relevant for the 32-bit allocator.",
            "commit_timestamp": 1697587379.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697602549.701108,
            "elapsed_time": 7916.571621179581,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ed1d29028492b28b4790690b275b3a095f56fa47",
            "commit_message": "[Driver][NFC] Remove identifier with the comment (#68351)\n\nMaskRay suggested removal of the identifer in a review for another\r\nToolChain so doing the same for the rest.",
            "commit_timestamp": 1697599627.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697617004.566191,
            "elapsed_time": 7495.958390235901,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7cd7b9533c7786a76bb3ce14b3f5e29c378f28f2",
            "commit_message": "[BOLT] Fix instrumentation test (#69383)\n\n",
            "commit_timestamp": 1697615666.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697631623.919352,
            "elapsed_time": 9778.190035104752,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "cbbb545c4618969850d88bb008ab7f1c2918d5c3",
            "commit_message": "[lld] Sort code section chunks by range types on Arm64EC targets. (#69099)\n\n",
            "commit_timestamp": 1697630262.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697645995.966998,
            "elapsed_time": 9795.747190237045,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e3ae2a52d2232e3b41caa9cf1197c24130249ddd",
            "commit_message": "[llvm][CMake] Check dependency cxx source compiles (#68549)\n\nIf a CMake project doesn't enable the C language, then the CMake FFI and\r\nTerminfo find modules will fail their checks for compilation and\r\nlinking.\r\n\r\nThis commit allows projects to enable only C++ by first checking if a C\r\ncompiler is set before testing C source compilation; if not, it checks\r\nwhether C++ compilation succeeds.\r\n\r\nFixes #53950",
            "commit_timestamp": 1697644984.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697660124.996092,
            "elapsed_time": 7405.222554683685,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "400389db7de3aac4cd56c95789014aa9206e376b",
            "commit_message": "Initialize sigset in asan_interceptors (#69502)\n\nWhen compiling for Darwin, sigset is not initialized. \r\n\r\nWhen -Werror,-Wuninitialized-const-reference are enabled we see the\r\nerror:\r\nasan_interceptors.cpp:260:38: error: variable 'sigset' is uninitialized\r\nwhen passed as a const reference argument here\r\n[-Werror,-Wuninitialized-const-reference]\r\n\r\nThis fixes the error",
            "commit_timestamp": 1697659296.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697674648.112712,
            "elapsed_time": 8062.424755811691,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "cfbf0a500f173b532f64fcb856af2fb0cb7ba725",
            "commit_message": "[X86][RFC] Support AVX10 options (#67278)\n\nAVX10 Architecture Specification:\r\nhttps://cdrdv2.intel.com/v1/dl/getContent/784267\r\nAVX10 Technical Paper: https://cdrdv2.intel.com/v1/dl/getContent/784343\r\nRFC:\r\nhttps://discourse.llvm.org/t/rfc-design-for-avx10-options-support/73672",
            "commit_timestamp": 1697673170.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697689229.420566,
            "elapsed_time": 9753.162585735321,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "817519058a986794e6acc06e4386fa183c4472a0",
            "commit_message": "[SPIR-V] Emit proper pointer type for OpenCL kernel arguments (#67726)\n\n",
            "commit_timestamp": 1697687513.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697703402.207395,
            "elapsed_time": 8352.550963401794,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "416884544e0210c32c113f02c3d3881e78aac6a4",
            "commit_message": "[TableGen] Update editor modes for new keywords and bang operators. (#68897)\n\n* `dump`, added in https://github.com/llvm/llvm-project/pull/68793\r\n* `!repr`, added in https://github.com/llvm/llvm-project/pull/68716\r\n\r\nThe keyword `assert` was missing, so I have added that too.",
            "commit_timestamp": 1697700719.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697718070.26771,
            "elapsed_time": 9797.024002313614,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "3d7802d2107f4f6518f366effc0e237bffe67bf1",
            "commit_message": "[Clang] Actually fix tests for __builtin_vectorelements (#69589)\n\nIn #69582, I accidentally disabled all tests for the changed introduced\r\nin #69010. This change should use the correct `REQUIRES` syntax to\r\nen-/disable target-specific tests.",
            "commit_timestamp": 1697715641.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697732355.346103,
            "elapsed_time": 9639.269323348999,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "03d1c99d99d7918115b993f14dcb6fc39cf09f72",
            "commit_message": "[mlir][ODS] Add `OptionalTypesMatchWith` and remove a custom assemblyFormat (#68876)\n\nThis is just a slight specialization of `TypesMatchWith` that returns\r\nsuccess if an optional parameter is missing.\r\n\r\nThere may be other places this could help e.g.:\r\n\r\nhttps://github.com/llvm/llvm-project/blob/eb21049b4b904b072679ece60e73c6b0dc0d1ebf/mlir/include/mlir/Dialect/X86Vector/X86Vector.td#L58-L59\r\n...but I'm leaving those to avoid some churn.\r\n\r\nThis constraint will be handy for us in some later patches, it's a\r\nformalization of a short circuiting trick with the `comparator` of the\r\n`TypesMatchWith` constraint (devised for #69195).\r\n\r\n```\r\nTypesMatchWith<\r\n  \"padding type matches element type of result (if present)\",\r\n  \"result\", \"padding\",\r\n  \"::llvm::cast<VectorType>($_self).getElementType()\",\r\n  // This returns true if no padding is present, or it's present with a type that matches the element type of `result`.\r\n  \"!getPadding() || std::equal_to<>()\">\r\n```\r\n\r\nThis is a little non-obvious, so after this patch you can instead do:\r\n```\r\nOptionalTypesMatchWith<\r\n  \"padding type matches element type of result (if present)\",\r\n  \"result\", \"padding\",\r\n  \"::llvm::cast<VectorType>($_self).getElementType()\">\r\n```",
            "commit_timestamp": 1697731202.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697746767.766603,
            "elapsed_time": 9680.854655981064,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "3cac608fbd0811b2f5c59c6e13148162ccd8543e",
            "commit_message": "[LV] Add interleave only test case with reduction requiring casts.\n\nThis adds test coverage for a crash exposed by\nd311126349b8fe1684d62154a9fa5a7bbb0b713.\n",
            "commit_timestamp": 1697745141.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697761208.332877,
            "elapsed_time": 10062.56726360321,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "3d89c088af5bd5242f6c80efb10a7191d0c4e71e",
            "commit_message": "[mlir][sparse] support BSR for cuSPARSE (libgen path only) (#69646)\n\n",
            "commit_timestamp": 1697759812.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697775659.52749,
            "elapsed_time": 9413.705213069916,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "076581fd95af72c8e6d2ab900b6d1798e2efaf8f",
            "commit_message": "[ValueTracking] Implement sdiv/udiv support for isKnownNonNullFromDominatingCondition (#67282)\n\nThe second operand of a sdiv/udiv has to be non-null, as division by\r\nzero is UB.\r\n\r\nProofs: https://alive2.llvm.org/ce/z/WttZbb\r\n\r\nFixes https://github.com/llvm/llvm-project/issues/64240.",
            "commit_timestamp": 1697774073.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697789805.649273,
            "elapsed_time": 7866.847399711609,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5db75d74a10d60d13536836089b8efacc98bc003",
            "commit_message": "[BOLT] Filter itrace from perf script mmap & task events (#69585)\n\nperf2bolt launches a few perf script commands and stores the output in\r\ntemporary files before processing the output and cleaning them up before\r\nit exits.\r\n\r\nThe command `perf script --show-mmap-events` outputs PERF_RECORD_MMAP2\r\nand instruction tracing data but when processed it only looks for\r\nPERF_RECORD_MMAP2 and the instruction tracing data is ignored. This is\r\nfine for small amounts of instruction trace data but when I've recorded\r\nArm ETM or Intel PT AUX I get lots of it\r\n\r\nBy adding `--no-itrace` is will just show the PERF_RECORD_MMAP2 records\r\nand will save on time running the `perf script`, disk space storing the\r\noutput & time parsing the output.\r\n\r\nIt is the same for `perf script --show-task-events` where BOLT is only\r\ninterested in the PERF_RECORD_COMM & PERF_RECORD_FORK records.\r\n\r\n### Data\r\n\r\n| Perf Record | Perf Data Size  | MMap Size | MMap No Itrace Size |\r\n|---|---|---|---|\r\n| perf record -e cs_etm/@tmc_etr0/u | 137K | 4468K | 0.632K |\r\n| perf record -e intel_pt//u | 890K | 33378K | 0.673K |",
            "commit_timestamp": 1697788805.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697804288.098646,
            "elapsed_time": 9318.319209098816,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ba8565fbcb975e2d067ce3ae5a7dbaae4953edd3",
            "commit_message": "[LIT] Print discovered tests and percentages (#66057)\n\nThis patch adds \"nice-to-have\" feature in lit.\r\nit prints the total number of discovered tests at the beginning. It is\r\ncovenient to see the total number of tests and avoid scrolling up to the\r\nbeginning of log.\r\n\r\nFurther, this patch also prints %ge of tests.\r\n\r\nReviewed By: RoboTux, jdenny-ornl\r\n\r\nCo-authored-by: Madhur A <madhura@nvidia.com>",
            "commit_timestamp": 1697802814.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697818889.856355,
            "elapsed_time": 9771.258427381516,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f08fe1f1dd64d754064d1094704ee2938c25c325",
            "commit_message": "[MLIR][Presburger] Implement matrix inverse (#67382)\n\nShift the `determinant()` function from LinearTransform to Matrix.\r\nImplement a FracMatrix class, inheriting from Matrix<Fraction>, for inverses.\r\nImplement inverse for FracMatrix and intInverse for IntMatrix.\r\nMake Matrix internals protected instead of private so that Int/FracMatrix can access them.",
            "commit_timestamp": 1697817825.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697833066.825203,
            "elapsed_time": 8870.400331258774,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "1d4601a1ef84e4ffe2db84d17b53953b25699eef",
            "commit_message": "[Driver] Corrections for linker flags passed with relocatable linking on OpenBSD (#67254)\n\nThe entry point symbol handling matches our GCC link spec..\r\n```%{!shared:%{!nostdlib:%{!r:%{!e*:-e __start}}}}```\r\n\r\nRemove usage of -Bdynamic as it is the default for the linker anyway.\r\n\r\nCame up in discussion here https://github.com/llvm/llvm-project/pull/65644",
            "commit_timestamp": 1697831527.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697847448.842949,
            "elapsed_time": 8103.387769937515,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4e0c6d30576ab10cf022b040c9441c2b5d0efb3c",
            "commit_message": "Fix build warning caused by mixed signed/unsigned compare (#69797)\n\n",
            "commit_timestamp": 1697845361.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697861756.182926,
            "elapsed_time": 7843.536957740784,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "cb5612c99b0b8773cc8c5e1b6418b341285c5b14",
            "commit_message": "Add IR name to -print-pass-numbers output\n\nPrint the name of the module/function/loop the pass\nran on.\n",
            "commit_timestamp": 1697858363.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697876397.772015,
            "elapsed_time": 9409.920143127441,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "386f3903910aa1897c424ced8e1af7993a6df5ce",
            "commit_message": "[MachineBasicBlock] Fix SlotIndexUpdater for insertion order (#69424)\n\nFollow up fix for #68786 to address that MachineFunction handleInsertion\r\nis actually called before a new instruction has been inserted into the\r\nblock. Hence new instructions must be recorded and SlotIndex updates\r\nperformed after the delegate call.",
            "commit_timestamp": 1697873479.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697890500.139751,
            "elapsed_time": 7969.118305683136,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c2f02e3bd6a5b287a221ae9038e6727abc3e6652",
            "commit_message": "Clang: Define macro _MIPS_SPFPSET\n\nGCC defines this macro for how many single-precision floating point registers\ncan be used.\n\nIf the -mno-odd-spreg option is given, it will be 16; if either -mno-odd-spreg\nnor -modd-spreg are given, we set it to 16 for FPXX.\n\nReviewed By: theraven\n\nDifferential Revision: https://reviews.llvm.org/D157896\n",
            "commit_timestamp": 1697886534.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697905205.508483,
            "elapsed_time": 9802.901815414429,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f9906508bc4f05d3950e2219b4c56f6c078a61ef",
            "commit_message": "[analyzer][NFC] Substitute operator() with lambda in StreamChecker\n\n",
            "commit_timestamp": 1697898554.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697919306.301717,
            "elapsed_time": 7508.477356910706,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "241c290ad73f57ee12a6d1c3ee3fe38d79405c3a",
            "commit_message": "Reland [LLD] [COFF] Don't try to detect MSVC installations in mingw mode\n\nIn mingw mode, all linker paths are passed explicitly to the linker\nby the compiler driver. Don't try to implicitly add linker paths\nfrom the LIB environment variable or by detecting an MSVC\ninstallation directory.\n\nIf the /winsysroot command line parameter is explicitly passed to\nlld-link while /lldmingw is specified, it could be considered reasonable\nto actually include those paths. However, modifying the code to\nhandle only the /winsysroot case but not the other ones, when the\nmingw mode has been enabled, seems like much more code complexity\nfor a mostly hypothetical case.\n\nAdd a test for this when case when using LIB. (The code paths for\ntrying to detect an MSVC installation aren't really regression tested.)\n\nAlso fix an issue in the existing test for \"Check that when /winsysroot\nis specified, %LIB% is ignored.\", where the LIB variable pointed\nto a nonexistent directory, so the test would pass even if /winsysroot\nwouldn't be specified.\n\nReland this after https://github.com/llvm/llvm-project/pull/68077 and\nhttps://github.com/llvm/llvm-project/pull/69781 - the compiler-rt test\nthat used -lldmingw in MSVC environments has been updated to use a more\nspecific option.\n\nDifferential Revision: https://reviews.llvm.org/D144084\n",
            "commit_timestamp": 1697916971.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697933897.619199,
            "elapsed_time": 7941.419209957123,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "74ca07295f3224a77ea5202858b3f4195b23fbcf",
            "commit_message": "[lldb] improve dwo path in missing dwo error when relative (#69783)\n\nWhen the debug info refers to a dwo with relative `DW_AT_comp_dir` and\r\n`DW_AT_dwo_name`, we only print the `DW_AT_comp_dir` in our error\r\nmessage if we can't find it. This often isn't very helpful, especially\r\nwhen the `DW_AT_comp_dir` is \".\":\r\n```\r\n(lldb) fr v\r\nerror: unable to locate .dwo debug file \".\" for skeleton DIE 0x000000000000003c\r\n```\r\n\r\nI'm updating the error message to include both `DW_AT_comp_dir` (if it\r\nexists) and `DW_AT_dwo_name` when the `DW_AT_dwo_name` is relative. The\r\nbehavior when `DW_AT_dwo_name` is absolute should be the same.",
            "commit_timestamp": 1697932784.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697948204.293342,
            "elapsed_time": 8422.060481786728,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0b7ae41b23fc05c2ac3afc8566b8a923d7f76c45",
            "commit_message": "[LIT] Print discovered tests and percentages (#66057) (#69831)\n\nThis patch adds \"nice-to-have\" feature in lit.\r\nit prints the total number of discovered tests at the beginning. It is\r\ncovenient to see the total number of tests and avoid scrolling up to the\r\nbeginning of log.\r\n\r\nFurther, this patch also prints %ge of tests.\r\n\r\nThis patch fixes tests pointed by previous attempt of landing this\r\npatch.\r\n\r\nReviewed By: RoboTux, jdenny-ornl\r\n\r\nCo-authored-by: Madhur A <madhura@nvidia.com>",
            "commit_timestamp": 1697946745.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697962591.614764,
            "elapsed_time": 8179.069714784622,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "3d40411ee88958864316ff9afb23ec2d0166b285",
            "commit_message": "[AMDGPU] Set size to all SOP pseudos (#69756)\n\n",
            "commit_timestamp": 1697960025.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697976905.058208,
            "elapsed_time": 7961.68973326683,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4f56d47d050e3d71964777151e439fe923e64025",
            "commit_message": "[VPlan] Make ExpandedSCEVs argument const (NFC).\n\nThe argument is only used in const contexts. Simplifies a follow-up\ndiff.\n",
            "commit_timestamp": 1697974315.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1697991536.84547,
            "elapsed_time": 9940.506915569305,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4f56d47d050e3d71964777151e439fe923e64025",
            "commit_message": "[VPlan] Make ExpandedSCEVs argument const (NFC).\n\nThe argument is only used in const contexts. Simplifies a follow-up\ndiff.\n",
            "commit_timestamp": 1697974315.0
        },
        {
            "tool_version": "233.0.20230922.73406-eap01",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698005788.742165,
            "elapsed_time": 7914.880588769913,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "747e0d9f0aadb4933ee7bc80abed67bdde23033f",
            "commit_message": "[compiler-rt] Use std::clamp (NFC)\n",
            "commit_timestamp": 1698003140.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698078015.445394,
            "elapsed_time": 3415.230840921402,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "9022f402120b4e55ec1201c16f8f6d2388498e1d",
            "commit_message": "[clang][Interp] Only evaluate the source array initialization of an `ArrayInitLoopExpr` once (#68039)\n\nThis patch implements an `OpaqueValueExpr` caching functionality in `Interp`\r\nby storing the result of the expression in a local variable.",
            "commit_timestamp": 1698076347.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698092143.086843,
            "elapsed_time": 2775.415019750595,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "2f15082b15f12461246e9e1fe1ea0cb106c27a34",
            "commit_message": "[LLDB] Update docs on building documentation (#69858)\n\nThis patch updates the documentation to match recent changes and make it\r\nmore clear. More specifically, the process for installing sphinx has\r\nchanged with the transition to myst with the requirements.txt in\r\nllvm/docs being the preferred method for installation now. In addition,\r\nthe docs-lldb-html target is never generated if swig isn't installed, so\r\nhaving something expliti in the documentation section (even if it is\r\nmentioned as a dependency of lldb itself above) probably doesn't hurt.",
            "commit_timestamp": 1698091179.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698106806.39499,
            "elapsed_time": 3297.616010904312,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "cc455033d4d4f5731461a6d5fa72e0f9bf871a70",
            "commit_message": "[X86][GlobalISel] Reorganize shift scalar tests (NFC) (#68232)\n\nRemoved duplicated tests from GlobalISel directory",
            "commit_timestamp": 1698105630.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698120938.873176,
            "elapsed_time": 2683.2438476085663,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6768a3d4318455dd61029ebbd3015b1748f1e603",
            "commit_message": "[Github] Add libcxx docs to CI (#69828)\n\nThis patch adds a step to the documentation Github action to build the\r\nlibc++ docs if they have changed. This enables easily diagnosing build\r\nfailures/warnings in PRs.",
            "commit_timestamp": 1698118028.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698135352.721307,
            "elapsed_time": 2619.386843442917,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "eb86de63d901941fba0a54eb41551456447cd789",
            "commit_message": "[IR] Require that ptrmask mask matches pointer index size (#69343)\n\nCurrently, we specify that the ptrmask intrinsic allows the mask to have\r\nany size, which will be zero-extended or truncated to the pointer size.\r\n\r\nHowever, what semantics of the specified GEP expansion actually imply is\r\nthat the mask is only meaningful up to the pointer type *index* size --\r\nany higher bits of the pointer will always be preserved. In other words,\r\nthe mask gets 1-extended from the index size to the pointer size. This\r\nis also the behavior we want for CHERI architectures.\r\n\r\nThis PR makes two changes:\r\n* It spells out the interaction with the pointer type index size more\r\nexplicitly.\r\n* It requires that the mask matches the pointer type index size. The\r\nintention here is to make handling of this intrinsic more robust, to\r\navoid accidental mix-ups of pointer size and index size in code\r\ngenerating this intrinsic. If a zero-extend or truncate of the mask is\r\ndesired, it should just be done explicitly in IR. This also cuts down on\r\nthe amount of testing we have to do, and things transforms needs to\r\ncheck for.\r\n\r\nAs far as I can tell, we don't actually support pointers with different\r\nindex type size at the SDAG level, so I'm just asserting the sizes match\r\nthere for now. Out-of-tree targets using different index sizes may need\r\nto adjust that code.",
            "commit_timestamp": 1698134069.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698149989.991779,
            "elapsed_time": 3630.610855579376,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f7a46d700f6458a382304339c5b3589bf30ae45d",
            "commit_message": "[analyzer][clangsa] Add new option to alpha.security.cert.InvalidPtrChecker (#67663)\n\nIntroduce 'InvalidatingGetEnv' checker option for 'getenv' calls.\r\n\r\n- POSIX suggests consecutive 'getenv' calls may invalidate \r\n  pointer pointers. This is often too strict in real-world scenarios.\r\n- New 'InvalidatingGetEnv' checker option provides a more \r\n  pragmatic default that doesn't treat consecutive 'getenv' \r\n  calls as invalidating.\r\n- Now also handles main function specifications with an \r\n  environment pointer as the third parameter.\r\n\r\nOriginal Phabricator review:\r\nhttps://reviews.llvm.org/D154603",
            "commit_timestamp": 1698148794.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698164258.946009,
            "elapsed_time": 3189.9612119197845,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "9f3e3405603177c46b873fa219624b759e6ef851",
            "commit_message": "[clang]Transform uninstantiated ExceptionSpec in TemplateInstantiator (#68878)\n\nFixes #68543, #42496",
            "commit_timestamp": 1698163282.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698178550.396595,
            "elapsed_time": 2755.3173768520355,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "260dbb45ac2482695a6fb0c55dcf4b693636f0bf",
            "commit_message": "[mlir][sparse] add COO to python tests (#70090)\n\nalso typo fix",
            "commit_timestamp": 1698176926.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698193072.174474,
            "elapsed_time": 2900.8369002342224,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "2282af26ead1f58fc3b8a9acb36f6af532c17a45",
            "commit_message": "[libc] Disable -NaN test on float128 systems (#70146)\n\nSome float128 systems (specifically the ones used for aarch64 buildbots)\ndon't respect signs for long double NaNs. This patch disables the printf\ntest that was failing due to this.",
            "commit_timestamp": 1698191154.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698207369.362759,
            "elapsed_time": 2683.945353269577,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d72aa10a9a08e8213c84060de5a78bfb2fc1a6e5",
            "commit_message": "[ADT] Remove an extraneous ternary operator (NFC)\n",
            "commit_timestamp": 1698205456.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698222046.269873,
            "elapsed_time": 3463.3680613040924,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "99c15eb49ba0b607314b3bd221f0760049130d97",
            "commit_message": "[mlir][transform] Handle multiple library preloading passes. (#69705)\n\nThis is a new attempt at #69320.\r\n\r\nThe transform dialect stores a \"library module\" that the preload pass\r\ncan populate. Until now, each pass registered an additional module by\r\nsimply pushing it to a vector; however, the interpreter only used the\r\nfirst of them. This commit turns the registration into \"loading\", i.e.,\r\neach newly added module gets merged into the existing one. This allows\r\nthe loading to be split into several passes, and using the library in\r\nthe interpreter now takes all of them into account. While this design\r\navoids repeated merging every time the library is accessed, it requires\r\nthat the implementation of merging modules lives in the\r\nTransformDialect target (since it at the dialect depend on each\r\nother).\r\n\r\nThis resolves https://github.com/llvm/llvm-project/issues/69111.",
            "commit_timestamp": 1698220350.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698236363.218741,
            "elapsed_time": 3268.4907546043396,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "66f4a1399d7de3d38312a5b251d4f8acd75237ca",
            "commit_message": "[C23] Use thread_local semantics (#70107)\n\nWhen implementing thread_local as a keyword in C23, we accidentally\r\nstarted using C++11 thread_local semantics when using that keyword\r\ninstead of using C11 _Thread_local semantics.\r\n\r\nThis oversight is fixed by pretending the user wrote _Thread_local\r\ninstead. This doesn't have the best behavior in terms of diagnostics,\r\nbut it does correct the semantic behavior.\r\n\r\nFixes https://github.com/llvm/llvm-project/issues/70068\r\nFixes https://github.com/llvm/llvm-project/issues/69167",
            "commit_timestamp": 1698234688.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698250883.455106,
            "elapsed_time": 3409.7873356342316,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e696379c0dda08237cf08268848ae49c6e3e689d",
            "commit_message": "[RISCV][GISel] Falling back to SDISel for scalable vector type values (#70133)\n\nThis patch also tests the fallback of unsupported formal arguments.",
            "commit_timestamp": 1698249754.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698265107.599079,
            "elapsed_time": 3290.010024547577,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "77edd9b77317d008b86a2543fbafdc0c3e8a3759",
            "commit_message": "[lldb] Refactor InstrumentationRuntimeAsan and add a new plugin (#69388)\n\n[lldb] Refactor InstrumentationRuntimeAsan and add a new plugin\r\nInstrumentationRuntimeLibsanitizers.\r\n\r\nThis commit refactors InstrumentationRuntimeASan by pulling out reusable\r\ncode into a separate ReportRetriever class. The purpose of the\r\nrefactoring is to allow reuse of the ReportRetriever class in another\r\nplugin.\r\n\r\nThe commit also adds InstrumentationRuntimeASanLibsanitizers, a new runtime\r\nplugin for ASan. The plugin provides the same\r\nfunctionality as InstrumentationRuntimeASan, but provides a different\r\nset of symbols/library names to search for while activating the plugin.\r\n\r\nrdar://112491689",
            "commit_timestamp": 1698263572.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698279780.925716,
            "elapsed_time": 3754.2456138134003,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b82c62978690a8a518f22780bd13ac2b5ddcd2b8",
            "commit_message": "Fix log format strings\n",
            "commit_timestamp": 1698277357.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698293998.723277,
            "elapsed_time": 3270.481695652008,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fa18827754ebdd144f41fd4a889016c8ae1caf0c",
            "commit_message": "[Driver] Remove some misused NoXarchOption\n\nIf an option has the `NoXarchOption` flag, ClangDriver will emit an error if the\noption is used after `-Xarch_*` (originally for universal macOS binary, reused\nby offloading purposes `-Xarch_host`/etc). The error checking only applies to a\nsmall set of options (e.g. `-o`) and is not very useful for most options, but\n`NoXarchOption` was improperly named `DriverOption` (commit\naabb0b11a3c1d8a6bb859db80400cffdcc9b336f) and lured some contributors to add\n`NoXarchOption` to options that should not have the flag.\n",
            "commit_timestamp": 1698292769.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698308194.978582,
            "elapsed_time": 2732.5023975372314,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f7dc26cab25e1000b1198625e30ce1acdbe8fcb4",
            "commit_message": "[mlir] Fixed typo in type (128x64 -> 64x128) in TMA load test (#70022)\n\nThe test was meant to check `64x128xf16` as the contiguous dimension\r\nexceeds the cache line (128b). TMA requires cache line-aligned loads, so\r\nloading 64x128 can be done with two 64x64 loads, as documented in the\r\ntest.\r\n\r\nHowever, there was a typo in the type, which was `memref<128x64xf16>`\r\ninstead of the correct `memref<64x128xf16>`. This PR corrects the issue\r\nand updates the verification.",
            "commit_timestamp": 1698307374.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698322929.279384,
            "elapsed_time": 3545.9629673957825,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e9c4dc18bc9d34a2c055117a93799be9ade57d41",
            "commit_message": "Revert \"[AMDGPU] Use `S_CSELECT` for uniform i1 ext (#69703)\"\n\nThis reverts commit a1260b5209968c08886e3c6183aa793de8931578.\n\nIt was causing some Vulkan CTS failures.\n",
            "commit_timestamp": 1698321392.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698336951.435241,
            "elapsed_time": 2718.376622915268,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "09e8ef975d9970560b893f79ec283f69ea8db953",
            "commit_message": "Diagnose use of VLAs in a coroutine (#70341)\n\nFixes https://github.com/llvm/llvm-project/issues/65858",
            "commit_timestamp": 1698335957.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698351379.884912,
            "elapsed_time": 2738.7421000003815,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f24c443e8241df7df1d5152c45636c76b682a043",
            "commit_message": "[mlir][SVE] Add an e2e test for vector.contract (#69845)\n\nAdds an end-to-end test for `vector.contract` that targets SVE (i.e.\nscalable vectors). Note that this requires lifting the restriction on\n`vector.outerproduct` (to which `vector.contract` is lowered to) that\nwould deem the following as invalid by the Op verifier (*):\n\n```\nvector.outerproduct %27, %28, %26 {kind = #vector.kind<add>} : vector<3xf32>, vector<[2]xf32>\n```\n\nThis is indeed valid as the end-to-end test demonstrates (at least when\ncompiling for SVE).",
            "commit_timestamp": 1698350269.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698365993.116412,
            "elapsed_time": 3114.1538603305817,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7fe29e585723c8a90e798b3d852f2c54efb6f5dd",
            "commit_message": "[mlir][www] Add missing include for ARM SVE passes\n",
            "commit_timestamp": 1698361711.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698380176.671552,
            "elapsed_time": 2637.5329780578613,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6ca5b814f331a60e2e9c38b8d86110f122e6971b",
            "commit_message": "[llvm] Add myself as codeowner for TextAPI (#70399)\n\n",
            "commit_timestamp": 1698376078.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698394580.906752,
            "elapsed_time": 2764.4206681251526,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "1914bcfd3fb4d37b154e9cfeddcec3c04766d1b7",
            "commit_message": "[docs] Improve README: point to office hours and online sync-ups (#69323)\n\nThe main README.md should probably be kept pretty short and be used to\r\npoint new-comers to the most essential ways to get started on or get\r\ninvolved with LLVM.\r\n\r\nTherefore, this patch removes a pointer to IRC (not used very much these\r\ndays), and does add pointers to office hours and online sync-ups.",
            "commit_timestamp": 1698392710.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698409168.147505,
            "elapsed_time": 3105.607798099518,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8e0b3a881401ed175691b7f4beac9d500c2341bd",
            "commit_message": "[mlir][vector] Update v.contract -> v.outerproduct tests (1/N) (#70379)\n\nTests for conversions from `vector.contract` to `vector.outerproduct`\nfor _matvec_ operations are updated with cases for scalable vectors.\n\nThis patch updates one specific test file (there might be similar\ntests elsewhere):\n\n   * vector-contract-to-outerproduct-transforms.mlir.\n\nOnly the parallel dimension is made scalable. Making the reduction\ndimension scalable would lead to different patterns without\n`vector.outerproduct` (that would need to be added to some other file).\n\nOne duplicate test for _matvec_ is removed.",
            "commit_timestamp": 1698408050.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698423417.737596,
            "elapsed_time": 2947.1839365959167,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b00c8b9685b8fb4c04ddb04b08e41265b9a7dbee",
            "commit_message": "[PassTimingInfo] Handle nested timers in passes (#70165)\n\nSome pass can call other passes, such as CoroCleanupPass. Make pass\r\ntimers work with nested passes.",
            "commit_timestamp": 1698422361.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698438091.296772,
            "elapsed_time": 3580.059501886368,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5c159222627e2201bee73c401be3b76f995b2336",
            "commit_message": "[clang] Remove no-op ptr-to-ptr bitcasts (NFC)\n\nOpaque pointer cleanup effort. NFC.\n",
            "commit_timestamp": 1698436782.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698452541.613173,
            "elapsed_time": 3635.1083488464355,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4f183b1f6e17e5c9acd42d5c0608391533540eff",
            "commit_message": "[mlir][sparse] remove obsoleted output methods from runtime (#70523)\n\nOur CODE and LIB are more unified every day!",
            "commit_timestamp": 1698451121.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698466539.472336,
            "elapsed_time": 2642.5122492313385,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "3cd2a0bc1a2dcf851f1821765946b77d0e65bd2e",
            "commit_message": "[mlir][Interfaces] `LoopLikeOpInterface`: Add helpers to query tied inits/iter_args (#70408)\n\nThe `LoopLikeOpInterface` already has interface methods to query inits\r\nand iter_args. This commit adds helper functions to query tied\r\ninit/iter_arg pairs and removes the corresponding functions for\r\n`scf::ForOp`.",
            "commit_timestamp": 1698462636.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698480970.069567,
            "elapsed_time": 2530.9704461097717,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "19c0c0bdc8bd3b1a68f4d16647ed1e023e1a8e38",
            "commit_message": "TypeSize: remove unused deprecated methods\n\nForgotten in commit 547a5073bed9dec25aec29751c036e2fb7d251c2\n",
            "commit_timestamp": 1698478413.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698495434.90566,
            "elapsed_time": 2573.482340812683,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "497b2ebb9edcfd5315586b796f47589e9820b4b9",
            "commit_message": "[clang-format] Change LLVM style to BreakAfterAttributes == ABS_Leave (#70360)\n\nThis patch addresses some examples of bad formatting in Clang. The following commit contains only changes suggested by clang-format: https://github.com/llvm/llvm-project/pull/70349/commits/21689b56d1fc1db0b2263e8049ff656d3757ad36.\r\nI believe it's a net negative on readability, with a couple of particularly bad cases. Highlights:\r\n```diff\r\n-    [[clang::preferred_type(bool)]]\r\n-    mutable unsigned CachedLocalOrUnnamed : 1;\r\n+    [[clang::preferred_type(bool)]] mutable unsigned CachedLocalOrUnnamed : 1;\r\n```\r\n```diff\r\n-    [[clang::preferred_type(TypeDependence)]]\r\n-    unsigned Dependence : llvm::BitWidth<TypeDependence>;\r\n+    [[clang::preferred_type(TypeDependence)]] unsigned Dependence\r\n+        : llvm::BitWidth<TypeDependence>;\r\n```\r\n```diff\r\n-    [[clang::preferred_type(ExceptionSpecificationType)]]\r\n-    unsigned ExceptionSpecType : 4;\r\n+    [[clang::preferred_type(\r\n+        ExceptionSpecificationType)]] unsigned ExceptionSpecType : 4;\r\n```\r\nStyle guides doesn't appear to have an opinion on this matter.",
            "commit_timestamp": 1698494523.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698509751.89093,
            "elapsed_time": 2754.139205932617,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "497b2ebb9edcfd5315586b796f47589e9820b4b9",
            "commit_message": "[clang-format] Change LLVM style to BreakAfterAttributes == ABS_Leave (#70360)\n\nThis patch addresses some examples of bad formatting in Clang. The following commit contains only changes suggested by clang-format: https://github.com/llvm/llvm-project/pull/70349/commits/21689b56d1fc1db0b2263e8049ff656d3757ad36.\r\nI believe it's a net negative on readability, with a couple of particularly bad cases. Highlights:\r\n```diff\r\n-    [[clang::preferred_type(bool)]]\r\n-    mutable unsigned CachedLocalOrUnnamed : 1;\r\n+    [[clang::preferred_type(bool)]] mutable unsigned CachedLocalOrUnnamed : 1;\r\n```\r\n```diff\r\n-    [[clang::preferred_type(TypeDependence)]]\r\n-    unsigned Dependence : llvm::BitWidth<TypeDependence>;\r\n+    [[clang::preferred_type(TypeDependence)]] unsigned Dependence\r\n+        : llvm::BitWidth<TypeDependence>;\r\n```\r\n```diff\r\n-    [[clang::preferred_type(ExceptionSpecificationType)]]\r\n-    unsigned ExceptionSpecType : 4;\r\n+    [[clang::preferred_type(\r\n+        ExceptionSpecificationType)]] unsigned ExceptionSpecType : 4;\r\n```\r\nStyle guides doesn't appear to have an opinion on this matter.",
            "commit_timestamp": 1698494523.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698524317.996241,
            "elapsed_time": 3218.034281730652,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e00d32afb9d33a1eca48e2b041c9688436706c5b",
            "commit_message": "[clang-format][NFC] Delete TT_LambdaArrow (#70519)\n\nIt's one type of TT_TrailingReturnArrow.",
            "commit_timestamp": 1698522480.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698538929.880587,
            "elapsed_time": 3555.8589074611664,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4ac304242b65413f4eae21af300dd14cb14ed066",
            "commit_message": "[RISCV][GISel] Support G_FPEXT/G_FPTRUNC for F and D extension.\n",
            "commit_timestamp": 1698535337.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698553186.789795,
            "elapsed_time": 3376.332861185074,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4ac304242b65413f4eae21af300dd14cb14ed066",
            "commit_message": "[RISCV][GISel] Support G_FPEXT/G_FPTRUNC for F and D extension.\n",
            "commit_timestamp": 1698535337.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698567313.807063,
            "elapsed_time": 2563.1138060092926,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "133e50db31681b3becc75438d09b792a7fc28177",
            "commit_message": "[RISCV][GISel] Directly emit X0 from getICMPOperandsForBranch instead of using buildConstant+selectConstant.\n\nThis is simpler to implement and matches what SelectionDAG emits.\n\nAlso allows us to make getICMPOperandsForBranch a static function.\n",
            "commit_timestamp": 1698562246.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698581955.133391,
            "elapsed_time": 3329.284996509552,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "640274ff1fe17852615564a80d9f8c69b67f1d59",
            "commit_message": "[libc++][NFC] Refactor __enable_ifs in <cstddef> to be defaulted\ntemplate arguments\n\nThis makes the library more consistent and reduces the size of mangled\nnames a bit as a bonus.\n",
            "commit_timestamp": 1698576590.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698596125.659515,
            "elapsed_time": 2711.7216036319733,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d96529af3c362c53ef2e8c883a9e571fb3626927",
            "commit_message": "[DAG] Attempt shl narrowing in SimplifyDemandedBits (REAPPLIED)\n\nIf a shl node leaves the upper half bits zero / undemanded, then see if we can profitably perform this with a half-width shl and a free trunc/zext.\n\nFollowup to D146121\n\nReapplied - moved after the ShrinkDemandedOp call; reuse the existing KnownBits result; ensure that we only attempt this if all the upper bits are demanded; 547dc461225ba should address the remaining regressions that were noticed in the previous commit.\n\nDifferential Revision: https://reviews.llvm.org/D155472\n",
            "commit_timestamp": 1698593926.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698610541.90846,
            "elapsed_time": 2683.0879640579224,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "91b9a661c21891dc06e1721a26478d5bfe53e4ed",
            "commit_message": "[clang-format][NFC] Reduce indent\n\nBy using if init statement.",
            "commit_timestamp": 1698609312.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698625292.811434,
            "elapsed_time": 3610.883805036545,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "072a7edec3ca3729ec597c413d2fcc9557d88ffc",
            "commit_message": "[AArch64] Add additional concat trunc -> UZP1 patterns\n\nThese extra patterns come from the lowering of fptoi, where an extra assertzext\nis present between some of the vectors.\n",
            "commit_timestamp": 1698620337.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698639644.972205,
            "elapsed_time": 3781.9916400909424,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "22043643c64f748cb00ae92476f2085b3c0903c9",
            "commit_message": "[docs] [C++20] [Modules] Add document for the case of duplicated '-fmodule-file=<module-name>='\n\nThis patch clarifies that in case there are multiple\n'-fmodule-file=<module-name>=' optins for the same `<module-name>`,\nthe last '-fmodule-file=<module-name>=' will override the previous\n'-fmodule-file=<module-name>=' option.\n",
            "commit_timestamp": 1698636321.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698653801.883082,
            "elapsed_time": 3355.964403629303,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "41f3b83fb066b4c3273e9abe02a8630864f22f30",
            "commit_message": "[MLIR][SPIRVToLLVM] Remove typed pointer support (#70568)\n\nThis commit removes the support for lowering SPIRV to LLVM dialect with\r\ntyped pointers. Typed pointers have been deprecated for a while now and\r\nit's planned to soon remove them from the LLVM dialect.\r\n\r\nRelated PSA:\r\nhttps://discourse.llvm.org/t/psa-removal-of-typed-pointers-from-the-llvm-dialect/74502",
            "commit_timestamp": 1698652655.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698668469.405687,
            "elapsed_time": 3742.6554975509644,
            "x64": true,
            "actual_files_count": 1704,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f6643263631bcb0d191ef923963ac1a5ca9ac5fd",
            "commit_message": "Remove the opaque pointers flag from tools\n\nThis has been the default for a while and the flags are slowly going\naway. NFCI.\n",
            "commit_timestamp": 1698667104.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698682703.152165,
            "elapsed_time": 3224.852945327759,
            "x64": true,
            "actual_files_count": 1706,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d9b15b068d19089f72fc0d7dc59ed1d6d77125dc",
            "commit_message": "[CGExprConstant] stop calling into ConstExprEmitter for Reference type destinations (#70366)\n\nFixes a bug introduced by\ncommit b54294e2c959 (\"[clang][ConstantEmitter] have\ntryEmitPrivate[ForVarInit] try ConstExprEmitter fast-path first\")\n\nIn the added test case, the QualType is a LValueReferenceType.\n\n    LValueReferenceType 0x558412998d90 'const char (&)[41]'\n    `-ParenType 0x558412998d30 'const char[41]' sugar\n      `-ConstantArrayType 0x558412998cf0 'const char[41]' 41\n        `-QualType 0x55841294c271 'const char' const\n          `-BuiltinType 0x55841294c270 'char'\n\nFixes: #69979",
            "commit_timestamp": 1698680911.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698696952.661956,
            "elapsed_time": 2499.2413754463196,
            "x64": true,
            "actual_files_count": 1706,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0d5b7dd25cc47123d6920207c089c8a9b98571b4",
            "commit_message": "[OpenMP] Add a test for D158802 (#70678)\n\nIn D158802 we honored user's `thread_limit` value even with the\r\noptimization\r\nintroduced in D152014. This patch adds a simple test.",
            "commit_timestamp": 1698695945.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698711407.005276,
            "elapsed_time": 2656.263015270233,
            "x64": true,
            "actual_files_count": 1706,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5908559c1091245989672ca486c6b3c0a8f60b5a",
            "commit_message": "[X86] Don't set SHF_X86_64_LARGE for variables with explicit section name of a well-known small data section prefix (#70748)\n\nCommit f3ea73133f91c1c23596d45680c8f2269c1dd289 allows SHF_X86_64_LARGE\r\nfor all global variables with an explicit section. For the following\r\nvariables, their data sections will be annotated as SHF_X86_64_LARGE.\r\n\r\n```\r\nconst char relro[512] __attribute__((section(\".rodata\"))) = \"a\";\r\nconst char *const relro __attribute__((section(\".data.rel.ro\"))) = \"a\";\r\nchar data[512] __attribute__((section(\".data\"))) = \"a\";\r\n```\r\n\r\nThe typical linker requirement is that we do not create more than one\r\noutput section with the same name, and the only output section should\r\nhave the bitwise OR value of all input section flags. Therefore, the\r\noutput .data section will have the SHF_X86_64_LARGE flag and be\r\nmoved away from the regular sections. This is undesired but benign.\r\nHowever, .data.rel.ro having the SHF_X86_64_LARGE flag is problematic\r\nbecause dynamic loaders do not support more than one PT_GNU_RELRO\r\nprogram header, and LLD produces the error\r\n`error: section: .jcr is not contiguous with other relro sections`.\r\n\r\nI believe the most appropriate solution is to disallow SHF_X86_64_LARGE\r\non variables with an explicit section of certain prefixes (\r\n.bss/.data/.bss) and allow others (e.g. metadata sections for various\r\ninstrumentation). Fortunately, global variables with an explicit\r\n.bss/.data/.bss section are rare, so they should not cause excessive\r\nrelocation overflow pressure.",
            "commit_timestamp": 1698710584.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698725683.23346,
            "elapsed_time": 2525.781214237213,
            "x64": true,
            "actual_files_count": 1706,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a5403a3a69d10d79c1abd361f02460380e08b2c0",
            "commit_message": "[libcxx] Amend XFAIL for failing tests on Windows (#70422)\n\nSome tests starting passing/failing after #69431 because Clang no longer\r\nenables -fdelayed-template-parsing by default on Windows with C++20.",
            "commit_timestamp": 1698723903.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698740343.259786,
            "elapsed_time": 3368.7560942173004,
            "x64": true,
            "actual_files_count": 1706,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f3fd1ecd5759cfa7f368a2e0a876ca7cddcc8b2b",
            "commit_message": "[gn build] Port d6bfa3341181\n",
            "commit_timestamp": 1698738867.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698754603.717498,
            "elapsed_time": 2907.4348130226135,
            "x64": true,
            "actual_files_count": 1706,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a6dabed3483c60469ff53d51622b22efc4b7b7d2",
            "commit_message": "[AMDGPU] Fix nondeterminism in SIFixSGPRCopies (#70644)\n\nThere are a couple of loops that iterate over V2SCopies. The iteration\r\norder needs to be deterministic, otherwise we can call moveToVALU in\r\ndifferent orders, which causes temporary vregs to be allocated in\r\ndifferent orders, which can affect register allocation heuristics.",
            "commit_timestamp": 1698752862.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698768920.731158,
            "elapsed_time": 2550.5558037757874,
            "x64": true,
            "actual_files_count": 1706,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e107c9468b9c734fba016166fccc82a7e2b6527b",
            "commit_message": "[clang-scan-deps] [P1689] Keep consistent behavior for make dependencies with clang (#69551)\n\nClose https://github.com/llvm/llvm-project/issues/69439.\r\n\r\nThis patch tries to reuse the codes to generate make style dependencies\r\ninformation with P1689 format directly.",
            "commit_timestamp": 1698767987.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698783308.004362,
            "elapsed_time": 2563.1465394496918,
            "x64": true,
            "actual_files_count": 1706,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b799080f19c2c1a23d096289e6e03cdbd8b44895",
            "commit_message": "[ASan][Windows] Add __cdecl to public sanitizer functions (#69625)\n\nThis is necessary for many projects which pass `/Gz` to their compiles,\r\nwhich makes their default calling convention `__stdcall`.\r\n\r\n(personal note, I _really_ wish there was a pragma for this)",
            "commit_timestamp": 1698782364.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698797896.817058,
            "elapsed_time": 3332.9211950302124,
            "x64": true,
            "actual_files_count": 1706,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "604eff60abfce09f956c3b0b1414f8d0d04b5d47",
            "commit_message": "[SelectionDAG] Update comments that refer to MVT::Glue as a 'flag'\n",
            "commit_timestamp": 1698796058.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698811944.668071,
            "elapsed_time": 1906.5423579216003,
            "x64": true,
            "actual_files_count": 1706,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5a71f7a4b725db3b9bf1457e2ca6be2db6aa3996",
            "commit_message": "[mlir] Fix bufferization.alloc_tensor canonicalization crash (#70891)\n\nThis make sure that an invalid negative dimension is ignored and stays\r\ndynamic instead of crashing the compiler.\r\n\r\nFixes #70887",
            "commit_timestamp": 1698811109.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698826738.135962,
            "elapsed_time": 3144.9771361351013,
            "x64": true,
            "actual_files_count": 1706,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e144ae54dcb96838a6176fd9eef21028935ccd4f",
            "commit_message": "[symbolizer] Support symbol lookup\n\nRecent versions of GNU binutils starting from 2.39 support symbol+offset\nlookup in addition to the usual numeric address lookup. This change adds\nsymbol lookup to llvm-symbolize and llvm-addr2line.\n\nNow llvm-symbolize behaves closer to GNU addr2line, - if the value specified\nas address in command line or input stream is not a number, it is treated as\na symbol name. For example:\n\n    llvm-symbolize --obj=abc.so func_22\n    llvm-symbolize --obj=abc.so \"CODE func_22\"\n\nThis lookup is now supported only for functions. Specification with\noffset is not supported yet.\n\nThis is a recommit of 2b27948783e4bbc1132d3220d8517ef62607b558, reverted\nin 39fec5457c0925bd39f67f63fe17391584e08258 because the test\nllvm/test/Support/interrupts.test started failing on Windows. The test was\nchanged in 18f036d0105589c3175bb51a518c5d272dae61e2 and is also updated in\nthis commit.\n\nDifferential Revision: https://reviews.llvm.org/D149759\n",
            "commit_timestamp": 1698824499.0
        },
        {
            "tool_version": "233.0.20231019.194555-eap04",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698841119.599764,
            "elapsed_time": 3181.92266869545,
            "x64": true,
            "actual_files_count": 1706,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "aca9c891a26eaa6e9078b19096cd9aa52d136091",
            "commit_message": "[InstCombine] Avoid use of ConstantExpr::getIntegerCast()\n\nRequire that constants are ImmConstant for this transform, as we\nmay otherwise generate constant expressions, which are not\nnecessarily free.\n",
            "commit_timestamp": 1698839790.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698849456.630588,
            "elapsed_time": 1948.4062058925629,
            "x64": true,
            "actual_files_count": 1706,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "bc44e6e7c64ae7abd885fc31a62e37f649e307be",
            "commit_message": "[clang] Remove no-op ptr-to-ptr bitcasts (NFC)\n\nOpaque pointer cleanup effort.\n",
            "commit_timestamp": 1698847575.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1698855359.727601,
            "elapsed_time": 2760.550683259964,
            "x64": true,
            "actual_files_count": 1706,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e2550b7aa072130230baa9dba0feff808ffe907d",
            "commit_message": "Revert \"[AArch64][Clang] Refactor code to emit SVE & SME builtins (#70662)\"\n\nThis reverts commit c34efe3c2734629b925d9411b3c86a710911a93a.\n",
            "commit_timestamp": 1698854234.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698870039.982511,
            "elapsed_time": 3635.6871366500854,
            "x64": true,
            "actual_files_count": 1706,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6266b964202336a02f40007928719e060bc81694",
            "commit_message": "Add support of the next Ubuntu (Ubuntu 24.04 - Noble Numbat)\n\nCo-authored-by: Sylvestre Ledru <sylvestre@debian.org>\n",
            "commit_timestamp": 1698868879.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698884260.909907,
            "elapsed_time": 2841.646703720093,
            "x64": true,
            "actual_files_count": 1706,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "373c343a77a7afaa07179db1754a52b620dfaf2e",
            "commit_message": "Reland: [GlobalISel] LegalizationArtifactCombiner: Elide redundant G_AND\n\nReland 3686a0b after fixing an exposed miscompile in #68840\n\nDifferential Revision: https://reviews.llvm.org/D159140\n",
            "commit_timestamp": 1698880699.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698898522.532618,
            "elapsed_time": 2620.372451543808,
            "x64": true,
            "actual_files_count": 1706,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ba0763e4cb08015bd0acef5cf05a372d423017b4",
            "commit_message": "[GlobalISel][M68k] Update test after 373c343\n\nMissed test case in experimental target, which was not covered by pre-merge checks.\n",
            "commit_timestamp": 1698892367.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698912922.858114,
            "elapsed_time": 2424.4238209724426,
            "x64": true,
            "actual_files_count": 1706,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "3bc056d5f0ebe9e4074afa088c3a0355f9ab901a",
            "commit_message": "[clang-repl] [test] Make an XFAIL more precise (#70991)\n\nThe const.cpp testcase fails when running in MSVC mode, while it does\r\nsucceed in MinGW mode.\r\n\r\nIn MSVC mode, there are more constructor invocations than expected, as\r\nthe printout looks like this:\r\n\r\n    A(1), this = 0000025597930000\r\n    A(1), this = 0000025597930000\r\n    f: this = 0000025597930000, val = 1\r\n    A(1), this = 0000025597930000\r\n    f: this = 0000025597930000, val = 1\r\n    ~A, this = 0000025597930000, val = 1\r\n    ~A, this = 0000025597930000, val = 1\r\n    ~A, this = 0000025597930000, val = 1\r\n\r\nWhile the expected printout looks like this:\r\n\r\n    A(1), this = 000002C903E10000\r\n    f: this = 000002C903E10000, val = 1\r\n    f: this = 000002C903E10000, val = 1\r\n    ~A, this = 000002C903E10000, val = 1",
            "commit_timestamp": 1698911493.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698927179.00132,
            "elapsed_time": 1952.2235896587372,
            "x64": true,
            "actual_files_count": 1706,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "43e13fdc9e8edd425f640c424071377879c07822",
            "commit_message": "[NFC][clang-tidy]refactor isAssignmentToMemberOf in PreferMemberInitializerCheck (#71006)\n\n",
            "commit_timestamp": 1698924606.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698941865.658825,
            "elapsed_time": 3215.241499185562,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0d0ca51ffe1002cec3b1b7a332e290176b650390",
            "commit_message": "[lldb][AArch64] Read SME2's ZT0 register from Linux core files (#70934)\n\nThe ZT0 register is always 64 bytes in size so it is a lot easier to\r\nhandle than ZA which is scalable. In addition, reading an inactive ZT0\r\nvia ptrace returns all 0s, unlike ZA which returns no register data.\r\n\r\nThis means that a corefile from a process where ZA and ZT0 were inactive\r\nstill contains an NT_ARM_ZT note and we can simply say that if it's\r\nthere, then we should be able to read from it.\r\n\r\nAlong the way I removed a redundant check on the size of the ZA note. If\r\nthat note's size is < the ZA header size, we do not have SME, and\r\ntherefore could not have SME2 either.\r\n\r\nI have added ZT0 to the existing SME core files tests. This means that\r\nyou need an SME2 system to generate them (Arm's FVP at this point). I\r\nthink this is a fair tradeoff given that this is all running in\r\nsimulation anyway and seperate ZT0 tests would be 99% identical copies\r\nof the ZA only tests.",
            "commit_timestamp": 1698940606.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698956009.811032,
            "elapsed_time": 1960.2820703983307,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ee3ee1315a757345dfc50eed34b5074c6e87df2d",
            "commit_message": "[mlir][sparse] cleanup of enums header (#71090)\n\nSome DLT related methods leaked into sparse_tensor.h, and this moves it\r\nback to the right header. Also, the asserts were incomplete and some DLT\r\nmethods duplicated.",
            "commit_timestamp": 1698955227.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698970892.139065,
            "elapsed_time": 3414.2172152996063,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "1f54ef78d57b374dbc86a76419b0ced5162c5bdc",
            "commit_message": "[AArch64] Only clear kill flags if necessary when merging str (#69680)\n\nPreviously the kill flags of the source register were unconditionally\r\ncleared when a `str` pair was merged, which results in suboptimal\r\nregister allocation and inhibits some renaming opportunities which may\r\nallow further merging `str`.",
            "commit_timestamp": 1698969801.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698985059.431237,
            "elapsed_time": 3249.9109287261963,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "063e3fe648533004e6970ab767ece845e3c0afb1",
            "commit_message": "[clang-format] Skip PP directives when determining brace kind (#69473)\n\nPull request #65409 changed the brace kind heuristic to not treat a\r\npreprocessor if directive as a in statement, however, this caused some\r\nregressions.\r\n\r\nIf the contents of a brace don't immediately determine the brace kind,\r\nthe heuristic will look at the characters immediately before and after\r\nthe closing brace to determine the brace type.\r\n\r\nUnfortunately, if the closing brace was preceded by a preprocessor\r\ndirective, for example `#endif`, the preceding token was `endif`, seen\r\nas just an identifier, so the braces were understood as a braced list.\r\n\r\nThis patch fixes this behaviour by skipping all preprocessor directives\r\nwhen calculating brace types. Comments were already being skipped, so\r\nnow preprocessor lines are skipped alongside comments.\r\n\r\nFixes https://github.com/llvm/llvm-project/issues/68404",
            "commit_timestamp": 1698983480.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1698999381.001796,
            "elapsed_time": 2666.3631365299225,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8e2b3309a975748649a504620a9600da9fe3c837",
            "commit_message": "[Docs][LTO] Updated HowToSubmitABug.rst for LTO crashes (#68389)\n\n",
            "commit_timestamp": 1698997406.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1699013906.938966,
            "elapsed_time": 3208.7334139347076,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "97a238e863fdf1f1a54e4bb609e130a6456a4f61",
            "commit_message": "[MLIR][LLVM] Remove typed pointer conversion utils (#71169)\n\nThis commit removes the no longer required type pointer helpers from the\r\nLLVM dialect conversion utils. Typed pointers have been deprecated for a\r\nwhile now and it's planned to soon remove them from the LLVM dialect.\r\n\r\nRelated PSA:\r\nhttps://discourse.llvm.org/t/psa-removal-of-typed-pointers-from-the-llvm-dialect/74502",
            "commit_timestamp": 1699012955.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1699028521.394282,
            "elapsed_time": 4006.248860836029,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "015c06ade023362ba7410e06618dea407fa07e5f",
            "commit_message": "Regenerate a couple scev/indvars tests [nfc]\n\nUpdate to modern output to reduce spurious deltas in upcoming change.\n",
            "commit_timestamp": 1699026179.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699042694.761372,
            "elapsed_time": 3220.917481660843,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "71a13675dad588712094fb09c655570974f98540",
            "commit_message": "[dsymutil] Filter our swiftinterface files from the toolchain. (#71205)\n\nDsymutil already avoids copying textual Swift interface files from the\r\nSDK, since any consumer would have to have a matching SDK installed\r\nanyway. It should also do the same thing with interfaces found in the\r\ntoolchain itself, which includes the compiler built-in libraries such as\r\nSwift (=the standard library), and _Concurrency.\r\n\r\nrdar://117881604",
            "commit_timestamp": 1699041461.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699056841.167043,
            "elapsed_time": 1948.8150746822357,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "73e974c00aa71fc51c59f4f045cb774ef1424031",
            "commit_message": "[libc] Cleanup ErrnoSetterMatcher target (#71240)\n\nThe ErrnoSetterMatcher target was renamed in a previous patch, but not\nall uses were caught. This patch fixes those that remain.",
            "commit_timestamp": 1699056008.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699071438.343236,
            "elapsed_time": 3184.769070625305,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "87f5e22987f509b7bd5b67eb2a19697508077f25",
            "commit_message": "[MemProf] Tolerate missing leaf debug frames (#71233)\n\nLoosen up the matching so that a missing leaf debug frame in the profile\r\ndoes not prevent matching an allocation context if we can match further\r\nup the inlined call context. This relies on the pre-inliner, which was\r\nalready the default when performing normal PGO feedback along with the\r\nMemProf feedback, but to ensure matching is not affected by the presence\r\nof PGO, enable the pre-inliner for MemProf feedback as well.",
            "commit_timestamp": 1699070467.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699085813.071717,
            "elapsed_time": 3137.672406435013,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "83888a5404d46667647fe36d6fa510d075ed57ea",
            "commit_message": "[Github] Only run github actions on main monorepo (#69774)\n\nThere are currently a couple jobs that run on all forks of LLVM too (if\r\nthere is a PR opened, or in the case of the documentation builds, upon\r\npushing to main). This isn't desired behavior. This commit disables that\r\nbehavior, forcing the jobs to not run if they aren't running against\r\nllvm/llvm-project or a PR against that repo.",
            "commit_timestamp": 1699082226.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699099963.541168,
            "elapsed_time": 2018.0927979946136,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "54574d3272b5d0bb35d82fd8f5941703d91ef087",
            "commit_message": "[AArch64][GlobalISel] Expand handling for fptosi and fptoui (#70635)\n\nNow that we have more types handled for zext/sext and trunc, it is\r\npossible to get more types working for the vector float to integer\r\nconversions. This patch adds fp16, widening and narrowing vector support\r\nto handle more types. The smaller types wil be expanded to the size of\r\nthe larger element type. A couple of case require more awkward truncates\r\nto get working as they go from illegal to illegal types.",
            "commit_timestamp": 1699098425.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699114541.490275,
            "elapsed_time": 2812.2161662578583,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "1085b70a94d34a645d97990e1ac213882af5128e",
            "commit_message": "[DAG] Don't fold (zext (bitop (load x), cst)) -> (bitop (zextload x), (zext cst)) if the zext is free\n\nPrevents an infinite loop if we've been trying to narrow the bitop to a more preferable type\n",
            "commit_timestamp": 1699111933.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699128731.565886,
            "elapsed_time": 1978.341880083084,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "bf87638a9d2771a75f59aa40296368cdec3e7353",
            "commit_message": "[gn] port 3fe69bab1149 (all archs in llvm-config.h :/)\n",
            "commit_timestamp": 1699126048.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699143415.10046,
            "elapsed_time": 2539.700247526169,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ad9147399f196c1c9b6bec373a5ad3afadc51a4a",
            "commit_message": "[InstCombine] Improve eq/ne by parts to handle `ult/ugt` equality pattern.\n\n(icmp eq/ne (lshr x, C), (lshr y, C) gets optimized to `(icmp\nult/uge (xor x, y), (1 << C)`. This can cause the current equal by\nparts detection to miss the high-bits as it may get optimized to the\nnew pattern.\n\nThis commit adds support for detecting / combining the ult/ugt\npattern.\n\nCloses #69884\n",
            "commit_timestamp": 1699142428.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699157789.472093,
            "elapsed_time": 2669.299627304077,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c8bc72dc79eec511d76c741fe6b6334355903dbe",
            "commit_message": "[mlir][spirv][cf] legalize block arguments when convert cf to spirv (#71288)\n\nWhen converting branches, legalize target block arguments first.\r\n\r\nFixes llvm#70813",
            "commit_timestamp": 1699156139.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699172153.003817,
            "elapsed_time": 2652.7054176330566,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c0a73918bfddc6a04a897aab57fb95e8d2da7ec0",
            "commit_message": "[ItaniumCXXABI] Add -fassume-nothrow-exception-dtor to assume that all exception objects' destructors are non-throwing\n\nLink: https://lists.llvm.org/pipermail/cfe-dev/2021-August/068740.html (\"[Exception Handling] Could we mark __cxa_end_catch as nounwind conditionally?\"\nLink: https://github.com/llvm/llvm-project/issues/57375\n\nA catch handler calls `__cxa_begin_catch` and `__cxa_end_catch`. For a catch-all\nclause or a catch clause matching a record type, we:\n\n* assume that the exception object may have a throwing destructor\n* emit `invoke void @__cxa_end_catch` (as the call is not marked as the `nounwind` attribute).\n* emit a landing pad to destroy local variables and call `_Unwind_Resume`\n\n```\nstruct A { ~A(); };\nstruct B { int x; };\nvoid opaque();\nvoid foo() {\n  A a;\n  try { opaque(); } catch (...) { } // the exception object has an unknown type and may throw\n  try { opaque(); } catch (B b) { } // B::~B is nothrow, but we do not utilize this\n}\n```\n\nPer C++ [dcl.fct.def.coroutine], a coroutine's function body implies a `catch (...)`.\nOur code generation pessimizes even simple code, like:\n```\nUserFacing foo() {\n  A a;\n  opaque();\n  co_return;\n  // For `invoke void @__cxa_end_catch()`, the landing pad destroys the\n  // promise_type and deletes the coro frame.\n}\n```\n\nThrowing destructors are typically discouraged. In many environments, the\ndestructors of exception objects are guaranteed to never throw, making our\nconservative code generation approach seem wasteful.\n\nFurthermore, throwing destructors tend not to work well in practice:\n\n* GCC does not emit call site records for the region containing `__cxa_end_catch`. This has been a long time, since 2000.\n* If a catch-all clause catches an exception object that throws, both GCC and Clang using libstdc++ leak the allocated exception object.\n\nTo avoid code generation pessimization, add an opt-in driver option\n-fassume-nothrow-exception-dtor to assume that `__cxa_end_catch` calls have the\n`nounwind` attribute. This implies that thrown exception objects' destructors\nwill never throw.\n\nTo detect misuses, diagnose throw expressions with a potentially-throwing\ndestructor. Technically, it is possible that a potentially-throwing destructor\nnever throws when called transitively by `__cxa_end_catch`, but these cases seem\nrare enough to justify a relaxed mode.\n\nReviewed By: ChuanqiXu\n\nDifferential Revision: https://reviews.llvm.org/D108905\n",
            "commit_timestamp": 1699169978.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699186347.991703,
            "elapsed_time": 1922.2018308639526,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7c1ad51e018c5a1517ca6fb58a4d7027a8bec64e",
            "commit_message": "[gn] port c3a302d399e6 (SymbolLocator)\n\nThis isn't referenced from anything yet, so no effect.\n(It's not referenced yet in CMake either from what I can tell.)\n",
            "commit_timestamp": 1699182848.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699201034.893,
            "elapsed_time": 3315.6208169460297,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a54545ba6514802178cf7cf1c1dd9f7efbf3cde7",
            "commit_message": "[CMake] Fix __builtin_thread_pointer check with LTO\n\nWith LTO, gcc's IPA passes might drop the foo() function and then the test\nwill pass even on platforms where __builtin_thread_pointer is unavailable.\n\nOn PPC64, we get this as a result:\n```\nllvm/tools/llvm-exegesis/lib/BenchmarkRunner.cpp:361:61: error: \u2018__builtin_thread_pointer\u2019 is not supported on this targ\n```\n\nJust mark the function in the CMake configure test with the 'used' attribute to\navoid it being optimised out. The test then behaves correctly with -flto.\n\nTested with e.g. 'powerpc64le-linux-gnu-gcc -O2 -flto a.c'.\n\nReported-by: matoro\nReviewed-by: maskray\nCloses: https://github.com/llvm/llvm-project/pull/70968\nSigned-off-by: Sam James <sam@gentoo.org>\n",
            "commit_timestamp": 1699196087.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699215120.841389,
            "elapsed_time": 1930.7651617527008,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5d2f9aee662fd83dc3265d75a55f3f4b4d4b79bb",
            "commit_message": "[RISCV][GISel] Add call preserved regmask to calls created by RISCVCallLowering::lowerCall.\n",
            "commit_timestamp": 1699213535.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699230123.937438,
            "elapsed_time": 3455.7370941638947,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c5ecf5a130f087f493802800f3565c7bb75c238a",
            "commit_message": "Fix compression header size check in ELF writer (#66888)\n\nThe test had 32-bit and 64-bit header sizes the wrong way around.",
            "commit_timestamp": 1699227200.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699244005.914546,
            "elapsed_time": 1956.8066084384918,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "267a437920904723360cb2837172bd776db73057",
            "commit_message": "[Clang][Sema] Skip RecordDecl when checking scope of declarations (#69432)\n\nIn non C++ mode, struct definitions does not create a scope for\r\ndeclaration.",
            "commit_timestamp": 1699242891.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699258853.391558,
            "elapsed_time": 3572.7549035549164,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b6deea1b53ae84806941c0a43e4f59d3aa40692a",
            "commit_message": "[ConstantRange] Handle `Intrinsic::ctpop` (#68310)\n\nThis patch adds support for `Intrinsic::ctpop` in ConstantRange. It\r\ncalculates the range in O(1) with the LCP-based method.\r\n\r\nMigrated from https://reviews.llvm.org/D153505.",
            "commit_timestamp": 1699257590.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699272706.095286,
            "elapsed_time": 1986.9196124076843,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ff67e851826ccd535efce86db7c1a57e3f95d790",
            "commit_message": "llvm: [NFC] Robustify testcase (#71120)\n\nRobustify the check-not to not trigger on llvm-as's pathname in its initial error message.",
            "commit_timestamp": 1699271881.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699287309.400304,
            "elapsed_time": 2551.439527273178,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5fc69134a15a436e69c5b1db26f0a91c1deb3acb",
            "commit_message": "[flang] Match argument types for std::min (#71102)\n\nPR #68342 causes build breakage on MacOS due to uint64_t being defined\r\nas unsigned long long instead of unsigned long. It leads to type\r\nmismatch in the arguments for std::min.",
            "commit_timestamp": 1699286539.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699301542.68222,
            "elapsed_time": 1978.6965947151184,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f2d8a0ac1dd1fe55b2c3b358c525fbc01b0121ed",
            "commit_message": "[clang][NFC] Refactor `ParamCommandComment::PassDirection`\n\nThis patch converts `ParamCommandComment::PassDirection` to a scoped enum at namespace scope, making it eligible for forward declaring. This is useful for e.g. annotating bit-fields with `preferred_type`.\n",
            "commit_timestamp": 1699300551.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699316248.481528,
            "elapsed_time": 2967.1766917705536,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "3c356eef31ab309466c198de3915037b068d8861",
            "commit_message": "[flang][openacc] Support variable from equivalence in data clauses (#71434)\n\nThe value for a var in an equivalence is represented by a `fir.ptr`.\r\nSupport this type in the recipe creation.",
            "commit_timestamp": 1699314580.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699330314.924718,
            "elapsed_time": 1975.115065574646,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "23099ac23983194e82d574b6bf53da14c57ae84d",
            "commit_message": "Add known and demanded bits support for zext nneg (#70858)\n\nzext nneg was recently added to the IR in #67982.   This patch teaches\r\ndemanded bits and known bits about the semantics of the instruction, and\r\nadds a couple of test cases to illustrate basic functionality.",
            "commit_timestamp": 1699325276.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699344742.439621,
            "elapsed_time": 1957.3137214183807,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4d9f3ca77cb9deff1d5652e161acf3b1be069509",
            "commit_message": "[HWASAN] Add memset interceptor (#71244)\n\nCo-authored-by: Vitaly Buka <vitalybuka@google.com>",
            "commit_timestamp": 1699344064.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699359117.425374,
            "elapsed_time": 1965.180507659912,
            "x64": true,
            "actual_files_count": 1707,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ba116ff41d525a4b6c931664f1b4437a7dd55b1d",
            "commit_message": "Revert \"[Flang][OpenMP] Fix to support privatisation of alloc strings (#71204)\"\n\nThis reverts commit 192bee0db1dfb8b2f570031102a2326037b75fa1.\nReverting to fix the CI.  https://lab.llvm.org/buildbot/#/builders/21/builds/84995\n",
            "commit_timestamp": 1699357824.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699373567.647346,
            "elapsed_time": 1982.1066646575928,
            "x64": true,
            "actual_files_count": 1710,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f0cdf4b468f6ee48b0d0d51ce78145455e2f07a6",
            "commit_message": "[InstCombine] Check FPMathOperator for Ctx before FMF check\n\nWe need to check FPMathOperator for Ctx instruction before checking fast\nmath flag on this Ctx.\n\nCtx is not always an FPMathOperator, so explicitly check for it.\n\nFixes #71548.\n",
            "commit_timestamp": 1699372219.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699387927.714858,
            "elapsed_time": 1994.8110737800598,
            "x64": true,
            "actual_files_count": 1710,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0bb510c59d0133dc4dc0509123fff08a689d8f23",
            "commit_message": "[openacc] Remove duplicate operand from LoopOp getDataOperand (#71576)\n\nvectorLength operand was counted twice - should only be counted once.",
            "commit_timestamp": 1699386166.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699402417.532388,
            "elapsed_time": 1956.1194775104523,
            "x64": true,
            "actual_files_count": 1710,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b1af3c0857f236fa665055d7e8cf76eed41be3ae",
            "commit_message": "[libc][FIXME] Disable math tests to make the GPU bots green (#71603)\n\nSummary:\nThis is a quick hack to disable affected GPU math tests so the bots will\nbe green again.\n\nThe offending commit is d2361b204857820d18aa344b890072df8d6154dd. If\nthat is reverted along with this patch the tests also pass.",
            "commit_timestamp": 1699400601.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699416822.598679,
            "elapsed_time": 1978.4702026844025,
            "x64": true,
            "actual_files_count": 1710,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d199fd76f7b76d902d8ef210d82689f299934793",
            "commit_message": "[NFC] Add f128 frexp intrinsics for PowerPC\n",
            "commit_timestamp": 1699414060.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699431157.93487,
            "elapsed_time": 1987.841905593872,
            "x64": true,
            "actual_files_count": 1710,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "24b11ba24da3e65f718391ccc85d4d22a081e893",
            "commit_message": "[RISCV][GISel] Use default lowering for G_DYN_STACKALLOC.\n",
            "commit_timestamp": 1699430367.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699445615.834735,
            "elapsed_time": 1945.5592589378357,
            "x64": true,
            "actual_files_count": 1710,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ee03dc1836348420221f8830cae9868d3a51484c",
            "commit_message": "Revert \"[clangd] Allow hover over 128-bit variable without crashing (#71415)\"\n\nThis reverts commit 2626916c45f428226052f5e431e510743aba9e75.\n\nIt failed on buildbots not supporting __int128_t.\n",
            "commit_timestamp": 1699444586.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699460292.094702,
            "elapsed_time": 3534.7212512493134,
            "x64": true,
            "actual_files_count": 1710,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "2c61f9cab51b4e358e4c86343cbcfa6ffa8504a2",
            "commit_message": "[CVP] Fix use after scope\n\nStore the result of ConstantRange::sdiv() in a variable, as\ngetSingleElement() will return a pointer to the APInt it contains.\n",
            "commit_timestamp": 1699458827.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699474316.190177,
            "elapsed_time": 2005.8108382225037,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "05fa923a9bbb657fc47f3c238c8f6b48f0a892a9",
            "commit_message": "Fix SmallVector usage in SerailzeToHsaco (#71702)\n\nEnable merging #71439 by removing a definitely-wrong usage of\r\nstd::unique_ptr<SmallVectorImpl<char>> as a return value with passing in\r\na SmallVectorImpl<char>&\r\n\r\nAlso change the following function to take ArrayRef<char> instead of\r\nconst SmalVectorImpl<char>& .",
            "commit_timestamp": 1699473461.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699488800.68845,
            "elapsed_time": 2001.2811357975006,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "71de61259a513120796c294568754b0b9e2ee085",
            "commit_message": "[lld][MachO] Prevent doubled N_SO when comp_dir and name absolute (#71608)\n\nWhen forming MachO STABS, this change detects if the DW_AT_name of the\r\ncompile unit is already absolute (as allowed by DWARF), and if so, does\r\nnot prepend DW_AT_comp_dir.\r\n\r\nFixes #70995",
            "commit_timestamp": 1699487722.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699503574.337582,
            "elapsed_time": 3394.8654568195343,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8a454e1e3cda98017401b22911ae23c67c7b31b0",
            "commit_message": "[libc++][ASan] Removing clang version checks (#71673)\n\nThis commit removes checks like `_LIBCPP_CLANG_VER >= 1600` related to\r\nASan annotations. As only 2 previous versions are supported, it's a TODO\r\nfor LLVM 18.",
            "commit_timestamp": 1699496888.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699518516.091041,
            "elapsed_time": 2018.7661559581757,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "14b5abbfe2071d7ec5eded67f45988e2e484874e",
            "commit_message": "[lldb][AArch64][Linux] Add field information for the fpsr register (#71651)\n\nThis one is easy because none of the fields depend on extensions. Only\r\nthing to note is that I've ignored some AArch32 only fields.\r\n\r\n```\r\n(lldb) register read fpsr\r\n    fpsr = 0x00000000\r\n         = (QC = 0, IDC = 0, IXC = 0, UFC = 0, OFC = 0, DZC = 0, IOC = 0)\r\n```",
            "commit_timestamp": 1699517924.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699531966.659684,
            "elapsed_time": 1959.1321029663086,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "59a063d5c65d963ef20529b49796c83aeb33e864",
            "commit_message": "[ExpandMemCmp] Improve memcmp optimisation for boolean results (#71221)\n\nThis patch enhances the optimization of memcmp calls when only two\r\noutcomes\r\nare needed and comparison fits into one block, for example:\r\n\r\n\tbool result = memcmp(a, b, 6) > 0;\r\n\r\nPreviously, LLVM would generate unnecessary operations even when the\r\nuser of\r\nmemcmp was only interested in a binary outcome.",
            "commit_timestamp": 1699530724.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699546285.010939,
            "elapsed_time": 1989.3748733997345,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8131eeb9e1ee9d61a84c053f6449044afbe40266",
            "commit_message": "[scudo] document allocation_ring_buffer_size (#71812)\n\n",
            "commit_timestamp": 1699545587.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699561008.24067,
            "elapsed_time": 3313.463022708893,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a2d9d2e1d96a3e81f4eed7f70e0a62cbc0e77cfd",
            "commit_message": "[mlir][sparse] re-enable aarch64 test. (#71855)\n\nShould have been fixed by initializing output tensor to zeros in\r\nhttps://github.com/llvm/llvm-project/pull/71845",
            "commit_timestamp": 1699559212.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699575154.804406,
            "elapsed_time": 1962.51691031456,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "51af040b22c117e4f2429277c515299cd62c58ea",
            "commit_message": "[mlir][gpu] Eliminate redundant gpu.barrier ops (#71575)\n\nAdds a canonicalizer for gpu.barrier that gets rid of duplicates.\r\n\r\nCo-authored-by: Eric Eaton <eric@nod-labs.com>",
            "commit_timestamp": 1699571180.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699589701.614327,
            "elapsed_time": 2797.1246235370636,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0e7b30fa821dd4899227aa643030f4e4164f4e56",
            "commit_message": "[C++20] [Modules] Enhance better diagnostic for implicit global module and module partitions\n\nDue to an oversight, when users use an unexported declaration from\nimplicit global module, the diagnostic will show \"please #include\"\ninstead of \"please import\". This patch corrects the behavior.\n\nAlso previously, when users use an unexported declarations from module\npartitions, the diagnostic message will always show the partition name\nno matter if that partition name is visible to the users. Now the users\nmay only see the partition name if the users are in the same module with\nthe partition unit.\n",
            "commit_timestamp": 1699585087.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699604425.422722,
            "elapsed_time": 3481.4746174812317,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "34d712243fa2a9776ad2cd3709b3a988d354b8a0",
            "commit_message": "[gn build] Port f7d784709673\n",
            "commit_timestamp": 1699602902.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699618297.071445,
            "elapsed_time": 2005.2605962753296,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "bd611264993f64decbce178d460caf1d1cb05f59",
            "commit_message": "[lldb][docs] Update Discord invite link\n\nThe previous one must have been an expiring one, this new\none is a non-expiring one that Chandler generated some time ago.\n",
            "commit_timestamp": 1699615110.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699632808.466531,
            "elapsed_time": 1963.4750082492828,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fe7b5e2cfcf6848287010291081f85fa1f6bb2ef",
            "commit_message": "Revert \"[AMDGPU] Call the `FINI_ARRAY` destructors in the correct order (#71815)\"\n\nThis reverts commit c1d5865a313d0a8a254b37c852bdd444453c0f73.\n\nIntroduces a new use of ConstantExpr::getAShr().\n",
            "commit_timestamp": 1699632066.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699647481.723505,
            "elapsed_time": 3239.964804649353,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "81a76902ae0fc08138e37212239c5c704eec2f26",
            "commit_message": "[lldb] Only run ignored_artificial_fields.test when gcc is available.\n",
            "commit_timestamp": 1699646187.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699661584.100835,
            "elapsed_time": 1952.5075070858002,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "64f62de96609dc3ea9a8a914a9e9445b7f4d625d",
            "commit_message": "[lldb] Read Checksum from DWARF line tables (#71458)\n\nRead the MD5 checksum from DWARF line tables and store it in the\ncorresponding support files.\n\nThis is a re-land after fixing an off-by-one error in LLDB's\nParseSupportFilesFromPrologue (fixed in #71984).\n",
            "commit_timestamp": 1699656227.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699676155.187574,
            "elapsed_time": 2668.552533388138,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7e0bae5b3433b2b7c076912d5f249e6af5881947",
            "commit_message": "[RISCV][GISel] Add isel patterns for SHXADD with s32 type on RV64.\n",
            "commit_timestamp": 1699674777.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699690520.474254,
            "elapsed_time": 2723.0876939296722,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c22fffcba477152bcfbffb1b6d388ecd08073282",
            "commit_message": "[llvm] Stop including llvm/ADT/MapVector.h (NFC)\n\nIdentified with clangd.\n",
            "commit_timestamp": 1699689380.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699704892.868038,
            "elapsed_time": 2518.3878860473633,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4effdc47947b9260a1540ee7d8b699b077cbedb5",
            "commit_message": "[clang][CodeGen] Regenerate `wasm-eh.cpp` test (NFC)\n\nClang buildbot was previously failing when targeting WebAssembly.\n\nFixes: https://lab.llvm.org/buildbot/#/builders/45/builds/14145.\n",
            "commit_timestamp": 1699700399.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699719115.478621,
            "elapsed_time": 1992.4613156318665,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5c91b2886f6bf400b60ca7839069839ac3980f8f",
            "commit_message": "[clang] Replace uses of CreatePointerBitCastOrAddrSpaceCast (NFC) (#68277)\n\nWith opaque pointers, `CreatePointerBitCastOrAddrSpaceCast` can be replaced with `CreateAddrSpaceCast`.\r\nReplace or remove uses of `CreatePointerBitCastOrAddrSpaceCast`.\r\n\r\nOpaque pointer cleanup effort.",
            "commit_timestamp": 1699718264.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699733504.931692,
            "elapsed_time": 1897.5163094997406,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e8209b2486d8fa1a5314af0fe896b9628effa471",
            "commit_message": "[MachineSink] Drop debug info for instructions deleted by sink-and-fold (#71443)\n\nAfter performing sink-and-fold over a COPY, the original instruction is\r\nreplaced with one that produces its output in the destination of the\r\ncopy. Its value is still available (in a hard register), so if there are\r\ndebug instructions which refer to the (now deleted) virtual register\r\nthey could be updated to refer to the hard register, in principle.\r\nHowever, it's not clear how to do that, moreover in some cases the debug\r\ninstructions may need to be replicated proportionally to the number of\r\nthe COPY instructions replaced and in some extreme cases we can end up\r\nwith quadratic increase in the number of debug instructions, e.g:\r\n\r\n        int f(int);\r\n    \r\n        void g(int x) {\r\n          int y = x + 1;\r\n    \r\n          int t0 = y;\r\n          f(t0);\r\n    \r\n          int t1 = y;\r\n          f(t1);\r\n        }",
            "commit_timestamp": 1699731794.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699748023.975902,
            "elapsed_time": 2021.0639684200287,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fdc904e5681c00f5e347f5889f4dfd4a448ebaf4",
            "commit_message": "[RISCV] Add isel pattern to turn (or (zext X), Y) into add.uw when X and Y are disjoint.\n\nImprove code for -riscv-experimental-rv64-legal-i32.\n",
            "commit_timestamp": 1699746698.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699762678.899771,
            "elapsed_time": 3225.2107775211334,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "1a66465c7290f8a5ddb250ca7fffaddc9205011d",
            "commit_message": "[Github] Fetch through merge base in code formatting action (#72020)\n\nThis commit adds another step to the Github workflow that runs the code\r\nformatting check to fetch through the merge base. This ensures that the\r\nnecessary history is present to find the changed files and also to run\r\nclang-format over. This change massively increases the speed of the\r\naction (~10 minutes down to ~2 minutes in most cases from my testing)\r\nand also increases the reliability significantly.",
            "commit_timestamp": 1699760883.0
        },
        {
            "tool_version": "233.0.20231029.171547-eap05",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699776781.909279,
            "elapsed_time": 1987.6985285282135,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8c53cfd351a963118e18a47ffd5175308fb108f8",
            "commit_message": "[RISCV][GISel] Rename register bank tablegen records to include B suffix to match the MIR name. NFC\n\nGPRRegBank -> GPRBRegBank\nFPRRegBank -> FPRBRegBank\n",
            "commit_timestamp": 1699773256.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699787740.058357,
            "elapsed_time": 1949.8357100486755,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "40671bbdefb6ff83e2685576a3cb041b62f25bbe",
            "commit_message": "[clang-format] Handle control statements in BreakAfterAttributes (#71995)\n\nThis patch doesn't work for do-while loops.\r\n\r\nFixed #64474.",
            "commit_timestamp": 1699780107.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1699791344.898113,
            "elapsed_time": 2528.571477651596,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "40671bbdefb6ff83e2685576a3cb041b62f25bbe",
            "commit_message": "[clang-format] Handle control statements in BreakAfterAttributes (#71995)\n\nThis patch doesn't work for do-while loops.\r\n\r\nFixed #64474.",
            "commit_timestamp": 1699780107.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1699805542.815696,
            "elapsed_time": 1927.3237981796265,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8569465adf5e6c792e88be56b0e6b24f1c74e633",
            "commit_message": "Add a Clang NATVIS visualizer for StringLiteral\n",
            "commit_timestamp": 1699798935.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1699819945.171427,
            "elapsed_time": 1959.5769228935242,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4c3206c5d5dee9dc3c7ad32c09d57a7fc592bcea",
            "commit_message": "[RISCV][GISel] Sink more code into getOperandsForBranch. NFC\n\nMove the m_GICmp match call in and use it to collect the operands.\n\nThis code is also needed for G_BRCOND.\n",
            "commit_timestamp": 1699818752.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1699834811.00716,
            "elapsed_time": 3146.2407677173615,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a533b76468ac1df54e2e541b05ba4c060a77c603",
            "commit_message": "[clang-format][NFC] Simplify parseBracedList() (#72010)\n\n",
            "commit_timestamp": 1699833306.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1699848730.065314,
            "elapsed_time": 1971.9567649364471,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "44e8bea4009a1a275921d027343f9d11c61c1d61",
            "commit_message": "[GISel][AArch64] Notify the Observer when CTTZ lowering changes the opcode to CTPOP. (#72008)\n\n",
            "commit_timestamp": 1699846584.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1699863179.843993,
            "elapsed_time": 1961.2286932468414,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4d5a8ccf25a6c43930c332e75ecead287778af6b",
            "commit_message": "[Driver] Add LTO support for Haiku and OpenBSD (#72047)\n\n",
            "commit_timestamp": 1699861334.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1699877594.532227,
            "elapsed_time": 1961.8499376773834,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "1a9fbf61661558d4f3e03390161400db734aab59",
            "commit_message": "[X86] combineLoad - reuse an existing VBROADCAST_LOAD constant for a smaller vector load of the same constant\n\nExtends the existing code that performed something similar for SUBV_BROADCAST_LOAD, but this is just for cases where AVX2 targets loads full width 128-bit constant vectors but broadcasts the equivalent 256-bit constant vector\n\nFixes AVX2 case for Issue #70947\n",
            "commit_timestamp": 1699876744.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1699891938.297679,
            "elapsed_time": 1947.4997606277466,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "96ef623a7525f71184b6111f8389e45260ef13ff",
            "commit_message": "[AArch64] Cast predicate operand of SVE gather loads/scater stores to the parameter type of the intrinsic (NFC) (#71289)\n\nWhen emitting LLVM IR for gather loads/scatter stores, the predicate\r\nparameter is cast to a type that depends on the loaded, resp. stored\r\ntype. That's correct for operation where we have a predicate per lane,\r\nhowever it is not correct for quadword loads and stores (`LD1Q`, `ST1Q`)\r\nwhere the predicate is per 128-bit chunk, independent from the ACLE\r\nintrinsic type.\r\n\r\nThis can be universally handled by cast to the corresponding parameter\r\ntype of the intrinsic. The intrinsic itself should be defined in a way\r\nthat enforces relations between parameter types.",
            "commit_timestamp": 1699891267.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1699906544.188693,
            "elapsed_time": 2812.550838947296,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "269685545e439ad050b67740533c59f965cae955",
            "commit_message": "[mlir][sparse] remove filter-loop based algorithm support to handle a\u2026 (#71840)\n\n\u2026ffine subscript expressions.",
            "commit_timestamp": 1699904209.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1699921226.995294,
            "elapsed_time": 3194.703788757324,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a5eb6bdd8e126ad94de0a12002cac2c3f01e05f5",
            "commit_message": "[flang] Relax overindexing error to warning for last dummy dimension (#71725)\n\nCompilation-time subscript value range checking should emit a warning,\r\nnot an error, when the indexed array is a dummy argument; there's\r\nold-school codes out there that should have used assumed-size dummy\r\narguments but didn't.",
            "commit_timestamp": 1699919974.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1699935107.034057,
            "elapsed_time": 2027.5222368240356,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a852869398af71141d9422ab3e53a11433a3791f",
            "commit_message": "[clang-format] Fix a bug in parsing function/variable names\n\nFunction and variable names are not detected when there is a\n__attribute__((x)) preceding the name.\n\nFixes #64137.\n\nDifferential Revision: https://reviews.llvm.org/D156370\n",
            "commit_timestamp": 1699932928.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1699949584.120466,
            "elapsed_time": 2004.7969138622284,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e96eddec5e8ecc0fdab377571aabe85a2ee7617e",
            "commit_message": "Reland \"[X86][AVX10] Fix a bug when using -march with no-evex512 attribute (#72126)\"\n\nFixes #72106\n",
            "commit_timestamp": 1699947570.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1699963951.865183,
            "elapsed_time": 1942.6006088256836,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "63537872aefe845ba40770112d0a2cf0927f27b8",
            "commit_message": "ExtractAPI: use zero-based indices for line/column in symbol graph (#71753)\n\nOther implementations of the symbol graph format use zero-based indices\r\nfor source locations, which causes problems when combined with clang's\r\ncurrent one-based indices. This commit sets ExtractAPI's symbol graph\r\noutput to use zero-based indices to align with other implementations.\r\n\r\nrdar://107639783",
            "commit_timestamp": 1699962372.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1699978612.853161,
            "elapsed_time": 3072.807470560074,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f6ae50f710d02d8553d28192a1f048b2a9e1fc4d",
            "commit_message": "[SLP]Emit actual bitwidth for analyzed MinBitwidth nodes, NFCI.\n\nSLP includes analysis for the minimum bitwidth, the actual integer\noperations can be emitted. It allows to reduce register pressure and\nimprove perf. Currently, it includes only cost model and the next\ntransformation relies on InstructionCombiner. Better to do it directly\nin SLP, it allows to reduce compile time and fix cost model issues.\n",
            "commit_timestamp": 1699977457.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1699992761.431775,
            "elapsed_time": 2020.069486618042,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "54f83e6de64ff8f0ffea82189f827a88a8436850",
            "commit_message": "[lld][COFF] Fill only gaps in code sections. (#72138)\n\nFilling entire buffer would require all chunks to overwrite it later,\r\nwhich is not the case for uninitialized chunks merged into code\r\nsections.",
            "commit_timestamp": 1699991320.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700007237.253649,
            "elapsed_time": 1930.0014145374298,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a4f77f1ca3189a3dbcf11755fa76893b006e6370",
            "commit_message": "[RISCV][GISEL] Use MO_PLT when Callee is a Global or Symbol (#71982)\n\nSelectionDAG does the same thing in 74c83649547c2",
            "commit_timestamp": 1700006139.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700021558.981745,
            "elapsed_time": 1963.7735381126404,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0723d2496b107840fb812a9ae4420f327bb35ab7",
            "commit_message": "[X86][MC] Remove duplicated code in X86DisassemblerDecoder.h by defining macro helpers (NFCI) (#72341)\n\n",
            "commit_timestamp": 1700020217.0
        },
        {
            "tool_version": "233.0.20231104.234410-eap06",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700035905.002673,
            "elapsed_time": 1950.2547414302826,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5480be13d5bff9df8d306cd948ff975ed577c054",
            "commit_message": "[clang][NFC] Refactor Sema::DiagnoseSentinelCalls\n\nFix indentation, naming and capitalization to match current style\nguides.\n",
            "commit_timestamp": 1700033821.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700036786.927261,
            "elapsed_time": 4341.967722415924,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5480be13d5bff9df8d306cd948ff975ed577c054",
            "commit_message": "[clang][NFC] Refactor Sema::DiagnoseSentinelCalls\n\nFix indentation, naming and capitalization to match current style\nguides.\n",
            "commit_timestamp": 1700033821.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700064660.03275,
            "elapsed_time": 3781.3819296360016,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c2a2fd209e2da4c80e55d11b114d47b8d1eaaa16",
            "commit_message": "[DebugInfo][RemoveDIs] Allow for inserting DPValues at end() (#72379)\n\nThis trivial patch covers a bit of fallout from\r\nhttps://reviews.llvm.org/D153990, where we moved the storage of trailing\r\nDPValues into LLVMContext rather than being stored in each block. As a\r\nresult, you can now get a null DPMarker pointer from the end() iterator\r\nwhere previously you didn't (and now it has to be explicitly created).\r\n\r\nThis is a sort-of stopgap measure -- there's another all-singing\r\nall-dancing patch further down the line that refactors all of this so\r\nthat we don't allocate a DPMarker for every single Instruction. When\r\nthat lands this will all be refactored so that every time we request a\r\nDPMarker, one is created if needs be. That's a performance-fix rather\r\nthan a functionality related patch though, so it'll come later.",
            "commit_timestamp": 1700063734.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700050422.619154,
            "elapsed_time": 3716.652235507965,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "afdc0c5c96a776be16c151c5622ea5c348124f20",
            "commit_message": "Fix MSV signed/unsigned mismatch warning. NFC.\n",
            "commit_timestamp": 1700049632.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700079096.091266,
            "elapsed_time": 6881.87774014473,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0901f918daa6c5da19b3d2cf38d7de63c265a086",
            "commit_message": "[builtins][test] Don't XFAIL divtc3_test.c on 32-bit Solaris/sparc fo\u2026 (#72403)\n\nAs detailed in Issue #72398, the recent builtins rework and\r\n77d75dc9be5c4bb1d9986a475e1c661718067c6a caused `Builtins-sparc-sunos::\r\ndivtc3_test.c` to `XPASS` on 32-bit Solaris/SPARC. Since there are\r\nseveral underlying issues, un-`XFAIL` the test for now until those are\r\nresolved, to turn the Solaris/sparcv9 buildbot green again after 5 days.\r\n\r\nTested on `sparcv9-sun-solaris2.11` and `x86_64-pc-linux-gnu`.",
            "commit_timestamp": 1700077943.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700107895.943089,
            "elapsed_time": 2789.493220090866,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "84044061e880bd6c7994cb2e3048a073cf76a683",
            "commit_message": "[RISCV] Make getDefaultVLOps call getDefaultScalableVLOps instead of the other way around. NFC\n\nPreviously getDefaultScalableVLOps called getDefaultVLOps. getDefaultVLOps\nalso handles fixed vectors so had to then check if it was fixed\nor scalable.\n\nSince getDefaultScalableVLOps know the type is scalable, it makes\nsense for it to contain the scalable case directly and have\ngetDefaultVLOps call it for the scalable case.\n",
            "commit_timestamp": 1700105280.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700122319.730513,
            "elapsed_time": 3945.4371507167816,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f8986dfce2dbe040ad41e017e3b87abb60138df8",
            "commit_message": "[GitHub] Compress mlir/spirv patterns in CODEOWNERS. NFCI. (#72485)\n\nSuggested by @joker-eph in\r\nhttps://github.com/llvm/llvm-project/pull/72412#discussion_r1395210901.",
            "commit_timestamp": 1700121481.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700136800.082057,
            "elapsed_time": 4650.72252035141,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "865f54e501739f382d33866baebfd0f9aaad01bb",
            "commit_message": "[DAG] ISD::is*Load/is*Store - merge isa<>/cast<> calls into single dyn_cast<>. NFCI.\n\ncast<> repeats most of the work that isa<> will have already done (and even calls assert(isa<>) in debug builds) - just use dyn_cast and a pointer check to avoid all this duplicated work.\n",
            "commit_timestamp": 1700134215.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700151120.760279,
            "elapsed_time": 3325.8891310691833,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "667ba7f8f31f7439e204c4efbd2aa576cd17273f",
            "commit_message": "[AMDGPU] Fix GCNRewritePartialRegUses pass: vector regclass is selected instead of scalar. (#69957)\n\nFor the following testcase:\r\n\r\nundef %1.sub1:sgpr_96 = COPY undef %0:sgpr_32\r\n%3:vgpr_32 = V_LSHL_ADD_U32_e64 %1.sub1:sgpr_96, ...\r\n\r\nGCNRewritePartialRegUses produced:\r\n\r\n%4:vgpr_32 = COPY undef %1:sgpr_32\r\ndead %2:vgpr_32 = V_LSHL_ADD_U32_e64 %4, ...\r\n\r\nRegister class for %4 is incorrect: there should be sgpr_32 instead of\r\nvgpr_32 because the original %1 had scalar regclass. This patch fixes\r\nthat.\r\n\r\nNote that GCNRewritePartialRegUses pass isn't enabled by default yet.",
            "commit_timestamp": 1700150206.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700165589.854833,
            "elapsed_time": 3989.786063194275,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f97a579b74a6e65a3f58813b36f6a789102ce315",
            "commit_message": "[runtimes] Add TODO about CXX_STANDARD_REQUIRED being off after review comment\n",
            "commit_timestamp": 1700164732.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700179992.926319,
            "elapsed_time": 3668.4976937770844,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7ff8094a397127c8204c34079f8893fc8acbf1dd",
            "commit_message": "[flang][OpenMP] Add semantic check for declare target (#71861)\n\nThis patch adds the following check from OpenMP 5.2.\r\n\r\n```\r\nIf the directive has a clause, it must contain at least one enter clause\r\nor at least one link clause.\r\n```\r\n\r\nAlso added a warning for the deprication of `TO` clause on `DECLARE\r\nTARGET` construct.\r\n\r\n```\r\nThe clause-name to may be used as a synonym for the clause-name enter.\r\nThis use has been deprecated.\r\n```\r\n\r\nBased on the tests for to clause, the tests for enter clause are added.\r\n\r\nThis patch does not add tests where both to and enter clause are used together.",
            "commit_timestamp": 1700179412.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700194470.219545,
            "elapsed_time": 3758.9641814231873,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b034da7dad150a54661557cc3f712948b1e474e4",
            "commit_message": "[libc++][NFC] Fix include guard for simd helper header\n",
            "commit_timestamp": 1700190037.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700208849.888506,
            "elapsed_time": 6376.930760860443,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d8ab8b95baa43fbc1dfedf83ca2e5ef7cbed74ee",
            "commit_message": "[Docs][llvm-exegesis] Fix minor issues in llvm-exegesis docs\n",
            "commit_timestamp": 1700206876.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700223318.883554,
            "elapsed_time": 6646.620174884796,
            "x64": true,
            "actual_files_count": 1713,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ec42d547eba5c0ad0bddbecc8902d35383968e78",
            "commit_message": "[lld][COFF][NFC] Factor out exception table sorting. (#72518)\n\nThis is a preparation for ARM64EC support, which needs to sort both ARM\r\nand x86_64 tables separately.",
            "commit_timestamp": 1700221352.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700237546.238072,
            "elapsed_time": 3681.8234481811523,
            "x64": true,
            "actual_files_count": 1719,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ec6a34e2a781fcfc6fe1d30e7cd358fb779157cf",
            "commit_message": "[lldb] Pass important options to dsymForUUID (#72669)\n\nOn macOS, we usually use the DebugSymbols framework to find dSYMs, but\r\nwe have a few places (including crashlog.py) that calls out directly to\r\ndsymForUUID. Currently, this invocation is missing two important\r\noptions:\r\n\r\n* `--ignoreNegativeCache`: Poor network connectivity or lack of VPN can\r\nlead to a negative cache hit. Avoiding those issues is worth the penalty\r\nof skipping these caches.\r\n* `--copyExecutable`: Ensure we copy the executable as it might not be\r\navailable at its original location.\r\n\r\nrdar://118480731",
            "commit_timestamp": 1700236807.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700266412.629986,
            "elapsed_time": 3581.205863237381,
            "x64": true,
            "actual_files_count": 1720,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "813aaf39f94609a46f38f1e3a15a763a2cc0d2cf",
            "commit_message": "[mlir][sparse] stress test BSR (#72712)\n\nI always enjoy a good stress test. This end-to-end integration test\r\nensures the major ordering of both the block and within the block are\r\ncorrectly handled (giving row-row, row-col, col-row and col-row as\r\noptions).",
            "commit_timestamp": 1700264858.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700251929.995748,
            "elapsed_time": 3569.6981706619263,
            "x64": true,
            "actual_files_count": 1720,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fab690d6b5d50f263bdb2413c913c9bd34d47625",
            "commit_message": "[NFC][SHT_LLVM_BB_ADDR_MAP] Define and use constructor and accessors for BBAddrMap fields. (#72689)\n\nThe fields are still kept as public for now since our tooling accesses\r\nthem. Will change them to private visibility in a later patch.",
            "commit_timestamp": 1700250246.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700280685.987813,
            "elapsed_time": 3261.4930272102356,
            "x64": true,
            "actual_files_count": 1720,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "2b71f91b06ad4f5a0c54725b06283fd731620b92",
            "commit_message": "Revert \"[mlir][sparse] stress test BSR\" (#72735)\n\nReverts llvm/llvm-project#72712\r\n\r\nThis causes timeouts on the bots.",
            "commit_timestamp": 1700276809.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700295072.837276,
            "elapsed_time": 4472.441958904266,
            "x64": true,
            "actual_files_count": 1720,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6da4ecdf9285225ccc8fa4441b7e9f65e8f4f49c",
            "commit_message": "[InstCombine] Infer shift flags with unknown shamt (#72535)\n\nAlive2: https://alive2.llvm.org/ce/z/82Wr3q\r\n\r\nRelated patch:\r\nhttps://github.com/llvm/llvm-project/commit/2dd52b4527667837cc525aa48435ab5cbfa30a0b\r\n",
            "commit_timestamp": 1700291714.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700309629.412612,
            "elapsed_time": 3904.5764741897583,
            "x64": true,
            "actual_files_count": 1720,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "394bba766ddd2f5ea8ac8007dcadb724f79bafc4",
            "commit_message": "[CodeGen][DebugInfo] Add missing debug info for jump table BB (#71021)\n\nvisitJumpTable is called on FinishBasicBlock. At that time, getCurSDLoc\nwill always return SDLoc without DebugLoc since CurInst was set to\nnullptr after visiting each instruction.\nThis patch passes SDLoc to buildJumpTable when visiting SwitchInst so\nthat visitJumpTable can use it later.",
            "commit_timestamp": 1700306271.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700323944.43693,
            "elapsed_time": 7285.616597175598,
            "x64": true,
            "actual_files_count": 1720,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c093383ffadff8dfadfd6bc0ab7107a0e194aa7e",
            "commit_message": "[SelectionDAG] Fix crash for salvaging with indirect debug values (#72645)\n\nThis is a follow-up to #68981, and fix for #72630, #72447.\n\nWe may end up in SelectionDAG::salvageDebugInfo() with indirect debug\nvalues, and attempting to salvage ADD nodes with non-constant RHS would\nlead us to try to turn those indirect debug values variadic, which is\nnot allowed.\n\nThis triggered the following assert in the SDDbgValue constructor:\n\n  Assertion `!(IsVariadic && IsIndirect)' failed.\n\nThis also adds a lit test for salvaging when having an indirect debug\nvalue and constant RHS, as there seems like there was no such lit test.\nHowever, I am not sure if the use of the stack_value operation is\ncorrect in that case (which is existing behavior before #68981), but\nthat at least documents the current behavior.",
            "commit_timestamp": 1700323287.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700338378.460163,
            "elapsed_time": 5992.894953727722,
            "x64": true,
            "actual_files_count": 1720,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0154e53bf307aa501a6d9d6a1bafa6a6fcb2a7ad",
            "commit_message": "[RISCV][GISel] Remove the rv32/rv64 subdirectories for legalizer tests. NFC\n\nAdd -rv32 -rv64 as suffix to test name. First step towards trying\nto merge the content of these tests.\n",
            "commit_timestamp": 1700335509.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700352761.842412,
            "elapsed_time": 3501.9713475704193,
            "x64": true,
            "actual_files_count": 1720,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "695662b00c993dc33f7196c6d156c967a0aad6af",
            "commit_message": "[clang] Remove ConstantAggregateBuilderBase::addBitCast (NFC)\n\n* Replace all existing uses of ConstantAggregateBuilderBase::addBitCast,\n  as they involve a no-op ptr-to-ptr bitcast\n* Remove method ConstantAggregateBuilderBase::addBitCast\n\nOpaque ptr cleanup effort (NFC)\n",
            "commit_timestamp": 1700351168.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700367126.329143,
            "elapsed_time": 4809.3754732608795,
            "x64": true,
            "actual_files_count": 1720,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5237193b87721134541f228e28edfd544a9c8ac8",
            "commit_message": "[NFC] Fix typos in comments\n",
            "commit_timestamp": 1700360074.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700381576.521833,
            "elapsed_time": 3449.9399511814117,
            "x64": true,
            "actual_files_count": 1720,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "23c47eba879769a29772c999be2991201c2fe399",
            "commit_message": "[Driver] Enable __float128 support on X86 on FreeBSD / NetBSD (#72788)\n\n",
            "commit_timestamp": 1700380805.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700395921.162058,
            "elapsed_time": 7327.723511219025,
            "x64": true,
            "actual_files_count": 1720,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "42204c94ba9fcb0b4b1335e648ce140a3eef8a9d",
            "commit_message": "Revert \"[TargetInstrInfo] enable foldMemoryOperand for InlineAsm (#70743)\"\n\nThis reverts commit 99ee2db198d86f685bcb07a1495a7115ffc31d7e.\n\nIt's causing ICEs in the ARM tests. See the comment here:\n\nhttps://github.com/llvm/llvm-project/commit/99ee2db198d86f685bcb07a1495a7115ffc31d7e\n",
            "commit_timestamp": 1700384446.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700410286.906665,
            "elapsed_time": 4675.458132743835,
            "x64": true,
            "actual_files_count": 1720,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5a305cea52bf45d4070b366fd7bc7592b6db0072",
            "commit_message": "[libc++] Use __is_pointer_in_range for char_traits checks (#72643)\n\nThis allows us to also check the constraints during constant evaluation.",
            "commit_timestamp": 1700408980.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700424724.620153,
            "elapsed_time": 3217.6336035728455,
            "x64": true,
            "actual_files_count": 1720,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "9ae04a77d12667d1fe8a2392240a85bde9e490fc",
            "commit_message": "[RISCV] Don't set nsw/nuw/exact flag after MachineCombiner reassociation.\n\nThis matches what PowerPC and X86 do.\n",
            "commit_timestamp": 1700420908.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700439201.428856,
            "elapsed_time": 5127.058774232864,
            "x64": true,
            "actual_files_count": 1720,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "edad025d1e1f8043637c65fed91060b327e85313",
            "commit_message": "[clang-format] Correctly annotate braces of empty functions (#72733)\n\nAlso fixed some existing test cases.\r\n\r\nFixed #57305.\r\nFixed #58251.",
            "commit_timestamp": 1700435427.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700467868.869335,
            "elapsed_time": 3029.8991317749023,
            "x64": true,
            "actual_files_count": 1720,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "592386400d515cdd043fe787e702fe96d150986a",
            "commit_message": "[PowerPC] Precommit test to show codegen while `isel` is unavailable. NFC.\n",
            "commit_timestamp": 1700465301.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700482326.790209,
            "elapsed_time": 6562.279871702194,
            "x64": true,
            "actual_files_count": 1720,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4a8b43ba3bd5427dd98a7a93d1b1ed25051c31e8",
            "commit_message": "[clang][Interp][NFC] Factor array element init into its own function\n",
            "commit_timestamp": 1700481657.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700496881.902222,
            "elapsed_time": 3981.415991306305,
            "x64": true,
            "actual_files_count": 1720,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8bd06d5b65845e5e01dd899a2deb773580460b89",
            "commit_message": "[C23] Complete support for WG14 N2508 (#71398)\n\nIn Clang 16, we implemented the ability to add a label at the end of a\r\ncompound statement. These changes complete the implementation by\r\nallowing a label to be followed by a declaration in C.\r\n\r\nNote, this seems to have fixed an issue with some OpenMP stand-alone\r\ndirectives not being properly diagnosed as per:\r\nhttps://www.openmp.org/spec-html/5.1/openmpsu19.html#x34-330002.1.3\r\n(The same requirement exists in OpenMP 5.2 as well.)",
            "commit_timestamp": 1700495531.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": false,
            "project": [
                "clang*"
            ],
            "timestamp": 1700511204.077345,
            "elapsed_time": 3269.893360376358,
            "x64": true,
            "actual_files_count": 1720,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f4c6947a18d5c07d5743eb435c2854e61804ad24",
            "commit_message": "Move all libc++ builders to one machine type.\n\nThere are ongoing issues with the libc++ bots, some of them seem\nrelated to a new release of the gha action runner controllers.\n\nUntil I get this figured out, it's a lot easier to have 99% of the\nbots using a single machine shape\n",
            "commit_timestamp": 1700509704.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700525690.293537,
            "elapsed_time": 7118.885564088821,
            "x64": true,
            "actual_files_count": 1720,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "eaffcc85ea53d7d90ac0271490f62526f91a5af6",
            "commit_message": "[DebugInfo][RemoveDIs] Make dropping variable locations explicit (#72399)\n\nIn present-day debug-info, when you delete all instructions, you delete\r\nall their debug-info with it because debug-info is stored in\r\ninstructions. With debug-info stored in DPValue objects however,\r\ndeleting instructions causes DPValue objects to clump together into a\r\nlarge blob of debug-info that hangs around in the block, as nothing has\r\nexplicitly deleted it.\r\n\r\nTo restore this behaviour, scatter calls to dropDbgValues around in\r\nplaces that used to delete chunks of dbg.values, for example during\r\nstripDebugInfo and in the code that deletes everything after an\r\nUnreachable instruction. DCE is another example.\r\n\r\nThe tests with --try... added to them are new scenarios where we can now\r\ncorrectly replicate the \"normal\" debug-info behaviour. Alas, there's no\r\nexplicit test for the opt -strip-debug option though (in dbg.value mode\r\nor DPValue mode).",
            "commit_timestamp": 1700524860.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700539918.440407,
            "elapsed_time": 4894.283886671066,
            "x64": true,
            "actual_files_count": 1720,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0d77978e75a6e287e4c74fe5763227712ce3e3ac",
            "commit_message": "[flang][doc] Added remark about array element references in data clauses. (#72332)\n\n",
            "commit_timestamp": 1700532098.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700554357.509075,
            "elapsed_time": 6457.262169599533,
            "x64": true,
            "actual_files_count": 1720,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "88f0e4c75c1ac498f2223fc640c4ff6c572c5ed1",
            "commit_message": "[mlir][async] Avoid crash when not using `func.func` (#72801)\n\nThe `createParallelComputeFunction` crashed when calling\r\n`getFunctionTypeAttrName` during the creation of a new `FuncOp` inside\r\nthe pass. The problem is that `getFunctionTypeAttrName` looks up the\r\nattribute name for the function type which in this case is `func.func`.\r\nHowever, `name.getAttributeNames()` was empty when clients used\r\n`llvm.func` instead of `func.func`.\r\n\r\nTo fix this, the `func` dialect is now registered as a dependent\r\ndialect. Also, I've added an assertion which could save other people\r\nsome time.\r\n\r\nFixes #71281, fixes #64326.",
            "commit_timestamp": 1700552416.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700568735.837071,
            "elapsed_time": 3733.192722082138,
            "x64": true,
            "actual_files_count": 1720,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7f740be4acddd8acf46796229c46117b735a9be8",
            "commit_message": "[BasicAA] Don't assume DT is nonnull\n\nI thought DT is required in BasicAA, but apparently it can be null\nin unit tests at least. This should fix the ubsan bot failures.\n",
            "commit_timestamp": 1700565733.0
        },
        {
            "tool_version": "232.0.20231101.135615",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700566770.881891,
            "elapsed_time": 5991.3482184410095,
            "x64": true,
            "actual_files_count": 1720,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7f740be4acddd8acf46796229c46117b735a9be8",
            "commit_message": "[BasicAA] Don't assume DT is nonnull\n\nI thought DT is required in BasicAA, but apparently it can be null\nin unit tests at least. This should fix the ubsan bot failures.\n",
            "commit_timestamp": 1700565733.0
        },
        {
            "tool_version": "241.0.20231120.201033-eap01d",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700574759.547201,
            "elapsed_time": 2075.4683709144592,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ad86d3e94f21fb13e504b0b1044ef7c10bc86a98",
            "commit_message": "[BasicAA] Add wrapping test for #72831.\n\nAdd test with GEP where the index may wrap.\n",
            "commit_timestamp": 1700573937.0
        },
        {
            "tool_version": "241.0.20231121.214-eap01d",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700576369.5824,
            "elapsed_time": 1992.5946321487427,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0c49fc4c68aff96ebe700d2af50a3c445ee0484e",
            "commit_message": "[libc][math] Implement nexttoward functions (#72763)\n\nImplements the `nexttoward`, `nexttowardf` and `nexttowardl` functions.\r\nAlso, raise excepts required by the standard in `nextafter` functions.\r\n\r\ncc: @lntue",
            "commit_timestamp": 1700575371.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700583095.304043,
            "elapsed_time": 7422.60746884346,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c0a1fcd3bf8ead39e8f0290a8a0af1e0367c7cad",
            "commit_message": "[llvm][IRMover] Remove no-op ptr-to-ptr bitcast (NFC)\n\nOpaque ptr cleanup effort.\n",
            "commit_timestamp": 1700581879.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700597518.70634,
            "elapsed_time": 3489.332334756851,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f54453320386b97ad75782563d95ddf771345ff9",
            "commit_message": "[Bazel][clang] Fix build for e6ef315\n",
            "commit_timestamp": 1700596155.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700612002.41934,
            "elapsed_time": 3034.1938939094543,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "60fa8cf2c3253cc1e1ade7eede395e460da9882c",
            "commit_message": "[flang][openacc][NFC] Check only HLFIR lowering for remaining tests (#73054)\n\n",
            "commit_timestamp": 1700610837.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700626374.930643,
            "elapsed_time": 6726.785788536072,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "2c875719c841ff13b9b250e6ea97fc3e0aca2070",
            "commit_message": "[test][hwasan] Deflake release-shadow.c\n\nkNumShadowPages=1024 helps to pass it consistenly (10k runs).\nBut to be sure also changing success condition to 8 out of 10.\n",
            "commit_timestamp": 1700623679.0
        },
        {
            "tool_version": "233.0.20231122.307-eap09d",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700641557.47526,
            "elapsed_time": 1997.540418624878,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "03f05a4e72891237264ab48adf62034aaac8bd46",
            "commit_message": "[IR] Don't include GenericDomTreeConstruction.h in header (NFC)\n\nThe whole point of the GenericDomTree.h vs\nGenericDomTreeConstruction.h distinction is that the latter only\nneeds to be included in the source file and not the header.\n",
            "commit_timestamp": 1700640396.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700640709.713205,
            "elapsed_time": 7231.009338855743,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "06e733b198696b31285acbf359753c62e7ad06fd",
            "commit_message": "[RISCV] Fix the order of arguments of setTruncStoreAction and setLoadExtAction (#73090)\n\nThe first argument of setTruncStoreAction/setLoadExtAction should be\r\nValue VT instead of Memory VT.",
            "commit_timestamp": 1700638359.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700655085.294484,
            "elapsed_time": 3147.7150826454163,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fbfd2c9972695bc74a646bfa5e3e2d00477dabe2",
            "commit_message": "[coroutines] Introduce [[clang::coro_lifetimebound]] (#72851)\n\nAdds attribute `[[clang::coro_lifetimebound]]`.\r\n\r\nAll arguments to a function are considered to be **lifetime bound** if\r\nthe function\r\nreturns a type annotated with ``[[clang::coro_lifetimebound]]`` and\r\n``[[clang::coro_return_type]]``.",
            "commit_timestamp": 1700653884.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700669597.311307,
            "elapsed_time": 5257.727424144745,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "cae46f6210293ba4d3568eb21b935d438934290d",
            "commit_message": "[MCP] Enhance MCP copy Instruction removal for special case (#70778)\n\nMachine Copy Propagation Pass may lose some opportunities to further\r\nremove the redundant copy instructions during the ForwardCopyPropagateBlock\r\nprocedure. When we Clobber a \"Def\" register, we also need to remove the record \r\nfrom the copy maps that indicates \"Src\" defined \"Def\" to ensure the correct semantics\r\nof the ClobberRegister function.\r\n\r\nFor more information, please see the C++ test case generated code in \r\n\"vector.body\" after the MCP Pass: https://gcc.godbolt.org/z/nK4oMaWv5.",
            "commit_timestamp": 1700668662.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700683948.451395,
            "elapsed_time": 3163.0149569511414,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6f0c52e56fb7f237ed8071573ce8a2021b4c7289",
            "commit_message": "[libc++] Refactor atomic_{unsigned,signed}_lock_free (#73041)\n\nTheir definition was a bit roundabout and it was actually wrong since\r\natomic_unsigned_lock_free would be a signed type whenever\r\n__cxx_contention_t is lock free, which is most of the time.\r\n\r\nFixes #72968",
            "commit_timestamp": 1700682880.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700698429.310467,
            "elapsed_time": 3730.209570169449,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "74dcc2da62a815b55a37fb8d0e193c0af08d09a1",
            "commit_message": "[PowerPC] Silence -Woverloaded-virtual warning. NFC\n",
            "commit_timestamp": 1700696720.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700712727.004208,
            "elapsed_time": 3552.4082250595093,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "dc683d2e66de79bbea786f51788961eec5d0b793",
            "commit_message": "[X86] Remove unused IES_IDENTIFIER state from IntelExprState. NFC\n",
            "commit_timestamp": 1700711392.0
        },
        {
            "tool_version": "233.0.20231113.130711-eap07",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700727204.620261,
            "elapsed_time": 3872.5946769714355,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "083a53971758c6f9bbd448eeb9c5d839661e3f68",
            "commit_message": "clang/CodeGen/RISCV: test lowering of math builtins (#71399)\n\nEver since 98c90a1 (ISel: introduce vector ISD::LRINT, ISD::LLRINT;\r\ncustom RISCV lowering) landed, there have been several discussions on\r\nhow the lrint and llrint libcalls would lower to LLVM IR via clang on\r\nRV32 and RV64, in an effort to enable vectorization of lrint and llrint\r\nvia SLPVectorizer and LoopVectorize. This patch adds a new\r\nmath-builtins.c test to the RISC-V target to test the lowering of all\r\nmath libcalls, including lrint and llrint.",
            "commit_timestamp": 1700725172.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700741634.775406,
            "elapsed_time": 4043.6616592407227,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c43c88501e3bc273a7c1074a19e86dc305ad7234",
            "commit_message": "[mlir] Add mlirTranslateModuleToLLVMIR to MLIR-C (#73117)\n\nFixes #73008",
            "commit_timestamp": 1700739594.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700741309.712405,
            "elapsed_time": 4451.909014701843,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c43c88501e3bc273a7c1074a19e86dc305ad7234",
            "commit_message": "[mlir] Add mlirTranslateModuleToLLVMIR to MLIR-C (#73117)\n\nFixes #73008",
            "commit_timestamp": 1700739594.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700755973.660311,
            "elapsed_time": 3340.3978312015533,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a9ea02d679b948332af111292a7d6c00ae057070",
            "commit_message": "Recommit \"[ConstraintElim] Treat ConstantPointerNull as constant offset 0.\"\n\nThis reverts commit 58286f9c665ad4aa748779d559f2f296de704094.\n\nNow with the test correctly updated.\n\nOriginal message:\n    Treat ConstantPointerNull (null) as constant offset 0 in the constraint\n    instead of a variable. This slightly reduces the number of variables. I\n    was not able to find a test case where this actually caused any changes.\n",
            "commit_timestamp": 1700754997.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700770305.600597,
            "elapsed_time": 6873.665346622467,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "9ebe6e28cdbe97f6c03209b87e91be6b55a8026a",
            "commit_message": "Revert \"[ClangRepl] Type Directed Code Completion\" (#73259)\n\nReverts llvm/llvm-project#67349\r\n\r\nThere are some issues with the sanitizers. We will reland once that's fixed.",
            "commit_timestamp": 1700766471.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700784844.217628,
            "elapsed_time": 7997.43013381958,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ba89749cd24950c9c51f4cc64277ce0421d86d20",
            "commit_message": "[libc++] <experimental/simd> Add implicit type conversion constructor for class simd/simd_mask (#71132)\n\n",
            "commit_timestamp": 1700782181.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700799089.802407,
            "elapsed_time": 3268.045884847641,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "dab7684ad172b06b51becef9b2c5614a68023b89",
            "commit_message": "[NFC][X86] Clang-format X86RecognizableInstr.h (#73279)\n\n",
            "commit_timestamp": 1700798217.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700813561.961625,
            "elapsed_time": 5456.288897514343,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "579e721ce91bd47a7e519a85f99498eb45d3d693",
            "commit_message": "[Support] Implement getMainExecutable for Haiku\n\nThis uses argv[0] on Haiku.\n",
            "commit_timestamp": 1700809959.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700828023.841346,
            "elapsed_time": 5034.169473171234,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6bdeb53ed9ad85fc16f495120b4e2382c4bdaafa",
            "commit_message": "[MLIR][OpenMP] Fix the assertion failure for VariableCaptureKind::ByCopy (#72424)\n\n",
            "commit_timestamp": 1700825635.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700842289.702963,
            "elapsed_time": 3864.8826067447662,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ee5749bf785b66adfd9b4edc4d3a676691f28599",
            "commit_message": "[libc] Provide compiler version properties (#73344)\n\nThis will be used to support conditional compilation based on compiler\r\nversion.\r\nWe adopt the same convention as\r\n[libc++](https://github.com/llvm/llvm-project/blob/main/libcxx/include/__config)\r\n- thx @legrosbuffle for the suggestion!\r\nUsage:\r\n```\r\n#if defined(LIBC_COMPILER_CLANG_VER)\r\n#  if LIBC_COMPILER_CLANG_VER < 1500\r\n#    warning \"Libc only supports Clang 15 and later\"\r\n#  endif\r\n#elif defined(LIBC_COMPILER_GCC_VER)\r\n#  if LIBC_COMPILER_GCC_VER < 1500\r\n#    warning \"Libc only supports GCC 15 and later\"\r\n#  endif\r\n#elif defined(LIBC_COMPILER_MSC_VER)\r\n#  if LIBC_COMPILER_MSC_VER < 1930\r\n#    warning \"Libc only supports Visual Studio 2022 RTW (17.0) and later\"\r\n#  endif\r\n#endif\r\n```",
            "commit_timestamp": 1700841731.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700856756.059117,
            "elapsed_time": 3734.317118406296,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4233176f9bf8d0309c03b127aa113ae826718dfa",
            "commit_message": "[SimpleLoopUnswitch] Remove callbacks (#73300)\n\nAfter the removal of the legacyPM version of simple loop unswitch, there\r\nis no longer a need for the callback mechanism to handle PM specific\r\ntasks. This patch removes the callbacks to help simplify the code now\r\nthat they're no longer needed.",
            "commit_timestamp": 1700854612.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700871145.464504,
            "elapsed_time": 3741.2353200912476,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "afe8b93ffdfef5d8879e1894b9d7dda40dee2b8d",
            "commit_message": "[clang] Avoid memcopy for small structure with padding under -ftrivial-auto-var-init (#71677)\n\nRecommit of 0d2860b795879f4dd152963b52f969b53b136899 with extra test\ncases fixed.\n",
            "commit_timestamp": 1700867480.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700885480.466965,
            "elapsed_time": 5051.427582025528,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "024718313b526a4530d7cd58886fcc157247e0ff",
            "commit_message": "[Flang] Fix a test case that depends on stderr output of nullptr. (#73349)\n\nThis test case depends on the stderr output of a `nullptr` being\r\n\"(null)\". However, it is empty string on AIX.\r\nThis PR is to initialize the `sourceFileName_` to be a specific string\r\nto avoid that.",
            "commit_timestamp": 1700884441.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700899979.709947,
            "elapsed_time": 6269.763219118118,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "26cf3aab836ce421156d7542985f35701e1b5783",
            "commit_message": "[RISCV][GISel] Add more G_SEXTLOAD instruction selection tests. NFC\n",
            "commit_timestamp": 1700899091.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700928747.15664,
            "elapsed_time": 3038.381519794464,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7c44167daa7529d0a1352746e17c9aba6a4ed8ae",
            "commit_message": "[libc++] Updates mdspan synopsis,\n\nThe class layout_stride has been implemented in\n639a0986f3a34d52533a726e2a4193411cc1312f\n",
            "commit_timestamp": 1700919921.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700943149.8158,
            "elapsed_time": 3587.690613269806,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "bee78b88f8effdb378a809e0416988ce9c37f5ac",
            "commit_message": "Reland \"[clang][Sema] Use original template pattern when declaring implicit deduction guides for nested template classes\" (#73087)\n\nReland of f418319730341e9d41ce8ead6fbfe5603c343985 with proper handling\r\nof template constructors\r\n\r\nWhen a nested template is instantiated, the template pattern of the\r\ninner class is not copied into the outer class\r\nClassTemplateSpecializationDecl. The specialization contains a\r\nClassTemplateDecl with an empty record that points to the original\r\ntemplate pattern instead.\r\n\r\nAs a result, when looking up the constructors of the inner class, no\r\nresults are returned. This patch finds the original template pattern and\r\nuses that for the lookup instead.\r\n\r\nBased on CWG2471 we must also substitute the known outer template\r\narguments when creating deduction guides for the inner class.\r\n\r\nChanges from last iteration:\r\n\r\n1. In template constructors, arguments are first rewritten to depth - 1\r\nrelative to the constructor as compared to depth 0 originally. These\r\narguments are needed for substitution into constraint expressions.\r\n2. Outer arguments are then applied with the template instantiator to\r\nproduce a template argument at depth zero for use in the deduction\r\nguide. This substitution does not evaluate constraints, which preserves\r\nconstraint arguments at the correct depth for later evaluation.\r\n3. Tests are added that cover template constructors within nested\r\ndeduction guides for all special substitution cases.\r\n4. Computation of the template pattern and outer instantiation arguments\r\nare pulled into the constructor of\r\n`ConvertConstructorToDeductionGuideTransform`.",
            "commit_timestamp": 1700940404.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700957608.780502,
            "elapsed_time": 5554.428574323654,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "505523ed34869c4f4324d79da11d27fe0c628238",
            "commit_message": "[NewPM] Remove CFGOnlyPrinterLegacyPass (#73412)\n\nThis pass has no test coverage upstream, is not used anywhere upstream,\r\nand has a NewPM equivalent. For these reasons, remove it.",
            "commit_timestamp": 1700955796.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700971935.587177,
            "elapsed_time": 3699.551307439804,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "abc405858d6d6212d1eb40298865771e8a3b759a",
            "commit_message": "[XCOFF] make related SD symbols as isFunction (#69553)\n\nThis will help tools like llvm-symbolizer recognizes more functions.",
            "commit_timestamp": 1700971149.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1700986366.663913,
            "elapsed_time": 3761.601898431778,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f4834255d30d695fb89c4b566d65917a8e505ca2",
            "commit_message": "[BOLT] Reset output addresses for deleted blocks (#73429)\n\nThis is a follow-up to #73076. We need to reset output addresses for\r\ndeleted blocks, otherwise the address translation may mistakenly\r\nattribute input address of a deleted block to a non-zero address.\r\n\r\nWhile working on a test case, I've discovered that DWARF output ranges\r\nwere already broken for deleted basic blocks: #73428. I will provide a\r\ntest case for this PR with a DWARF address range fix PR.",
            "commit_timestamp": 1700983427.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701000732.415949,
            "elapsed_time": 5292.48833155632,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "9ba74c2ee044381544c8e1e736c4c85a1a9d56bf",
            "commit_message": "[NewPM] Remove CFGPrinterLegacyPass (#73414)\n\nThis pass has no test coverage in upstream LLVM, is not used anywhere in\r\nupstream LLVM, and has a NewPM equivalent. For these reasons, remove it.",
            "commit_timestamp": 1700991991.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701015167.445836,
            "elapsed_time": 6243.04069685936,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "dc8b055c71d2ff2f43c0f4cac66e15a210b91e3b",
            "commit_message": "[GitHub] Update bot message to suggest GitHub pull requests (#65914)\n\nFixes #65890.\r\n\r\n---------\r\n\r\nCo-authored-by: Danny M\u00f6sch <danny.moesch@icloud.com>",
            "commit_timestamp": 1701014017.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701029507.850221,
            "elapsed_time": 4005.7609684467316,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "cd9829c231e32dc73cfe1957f84b1645e9105196",
            "commit_message": "[libc++][NFC] Use __construct_at and __destroy_at instead of using preprocessor conditionals (#70866)\n\n",
            "commit_timestamp": 1701028023.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701058390.87122,
            "elapsed_time": 5730.123388290405,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "2e6c01be0db5d137c48953adde386eaef0982775",
            "commit_message": "[SelectionDAG] Add instantiated OPC_EmitInteger and OPC_EmitStringInteger (#73241)\n\nThese two opcodes are used to be followed by a MVT operand, which is\nalways one of i8/i16/i32/i64.\n\nWe add instantiated `OPC_EmitInteger` and `OPC_EmitStringInteger` with\ni8/i16/i32/i64 so that we can reduce one byte.\n\nWe reserve `OPC_EmitInteger` and `OPC_EmitStringInteger` in case that\nwe may need them someday, though I haven't found one usage after this\nchange.\n\nOverall this reduces the llc binary size with all in-tree targets by\nabout 200K.\n",
            "commit_timestamp": 1701054508.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701072719.619876,
            "elapsed_time": 3439.0662903785706,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "27c0bc9cae3e2483e14cf724df78f40e956a39b9",
            "commit_message": "[X86][MC] Allow to specify any of the 8/16/32/64 register names interchangeably for R16-R31 (#73421)\n\n",
            "commit_timestamp": 1701069919.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701087140.248475,
            "elapsed_time": 6911.6615834236145,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ac06d4e4cb0b604f89130ce7cf63556381baac46",
            "commit_message": "Re-commit \"[MachineSink][AArch64] Enable sink-and-fold by default (#72132)\"\n\nThis re-commits 13fe0386454d after fixing a couple of issues in the LLDB\ntestsuite in ef9bcace834e and 6b87d84ff45d\n",
            "commit_timestamp": 1701084502.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701101504.397599,
            "elapsed_time": 3299.183803796768,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "63a6e51f8ad68a1f573b3a278486124c0ade8711",
            "commit_message": "[Flang][OpenMP] Fix issue with empty critical or critical without surrounding context (#71944)\n\nAdd the sourcerange for critical directive.\r\n\r\nFixes #65571",
            "commit_timestamp": 1701100599.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701115901.214075,
            "elapsed_time": 6228.327687740326,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7bfcce3e940f401a519906ecad3632978ccd0fb5",
            "commit_message": "[OpenMP] Tear down GenericDeviceTy's with GenericPluginTy (#73557)\n\nThere is no point in keeping GenericDeviceTy objects alive longer than\r\nthe associated GenericPluginTy. Instead of the old API we now tear them\r\ndown with the plugin, avoiding ordering issues.",
            "commit_timestamp": 1701114132.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701130366.903358,
            "elapsed_time": 3395.256697177887,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e1f911e40ce6ad4a7f393ea1b33e65b24940eb84",
            "commit_message": "[OpenMP][NFC] Simplify code\n",
            "commit_timestamp": 1701129754.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701144675.295047,
            "elapsed_time": 6787.291917085648,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a3b7b2d6354f622372ce6967e082869979c25ed8",
            "commit_message": "[X86][CodeGen] Not compress EVEX into VEX when R16-R31 is used (#73604)\n\nb/c VEX prefix can not encode R16-R31.",
            "commit_timestamp": 1701142848.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701159096.61914,
            "elapsed_time": 7850.72526884079,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4cf4c5201830c5854ee34acd868576083204011d",
            "commit_message": "Reland \"[gn] port 92b821f2dcdd\"\n\nThis reverts commit 344b5346a0e899d59ff52f60421788eef4e2c864.\n92b821f2dcdd relanded in 04072485204c7.\n",
            "commit_timestamp": 1701157520.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701173624.804653,
            "elapsed_time": 3104.493079662323,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "3e6207a775dfed9a8b54e4afbbffb9d6cdabf3ef",
            "commit_message": "[InstCombine] Use SimplifyQuery for computeKnownBits() (NFC)\n\nCall computeKnownBits() with SimplifyQuery to make sure it gets\nall available analyses, even if more are added in the future.\n\nAs this code is performance-critical, I'm exporting the variant\nwith by-ref KnownBits and SimplifyQuery, as the variant returning\nKnownBits is measurably slower in this context.\n",
            "commit_timestamp": 1701172773.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701187864.364599,
            "elapsed_time": 3002.4315288066864,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7f3ee3ca1d09daf0f7d350ed9d62796640a59bf4",
            "commit_message": "[clang][DebugInfo] Revert to attaching DW_AT_const_value on static member declarations (#73626)\n\nIn https://github.com/llvm/llvm-project/pull/71780 we started emitting\r\ndefinitions for all static data-members with constant initialisers, even\r\nif they were constants (i.e., didn't have a location). We also dropped\r\nthe DW_AT_const_value from the declaration to [help resolve\r\ninconsistencies during type merging in the\r\nDWARFParallelLinker](https://github.com/llvm/llvm-project/pull/68721).\r\nHowever, for static data members that do have locations, we wouldn't\r\nemit a DW_AT_const_value on it, assuming that the consumer knows how to\r\nread the value using the location. This broke some consumers that really\r\nwanted to find a DW_AT_const_value. Ultimately we want to attach a\r\nDW_AT_const_value to definitions that have a location too. But to fix\r\nconsumers broken by said change, this patch adds the constant back onto\r\nthe declaration. This is what we used to do prior to\r\nhttps://github.com/llvm/llvm-project/pull/71780",
            "commit_timestamp": 1701186043.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701202283.493413,
            "elapsed_time": 2819.6233620643616,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "3a6f02a6581b49b269710eea944dc114166403ed",
            "commit_message": "[mlir] Add subbyte emulation support for `memref.store`. (#73174)\n\nThis adds a conversion for narrow type emulation of memref.store ops.\r\nThe conversion replaces the memref.store with two memref.atomic_rmw ops.\r\nAtomics are used to prevent race conditions on same-byte accesses, in\r\nthe event that two threads are storing into the same byte.\r\n\r\nFixes https://github.com/openxla/iree/issues/15370",
            "commit_timestamp": 1701201090.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701216876.601399,
            "elapsed_time": 5650.3884563446045,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "45288085b5b2711a15f107a5bffdcc6bfe5a43b0",
            "commit_message": "[mlir][sparse] move toCOOType into SparseTensorType class (#73708)\n\nMigrates dangling convenience method into proper SparseTensorType class.\r\nAlso cleans up some details (picking right dim2lvl/lvl2dim). Removes\r\nmore dead code.",
            "commit_timestamp": 1701216241.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701231162.887479,
            "elapsed_time": 3570.8789434432983,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f73844d92b36cb6801ac50ea721f4ba29b35d7a9",
            "commit_message": "[RISCV] Generate bexti for (select(setcc eq (and x, c))) where c is power of 2. (#73649)\n\nCurrently, llvm can transform (setcc ne (and x, c)) to (bexti x,\r\nlog2(c)) where c is power of 2.\r\nThis patch transform (select (setcc ne (and x, c)), T, F) into (select\r\n(setcc eq (and x, c)), F, T).\r\nIt is benefit to the case c is not fit to 12-bits.",
            "commit_timestamp": 1701230208.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701245589.025565,
            "elapsed_time": 7831.436352968216,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6a4489a73337907d52e7eaf3716f3de9008e6e53",
            "commit_message": "[GitHub] Use proper Markdown syntax and avoid child list items (#73700)\n\n",
            "commit_timestamp": 1701244077.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701259964.684698,
            "elapsed_time": 5357.62159538269,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "241076fb529eafccea9bae8bb407a57d83480745",
            "commit_message": "[SelectionDAG] Fix assertion for widening of mask operand in MSTORE. (#73295)\n\nAccording to the code in `SelectionDAG::getMaskedStore`, the Mask\r\noperator is in position 4, not 3:\r\n\r\n     SDValue Ops[] = {Chain, Val, Base, Offset, Mask};",
            "commit_timestamp": 1701258990.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701288750.2872,
            "elapsed_time": 5289.5368139743805,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "002c54a2e6cced2eb9d79608afee5fb36dcc5b98",
            "commit_message": "[flang][openacc] Representing Fortran descriptor management with OpenACC. (#72725)\n\nThis document describes the aspects of Fortran descriptor management\r\nin the offload data environment and how this semantics can be\r\nrepresented using MLIR OpenACC dialect.\r\n\r\nIn the document I tried to clarify some parts of the OpenACC\r\nspecification that seemed unclear to me, e.g. where the spec allowed different\r\ninterpretations (in my opinion) or did not specify the actual runtime\r\nbehavior. I tried to demonstrate how this ambiguity can affect user\r\nprograms with examples.\r\n\r\nThe document proposes using `attachRecipe` on the data operations\r\nto represent the non-trivial pointer attachment semantics for variables\r\nrepresented by descriptors. The recipe provides the actual\r\nimplementation of the pointer attachment, e.g. we can call an F18 offload runtime\r\nfunction that will perform all necessary checks and actions.\r\n\r\nIt is unclear at this point if we want to expose the implementation\r\ndetails in FIR, otherwise, the recipe could have contained more low\r\nlevel acc operations such as is_present lookups, host to device\r\nmemory copies, etc.",
            "commit_timestamp": 1701286949.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701274326.545089,
            "elapsed_time": 7042.932814359665,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "953d675c42c254676ca446951bd728abefecf436",
            "commit_message": "Fix accsessing \"PresentModifierLocs\" array beyond its end. (#73579)\n\nCurrently PresentModifierLocs defined with size DefaultmapKindNum; where\r\nDefaultmapKindNum = OMPC_DEFAULTMAP_pointer + 1\r\n\r\nBefore 5.0 variable-category can not be omitted. For the test like\r\n\\#pragma omp target map(tofrom: errors) defaultmap(present)\r\n\r\nerror would be mitted.\r\n\r\nAfter 5.0 that is allowd.\r\n\r\nWhen try to:\r\nPresentModifierLocs[DMC->getDefaultmapKind()] =\r\n              DMC->getDefaultmapModifierLoc();\r\nIt is accessed beyond array end.\r\n\r\nTo fix this using OMPC_DEFAULTMAP_unknow instead OMPC_DEFAULTMAP_poiner.",
            "commit_timestamp": 1701273717.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701303157.335017,
            "elapsed_time": 7718.807292699814,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a0bd6361d4840f159e48c7359807ae279d006fb0",
            "commit_message": "[lld][WebAssembly] Convert bitcode test to assembly. NFC (#73716)\n\n",
            "commit_timestamp": 1701301498.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701317611.266095,
            "elapsed_time": 3889.555397748947,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c43d0432ef35ee506bae642408f7140064514c8d",
            "commit_message": "[BOLT] Create .text.warm for 3-way splitting (#73863)\n\nThis commit explicitly adds a warm code section, .text.warm, when\r\n-split-functions -split-strategy=cdsplit is used. This replaces the\r\nprevious approach of using .text.cold.0 as warm and .text.cold.1 as cold\r\nin 3-way function splitting. NFC.",
            "commit_timestamp": 1701315756.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701331956.842506,
            "elapsed_time": 3310.180434703827,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5891a8f7ce0a7b866a5bc06c34092fbdb28dda1c",
            "commit_message": "[clang] Remove extra ';' in MultiplexExternalSemaSource.cpp (NFC)\n\n/llvm-project/clang/lib/Sema/MultiplexExternalSemaSource.cpp:317:2:\nerror: extra ';' outside of a function is incompatible with C++98 [-Werror,-Wc++98-compat-extra-semi]\n};\n ^\n1 error generated.\n",
            "commit_timestamp": 1701330816.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701346391.573656,
            "elapsed_time": 3923.5141882896423,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "00a10efdb12dbc3f5a0ba16f6c92cac713f0590b",
            "commit_message": "[InstCombine] Regenerate test checks (NFC)\n",
            "commit_timestamp": 1701345382.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701360734.057245,
            "elapsed_time": 3501.7693173885345,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "1d05b21e035f579af2f96b4a61847d2c9f358ac2",
            "commit_message": "Add test coverage for -Wunknown-directives; NFC\n\nWhile working on #embed, I noticed that the PR accidentally broke the\nwarning group but no tests failed as a result. This is adding the\nmissing test coverage.\n",
            "commit_timestamp": 1701360046.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701375116.540316,
            "elapsed_time": 4680.9456470012665,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ff485a0e77a55847cb50768b01c04fe45a6879ea",
            "commit_message": "[clang] Remove no-op ptr-to-ptr bitcasts (NFC)\n\nOpaque ptr cleanup effort (NFC).\n",
            "commit_timestamp": 1701374431.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701389684.866063,
            "elapsed_time": 3945.177099943161,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b8b2a279d002f4d424d9b089bc32a0e5d6989dbb",
            "commit_message": "[OpenMP][NFC] Encapsulate profiling logic (#74003)\n\nThis simply puts the profiling logic into the `Profiler` class and\r\nallows non-RAII profiling via `beginSection` and `endSection`.",
            "commit_timestamp": 1701388322.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701403992.860912,
            "elapsed_time": 6091.972477436066,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "755c28a9401536d89601ae3582f44be1746fadb6",
            "commit_message": "[GISel][Mips] Infer alignment when creating memory operand for G_VASTART. (#74004)\n\n",
            "commit_timestamp": 1701402923.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701418333.631071,
            "elapsed_time": 5687.435415029526,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "bc265bd663233c4bfa222f1cc93ec472075a53ff",
            "commit_message": "[llvm-reduce] Stop including llvm/ADT/SetVector.h (NFC)\n\nIdentified with clangd.\n",
            "commit_timestamp": 1701417146.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701432736.521267,
            "elapsed_time": 5325.932157039642,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8727982bdfb84ce4adbd138c146a6b7ecaf98fdb",
            "commit_message": "[Driver] Add exclusive-group feature to multilib.yaml. (#69447)\n\nThis allows a YAML-based multilib configuration to specify explicitly\r\nthat a subset of its library directories are alternatives to each\r\nother, i.e. at most one of that subset should be selected.\r\n\r\nSo if you have multiple sysroots each including a full set of headers\r\nand libraries, you can mark them as members of the same mutually\r\nexclusive group, and then you'll be sure that only one of them is\r\nselected, even if two or more are compatible with the compile options.\r\n\r\nThis is particularly important in multilib setups including the libc++\r\nheaders, where selecting the include directories from two different\r\nsysroots can cause an actual build failure. This occurs when including\r\n<stdio.h>, for example: libc++'s stdio.h is included first, and will\r\ntry to use `#include_next` to fetch the underlying libc's version. But\r\nif there are two include directories from separate multilibs, then\r\nboth of their C++ include directories will end up on the include path\r\nfirst, followed by both the C directories. So the `#include_next` from\r\nthe first libc++ stdio.h will include the second libc++ stdio.h, which\r\nwill do nothing because it has the same include guard macro, and the\r\nlibc header won't ever be included at all.\r\n\r\nIf more than one of the options in an exclusive group matches the\r\ngiven flags, the last one wins.\r\n\r\nThe syntax for specifying this in multilib.yaml is to define a Groups\r\nsection in which you specify your group names, and for each one,\r\ndeclare it to have Type: Exclusive. (This reserves space in the syntax\r\nfor maybe adding other group types later, such as a group of mutually\r\n_dependent_ things that you must have all or none of.) Then each\r\nVariant record that's a member of a group has a Group: property giving\r\nthat group's name.\r\n",
            "commit_timestamp": 1701432018.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701447118.796888,
            "elapsed_time": 3663.3384759426117,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "14e991740b5425680d49d75336132e793f1315e8",
            "commit_message": "[clang][ExtractAPI] Ensure LocationFileChecker doesn't try to traverse VFS when determining file path (#74071)\n\nAs part of https://reviews.llvm.org/D154130 the logic of\r\nLocationFileChecker changed slightly to try and get the absolute\r\nexternal file path instead of the name as requested when the file was\r\nopenened which would be before VFS mappings in our usage. Ensure that we\r\nonly check against the name as requested instead of trying to generate\r\nthe external canonical file path.\r\n\r\nrdar://115195433",
            "commit_timestamp": 1701446076.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701461517.175258,
            "elapsed_time": 3755.822177171707,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4c44dcffd5f1557bde2c21773221081437308895",
            "commit_message": "Support soft failure on DWP section overflow, producing a truncated but valid DWP(#71902)\n\nWhen 'ContinueOnCuIndexOverflow' enables without this modification, the\r\nforcibly generated '.dwp' won't be recognized by Debugger(gdb 10.1)\r\ncorrectly.\r\n<img width=\"657\" alt=\"image\"\r\nsrc=\"https://github.com/llvm/llvm-project/assets/150100070/31732775-2548-453a-a47a-fa04c6d05fe9\">\r\nit looks like there's a problem with processing the dwarf header, which\r\nmakes debugging completely impossible. (unless the consumer walks the debug_info section to rebuild that column (if that's the only section that overflowed - if it's another section, there's no recovery))\r\n\r\n**About patch:**\r\nWhen llvm-dwp enables option '--continue-on-cu-index-overflow=soft-stop'\r\nand recognizes the overflow problem , it will stop packing and generate\r\nthe '.dwp' file at once, discarding any DWO files that would not fit\r\nwithin the 32 bit/4GB limits of the format.\r\n<img width=\"625\" alt=\"image\"\r\nsrc=\"https://github.com/llvm/llvm-project/assets/150100070/77d6be24-262b-4f4c-afc0-9a6c49e133c7\">",
            "commit_timestamp": 1701460882.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701476034.296342,
            "elapsed_time": 5288.338274478912,
            "x64": true,
            "actual_files_count": 1722,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "357b8b46b125810c5c383c485b1fb3f3db233759",
            "commit_message": "[Driver] Remove tests for NetBSD 7. No longer supported.\n",
            "commit_timestamp": 1701474982.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701490373.265069,
            "elapsed_time": 7611.57298207283,
            "x64": true,
            "actual_files_count": 1724,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "28eead018d80a5384b8be6f259c3d2e2b849e8cf",
            "commit_message": "[NFC][asan] Clang format a few lines\n",
            "commit_timestamp": 1701486304.0
        },
        {
            "tool_version": "233.0.20231119.234619-eap08",
            "error_mismatch": true,
            "project": [
                "clang*"
            ],
            "timestamp": 1701504713.409685,
            "elapsed_time": 6285.367964506149,
            "x64": true,
            "actual_files_count": 1724,
            "expected_files_count": 1661,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "66a3e4fafb6eae19764f8a192ca3a116c0554211",
            "commit_message": "[LoongArch] Override TargetLowering::isShuffleMaskLegal\n\n By default, `isShuffleMaskLegal` always returns true, which can result\n in the expansion of `BUILD_VECTOR` into a `VECTOR_SHUFFLE` node in\n certain situations. Subsequently, the `VECTOR_SHUFFLE` node is expanded\n again into a `BUILD_VECTOR`, leading to an infinite loop.\n To address this, we always return false, allowing the expansion of\n `BUILD_VECTOR` through the stack.\n",
            "commit_timestamp": 1701498317.0
        }
    ]
}