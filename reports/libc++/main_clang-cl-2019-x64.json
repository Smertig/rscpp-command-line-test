{
    "v1": [
        {
            "tool_version": "242.0.20240720.165730-eap08",
            "error_mismatch": true,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722185785.548727,
            "elapsed_time": 88.98341798782349,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6628.4228515625,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "991192b211212aa366bf73b993ac444839c10bf5",
            "commit_message": "[Sparc] Remove custom lowering for ADD[CE] / SUB[CE] (#100861)\n\nThe default lowering produces fewer instructions.",
            "commit_timestamp": 1722180160.0
        },
        {
            "tool_version": "242.0.20240720.165730-eap08",
            "error_mismatch": true,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722222554.75982,
            "elapsed_time": 87.42598843574524,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6621.699142456055,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "71d85ca2f9dba7f08a7a84c6cff5396ed594cb3c",
            "commit_message": "[RISCV][CFI] Emit cfi_offset for every callee-saved vector registers (#100455)\n\nThe grouped vector register is modeled as a single register, e.g. V2M2,\r\nwhich is actually V2 and V3. We need to decompose the grouped vector\r\nregister(if any) to individual vector register when emitting CFIs in\r\nprologue.\r\n\r\nFixed https://github.com/llvm/llvm-project/issues/94500",
            "commit_timestamp": 1722222187.0
        },
        {
            "tool_version": "242.0.20240720.165730-eap08",
            "error_mismatch": true,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722265702.329616,
            "elapsed_time": 92.1554765701294,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6612.045249938965,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "1b4be6a474b3747765a218201bd637f899fd9b66",
            "commit_message": "[ARM] Regenerate vselect_imax.ll\n",
            "commit_timestamp": 1722264822.0
        },
        {
            "tool_version": "242.0.20240720.165730-eap08",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722276954.710154,
            "elapsed_time": 80.96733069419861,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6652.138763427734,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f9e7cba122c2b636ddb975791aadf33c69f3f056",
            "commit_message": "Fix hasName matcher assertion with inline namespaces (#100975)\n\nFix handling of nodes which can be skipped in the fast path for the\r\nhasName matcher\r\n\r\nFixes #100973",
            "commit_timestamp": 1722276662.0
        },
        {
            "tool_version": "242.0.20240720.165730-eap08",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722308971.349177,
            "elapsed_time": 110.86297035217285,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6596.241134643555,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6d02f62e4af90295a6e0386e3e96afe518777c17",
            "commit_message": "[mlir][linalg] Add vectorization support for minnumf/maxnumf reductions. (#101092)\n\nThis is a follow-up for\r\nhttps://discourse.llvm.org/t/rfc-fix-floating-point-max-and-min-operations-in-mlir/72671\r\n\r\nThe ops were splitted to two version, and the vectorization support for\r\none of them is missing.\r\n\r\nThe revision also renames the existing lit tests accordingly, which\r\nexplicitly puts `maximumf/minimumf` to the function names.",
            "commit_timestamp": 1722308440.0
        },
        {
            "tool_version": "242.0.20240720.165730-eap08",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722352005.354721,
            "elapsed_time": 72.38793873786926,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6633.208297729492,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8fc329421b2e3bc5cdda98ce303ea3b07af58ebc",
            "commit_message": "[mlir][Transforms] Dialect conversion: Add missing \"else if\" branch (#101148)\n\nThis code got lost in #97213 and there was no test for it. Add it back\r\nwith an MLIR test.\r\n\r\nWhen a pattern is run without a type converter, we can assume that the\r\nnew block argument types of a signature conversion are legal. That's\r\nbecause they were specified by the user. This won't work for 1->N\r\nconversions due to limitations in the dialect conversion infrastructure,\r\nso the original `FIXME` has to stay in place.",
            "commit_timestamp": 1722350207.0
        },
        {
            "tool_version": "242.0.20240720.165730-eap08",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722395370.987578,
            "elapsed_time": 75.43336462974548,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6620.595848083496,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "57acabb8e09baa38b156965b2dc567a8c7eb2429",
            "commit_message": "[Driver,X86] Update test Clang::Preprocessor/x86_target_features.c after #101151\n",
            "commit_timestamp": 1722395003.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": true,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722437003.241588,
            "elapsed_time": 102.93361783027649,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6626.583610534668,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "23d188ed91ed39879e6f6e36d07eca6ceae4bab5",
            "commit_message": "[libcxx][test] Require long_tests for eval.PR44847.pass.cp (#100722)\n\nThis takes 1m40s to run when testing picolib on qemu. This isn't the end\r\nof the world but that's on an AArch64 server. So if someone felt the\r\nneed to mark this unsupported in the first place, it's likely much\r\nslower on average hardware.",
            "commit_timestamp": 1722436596.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": true,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722438515.877502,
            "elapsed_time": 82.62360787391663,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6650.903717041016,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b5a7d3b6c2169d84f9da749425a38dcef914d1ce",
            "commit_message": "[SLP][REVEC] Make Instruction::Select support vector instructions. (#100507)\n\n",
            "commit_timestamp": 1722438230.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722442608.114971,
            "elapsed_time": 115.6876859664917,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6611.965354919434,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8b2688bd173e79392927bcaed91855e7c4db8eaa",
            "commit_message": "[scudo] Separated committed and decommitted entries. (#100818)\n\nInitially, the LRU list stored all mapped entries with no distinction\r\nbetween the committed (non-madvise()'d) entries and decommitted\r\n(madvise()'d) entries. Now these two types of entries are separated into\r\ntwo lists, allowing future cache logic to branch depending on whether or\r\nnot entries are committed or decommitted. Furthermore, the retrieval\r\nalgorithm will prioritize committed entries over decommitted entries.\r\nSpecifically, valid-fit, committed entries (not necessarily optimal-fit)\r\nare retrieved before optimal-fit, decommitted entries.",
            "commit_timestamp": 1722442224.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722481625.089444,
            "elapsed_time": 75.06262350082397,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6622.808128356934,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "42c413b48917491efc5372752c6ad245530939f5",
            "commit_message": "[mlir][Transforms] Preserve all analysis in print passes (#101315)\n\nPrintIRPass, PrintOpStatsPass and PrintOpGraphPass don't mutate IR so\r\npreserve all analysis to save computation resource a bit.",
            "commit_timestamp": 1722480688.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722524949.843489,
            "elapsed_time": 130.52757048606873,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6600.268218994141,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e7630a0d60821dc13bb0be4e50b49fba5f90471f",
            "commit_message": "AMDGPU: Improve cost handling of canonicalize (#101479)\n\n",
            "commit_timestamp": 1722524540.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722568093.635971,
            "elapsed_time": 98.0918357372284,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6609.657386779785,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e7f73c03dfe6c895b2dbe6d8d1d03546b87888c4",
            "commit_message": "[Attributor] Use `getPointerAddressSpace` to replace a cast followed by a `getAddressSpace`\n",
            "commit_timestamp": 1722567463.0
        },
        {
            "tool_version": "242.0.20240801.125602-rc01",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722582507.85061,
            "elapsed_time": 80.6609697341919,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6622.9897384643555,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e9c20b9132c93baaaf78a070fa4cd0a853ca5e65",
            "commit_message": "[test][asan] Disabled a new test on Android\n\nWill investigate soon.\nThe test is from #100923.\n",
            "commit_timestamp": 1722582078.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722611605.904447,
            "elapsed_time": 171.90341806411743,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6583.942977905273,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d96569ecc2807a13dab6495d8cc4e82775b00af1",
            "commit_message": "[analyzer] Fix crash on using `bitcast(<type>, <array>)` as array subscript (#101647)\n\nCurrent CSA logic does not expect `LazyCompoundValKind` as array index.\r\nThis may happen if array is used as subscript to another, in case of\r\nbitcast to integer type.\r\n\r\nCatch such cases and return `UnknownVal`, since CSA cannot model\r\narray -> int casts.\r\n\r\nCloses #94496",
            "commit_timestamp": 1722611097.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722654614.380319,
            "elapsed_time": 173.35416650772095,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6641.290412902832,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "400c7c7cf2b15138aa674355983be74270de93bc",
            "commit_message": "[clang][Interp][NFC] Simplify Pointer move/copy assignment op\n",
            "commit_timestamp": 1722653956.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722697731.52849,
            "elapsed_time": 147.42247128486633,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6605.6445388793945,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f78d288d9d77c66f8b3036c62bb55160f19ba9cd",
            "commit_message": "[clang][Interp] Fix function pointer callexpr eval order (#101821)\n\nWe need to evaluate the callee before the arguments.",
            "commit_timestamp": 1722696997.0
        }
    ]
}