{
    "v1": [
        {
            "tool_version": "242.0.20240720.165730-eap08",
            "error_mismatch": true,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722185785.548727,
            "elapsed_time": 88.98341798782349,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6628.4228515625,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "991192b211212aa366bf73b993ac444839c10bf5",
            "commit_message": "[Sparc] Remove custom lowering for ADD[CE] / SUB[CE] (#100861)\n\nThe default lowering produces fewer instructions.",
            "commit_timestamp": 1722180160.0
        },
        {
            "tool_version": "242.0.20240720.165730-eap08",
            "error_mismatch": true,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722222554.75982,
            "elapsed_time": 87.42598843574524,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6621.699142456055,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "71d85ca2f9dba7f08a7a84c6cff5396ed594cb3c",
            "commit_message": "[RISCV][CFI] Emit cfi_offset for every callee-saved vector registers (#100455)\n\nThe grouped vector register is modeled as a single register, e.g. V2M2,\r\nwhich is actually V2 and V3. We need to decompose the grouped vector\r\nregister(if any) to individual vector register when emitting CFIs in\r\nprologue.\r\n\r\nFixed https://github.com/llvm/llvm-project/issues/94500",
            "commit_timestamp": 1722222187.0
        },
        {
            "tool_version": "242.0.20240720.165730-eap08",
            "error_mismatch": true,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722265702.329616,
            "elapsed_time": 92.1554765701294,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6612.045249938965,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "1b4be6a474b3747765a218201bd637f899fd9b66",
            "commit_message": "[ARM] Regenerate vselect_imax.ll\n",
            "commit_timestamp": 1722264822.0
        },
        {
            "tool_version": "242.0.20240720.165730-eap08",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722276954.710154,
            "elapsed_time": 80.96733069419861,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6652.138763427734,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f9e7cba122c2b636ddb975791aadf33c69f3f056",
            "commit_message": "Fix hasName matcher assertion with inline namespaces (#100975)\n\nFix handling of nodes which can be skipped in the fast path for the\r\nhasName matcher\r\n\r\nFixes #100973",
            "commit_timestamp": 1722276662.0
        },
        {
            "tool_version": "242.0.20240720.165730-eap08",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722308971.349177,
            "elapsed_time": 110.86297035217285,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6596.241134643555,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6d02f62e4af90295a6e0386e3e96afe518777c17",
            "commit_message": "[mlir][linalg] Add vectorization support for minnumf/maxnumf reductions. (#101092)\n\nThis is a follow-up for\r\nhttps://discourse.llvm.org/t/rfc-fix-floating-point-max-and-min-operations-in-mlir/72671\r\n\r\nThe ops were splitted to two version, and the vectorization support for\r\none of them is missing.\r\n\r\nThe revision also renames the existing lit tests accordingly, which\r\nexplicitly puts `maximumf/minimumf` to the function names.",
            "commit_timestamp": 1722308440.0
        },
        {
            "tool_version": "242.0.20240720.165730-eap08",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722352005.354721,
            "elapsed_time": 72.38793873786926,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6633.208297729492,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8fc329421b2e3bc5cdda98ce303ea3b07af58ebc",
            "commit_message": "[mlir][Transforms] Dialect conversion: Add missing \"else if\" branch (#101148)\n\nThis code got lost in #97213 and there was no test for it. Add it back\r\nwith an MLIR test.\r\n\r\nWhen a pattern is run without a type converter, we can assume that the\r\nnew block argument types of a signature conversion are legal. That's\r\nbecause they were specified by the user. This won't work for 1->N\r\nconversions due to limitations in the dialect conversion infrastructure,\r\nso the original `FIXME` has to stay in place.",
            "commit_timestamp": 1722350207.0
        },
        {
            "tool_version": "242.0.20240720.165730-eap08",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722395370.987578,
            "elapsed_time": 75.43336462974548,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6620.595848083496,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "57acabb8e09baa38b156965b2dc567a8c7eb2429",
            "commit_message": "[Driver,X86] Update test Clang::Preprocessor/x86_target_features.c after #101151\n",
            "commit_timestamp": 1722395003.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": true,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722437003.241588,
            "elapsed_time": 102.93361783027649,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6626.583610534668,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "23d188ed91ed39879e6f6e36d07eca6ceae4bab5",
            "commit_message": "[libcxx][test] Require long_tests for eval.PR44847.pass.cp (#100722)\n\nThis takes 1m40s to run when testing picolib on qemu. This isn't the end\r\nof the world but that's on an AArch64 server. So if someone felt the\r\nneed to mark this unsupported in the first place, it's likely much\r\nslower on average hardware.",
            "commit_timestamp": 1722436596.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": true,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722438515.877502,
            "elapsed_time": 82.62360787391663,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6650.903717041016,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b5a7d3b6c2169d84f9da749425a38dcef914d1ce",
            "commit_message": "[SLP][REVEC] Make Instruction::Select support vector instructions. (#100507)\n\n",
            "commit_timestamp": 1722438230.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722442608.114971,
            "elapsed_time": 115.6876859664917,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6611.965354919434,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8b2688bd173e79392927bcaed91855e7c4db8eaa",
            "commit_message": "[scudo] Separated committed and decommitted entries. (#100818)\n\nInitially, the LRU list stored all mapped entries with no distinction\r\nbetween the committed (non-madvise()'d) entries and decommitted\r\n(madvise()'d) entries. Now these two types of entries are separated into\r\ntwo lists, allowing future cache logic to branch depending on whether or\r\nnot entries are committed or decommitted. Furthermore, the retrieval\r\nalgorithm will prioritize committed entries over decommitted entries.\r\nSpecifically, valid-fit, committed entries (not necessarily optimal-fit)\r\nare retrieved before optimal-fit, decommitted entries.",
            "commit_timestamp": 1722442224.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722481625.089444,
            "elapsed_time": 75.06262350082397,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6622.808128356934,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "42c413b48917491efc5372752c6ad245530939f5",
            "commit_message": "[mlir][Transforms] Preserve all analysis in print passes (#101315)\n\nPrintIRPass, PrintOpStatsPass and PrintOpGraphPass don't mutate IR so\r\npreserve all analysis to save computation resource a bit.",
            "commit_timestamp": 1722480688.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722524949.843489,
            "elapsed_time": 130.52757048606873,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6600.268218994141,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e7630a0d60821dc13bb0be4e50b49fba5f90471f",
            "commit_message": "AMDGPU: Improve cost handling of canonicalize (#101479)\n\n",
            "commit_timestamp": 1722524540.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722568093.635971,
            "elapsed_time": 98.0918357372284,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6609.657386779785,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e7f73c03dfe6c895b2dbe6d8d1d03546b87888c4",
            "commit_message": "[Attributor] Use `getPointerAddressSpace` to replace a cast followed by a `getAddressSpace`\n",
            "commit_timestamp": 1722567463.0
        },
        {
            "tool_version": "242.0.20240801.125602-rc01",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722582507.85061,
            "elapsed_time": 80.6609697341919,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6622.9897384643555,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e9c20b9132c93baaaf78a070fa4cd0a853ca5e65",
            "commit_message": "[test][asan] Disabled a new test on Android\n\nWill investigate soon.\nThe test is from #100923.\n",
            "commit_timestamp": 1722582078.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722611605.904447,
            "elapsed_time": 171.90341806411743,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6583.942977905273,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d96569ecc2807a13dab6495d8cc4e82775b00af1",
            "commit_message": "[analyzer] Fix crash on using `bitcast(<type>, <array>)` as array subscript (#101647)\n\nCurrent CSA logic does not expect `LazyCompoundValKind` as array index.\r\nThis may happen if array is used as subscript to another, in case of\r\nbitcast to integer type.\r\n\r\nCatch such cases and return `UnknownVal`, since CSA cannot model\r\narray -> int casts.\r\n\r\nCloses #94496",
            "commit_timestamp": 1722611097.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722654614.380319,
            "elapsed_time": 173.35416650772095,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6641.290412902832,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "400c7c7cf2b15138aa674355983be74270de93bc",
            "commit_message": "[clang][Interp][NFC] Simplify Pointer move/copy assignment op\n",
            "commit_timestamp": 1722653956.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722697731.52849,
            "elapsed_time": 147.42247128486633,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6605.6445388793945,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f78d288d9d77c66f8b3036c62bb55160f19ba9cd",
            "commit_message": "[clang][Interp] Fix function pointer callexpr eval order (#101821)\n\nWe need to evaluate the callee before the arguments.",
            "commit_timestamp": 1722696997.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722740898.055127,
            "elapsed_time": 88.10369277000427,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6618.8405685424805,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b024fd267b813149f7bd5ba88731673b9a29258d",
            "commit_message": "[libc] disable strfroml entrypoint on aarch64 (#101854)\n\nDisable `strfroml` entrypoint on aarch64 to please clang-11 buildbots.\r\nDetailed in https://github.com/llvm/llvm-project/issues/101846. This is\r\nnot a fix for #101846 so I will keep the issue open until our buildbot\r\nis updated or other mitigation is applied.",
            "commit_timestamp": 1722738493.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722784166.819406,
            "elapsed_time": 101.04826307296753,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6614.511497497559,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "0edafc461f5f98b2ed5d2d621e1d9de70ccbd4e5",
            "commit_message": "[libc++] mark P0645 as complete (#101852)\n\nNow that #98275 has been merged, the footnote for P0645 has become\r\noutdated. This updates the status information.",
            "commit_timestamp": 1722779993.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722827356.406555,
            "elapsed_time": 104.03404474258423,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6602.033401489258,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7f78f99fe5af82361d37adcbd2daa4d04afba13d",
            "commit_message": "[clang] Reland: Instantiate alias templates with sugar (#101858)\n\nThis makes use of the changes introduced in D134604, in order to\r\ninstantiate alias templates witn a final sugared substitution.\r\n\r\nThis comes at no additional relevant cost.\r\nSince we don't track / unique them in specializations, we wouldn't be\r\nable to resugar them later anyway.\r\n\r\nDifferential Revision: https://reviews.llvm.org/D136565",
            "commit_timestamp": 1722824934.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722870470.002809,
            "elapsed_time": 78.46020770072937,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6602.354682922363,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6848b99d170e9ac59ce2007c817bc579536d8e8e",
            "commit_message": "[OpenMP][Map][NFC] improve map chain. (#101903)\n\nThis is for mapping structure has data members, which have 'default'\r\nmappers, where needs to map these members individually using\r\ntheir 'default' mappers.\r\n\r\nexample map(tofrom: spp[0][0]), look at test case.\r\n\r\ncurrently create 6 maps:\r\n1>&spp, &spp[0],  size 8, maptype TARGET_PARAM | FROM | TO\r\n2>&spp[0], &spp[0][0], size(D)with maptype OMP_MAP_NONE, nullptr\r\n3>&spp[0], &spp[0][0].e, size(e) with maptype MEMBER_OF  | FROM  | TO\r\n4>&spp[0], &spp[0][0].h, size(h) with maptype MEMBER_OF  | FROM  | TO\r\n5>&spp, &spp[0],size(8), maptype MEMBER_OF | IMPLICIT | FROM  | TO\r\n6>&spp[0], &spp[0][0].f size(D) with maptype MEMBER_OF |IMPLICIT\r\n|PTR_AND_OBJ, @.omp_mapper._ZTS1C.default\r\n\r\nmaptype with/without OMP_MAP_PTR_AND_OBJ\r\n   For \"2\" and \"5\", since it is mapping pointer and pointee pair,\r\n   PTR_AND_OBJ should be set\r\n   But for \"6\" the PTR_AND_OBJ should not set.\r\nHowever, \"5\" is duplicate with \"1\" can be skip.\r\n\r\nTo fix \"2\", during the call to emitCombinEntry with false with\r\nNotTargetParams\r\ninstead !PartialStruct.PreliminaryMapData.BasePointers.empty(), since\r\nall captures need to be TARGET_PARAM\r\nAnd inside emitCombineEntry:  check\r\n!PartialStruct.PreliminaryMapData.BasePointers.empty() to set\r\nPTR_AND_OBJ\r\n\r\nFor \"5\" and \"6\": the fix in generateInfoForComponentList:\r\nAdd new variable IsPartialMapped set with\r\n!PartialStruct.PreliminaryMapData.BasePointers.empty();\r\n\r\nWhen that is true, skip generate \"5\" and don\"t set IsExpressionFirstInfo\r\nto false, so that PTR_AND_OBJ would be set.\r\n\r\nAfter fix: will have 5 maps instead 6\r\n1>&spp, &spp[0],  size 8, maptype TARGET_PARAM | FROM | TO\r\n2>&spp[0], &spp[0][0], size(D), maptype PTR_AND_OBJ, nullptr\r\n3>&spp[0], &spp[0][0].e, size(e), maptype MEMBER_OF_2  | FROM  | TO\r\n4>&spp[0], &spp[0][0].h, size(h), maptype MEMBER_OF_2  | FROM  | TO\r\n5>&spp[0], &spp[0][0].f size(32), maptype MEMBER_OF_2 | IMPLICIT,\r\n@.omp_mapper._ZTS1C.default\r\n\r\nFor map(sppp[0][0][0]):\r\nafter fix: will have 6 maps instead 8.\r\n\r\nhttps://github.com/llvm/llvm-project/pull/101903",
            "commit_timestamp": 1722870071.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722913740.276799,
            "elapsed_time": 78.32131671905518,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6621.047332763672,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "874067a22f0f483dbe210d8547c06d564bfa7848",
            "commit_message": "[Sema] Preserve ContainsUnexpandedParameterPack in TransformLambdaExpr (#86265)\n\nThe lambda `ContainsUnexpandedParameterPack` flag is used for the\r\nexpressions' dependency computing and is therefore essential for pack\r\nexpansion.\u00a0We previously lost the flag's preservation during the\r\nlambda's transform, which caused some issues, e.g. a fold expression\r\ncouldn't properly expand inside a template.\r\n\r\nThis patch alleviates the issue by retaining the flag in more scenarios.\r\nNote that we still have problems with constraints involving packs\r\nregarding lambdas, and dealing with that would take more effort, and\r\nwe'd like to fix them in the future.\r\n\r\nFixes https://github.com/llvm/llvm-project/issues/56852\r\nFixes https://github.com/llvm/llvm-project/issues/85667\r\nMitigates https://github.com/llvm/llvm-project/issues/99877 because the\r\nattributes were not handled in this patch.\r\n\r\n---------\r\n\r\nCo-authored-by: Ilya Biryukov <809452+ilya-biryukov@users.noreply.github.com>\r\nCo-authored-by: cor3ntin <corentinjabot@gmail.com>",
            "commit_timestamp": 1722912885.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1722957008.764454,
            "elapsed_time": 107.56602096557617,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6599.519325256348,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "bd576fe34285c4dcd04837bf07a89a9c00e3cd5e",
            "commit_message": "[clang][driver][clang-cl] Support `--precompile` and `-fmodule-*` options in Clang-CL (#98761)\n\nThis PR is the first step in improving the situation for `clang-cl`\r\ndetailed in [this LLVM Discourse\r\nthread](https://discourse.llvm.org/t/clang-cl-exe-support-for-c-modules/72257/28).\r\nThere has been some work done in #89772. I believe this is somewhat\r\northogonal.\r\n\r\nThis is a work-in-progress; the functionality has only been tested with\r\nthe [basic 'Hello World'\r\nexample](https://clang.llvm.org/docs/StandardCPlusPlusModules.html#quick-start),\r\nand proper test cases need to be written. I'd like some thoughts on\r\nthis, thanks!\r\n\r\nPartially resolves #64118.",
            "commit_timestamp": 1722956755.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1723000102.316791,
            "elapsed_time": 92.96027565002441,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6583.436080932617,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b64ec3c9faf0adce6e92c69fb48a7c7473c57200",
            "commit_message": "[SLP] The order of store chains needs to consider the size of the values. (#101810)\n\nWhen store chains have the same value type ID and pointer type ID, they\r\nmay mix different sizes of values, such as i8 and i64. This can lead to\r\nmissed vectorization opportunities.",
            "commit_timestamp": 1722999713.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1723043439.896401,
            "elapsed_time": 80.01933455467224,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6585.918197631836,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7634a96589637186b640a0441c0544a9868d9913",
            "commit_message": "[flang][acc] Improve lowering of Fortran optional in data clause (#102224)\n\nFortran optional arguments are effectively null references. To deal with\r\nthis possibility, flang lowering of OpenACC data clauses creates three\r\nif-else regions when preparing the data pointer for the data clause:\r\n1) Load box value from box reference\r\n2) Load box addr from box value\r\n3) Load box dims from box value\r\n\r\nHowever, this pattern makes it more complicated to find the original box\r\nreference. Effectively, the first if-else region to get the box value is\r\nnot needed - since the value can be loaded before the corresponding\r\n`fir.box_addr` and `fir.box_dims` operations. Thus, reduce the number of\r\nif-else regions by deferring the box load to the use sites.\r\n\r\nFor non-optional cases, the old functionality is left alone - which\r\npreloads the box value.",
            "commit_timestamp": 1723043046.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1723086438.411889,
            "elapsed_time": 85.4023060798645,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6619.307891845703,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fc0802a1d0bf2ede0ba71df09ddf5e601ab6587b",
            "commit_message": "[Fuchsia][CMake] Remove new/delete from baremetal libc++ (#102415)\n\nThis is causing issues for some baremetal targets.",
            "commit_timestamp": 1723085601.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1723129773.530617,
            "elapsed_time": 71.83608865737915,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6607.954986572266,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b2e69f52bb5da067109b9a7d1f73d0dd1a6bb5ad",
            "commit_message": "[LoongArch] Add machine function pass to merge base + offset (#101139)\n\nThis commit references RISC-V to add a machine function pass to merge\r\nthe base address and offset.",
            "commit_timestamp": 1723129538.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1723172862.475986,
            "elapsed_time": 85.03861021995544,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6600.371032714844,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "00139ae1bc0ae855ebe9c8991f480b382bbc4308",
            "commit_message": "Revert \"[clang] Reland: Instantiate concepts with sugared template arguments (#101782)\" (#102551)\n\n",
            "commit_timestamp": 1723171088.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1723216122.312116,
            "elapsed_time": 76.1420533657074,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6577.068916320801,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5c0eb1a6e4679cc741f75f5ddc53d4878dabc1f2",
            "commit_message": "[bazel] Add missing dep for the SPIRVToLLVM target\n",
            "commit_timestamp": 1723215129.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1723259370.785817,
            "elapsed_time": 92.13912630081177,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6582.343734741211,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "77e68fbdd3fdc205bafa042fcb87014011dc7799",
            "commit_message": "AMDGPU/NewPM: Port AMDGPUAnnotateUniformValues to new pass manager (#102654)\n\n",
            "commit_timestamp": 1723259168.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1723302488.813756,
            "elapsed_time": 96.16722321510315,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6646.030914306641,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "8a61bfcf8f3e569d7f1d8fcb8958c02ec4aa6e7f",
            "commit_message": "[NFC] Fix TableGen include guards to match paths (#102746)\n\n- Fix include guards for headers under utils/TableGen to match their\r\npaths.",
            "commit_timestamp": 1723300503.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1723345700.154306,
            "elapsed_time": 82.4328556060791,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6640.336540222168,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "3c3df1bef84bd509bdd2b6033bc9bb3653826388",
            "commit_message": "Revert \"[Support] Assert that DomTree nodes share parent\" (#102780)\n\nReverts llvm/llvm-project#101198\r\n\r\nBreaks multiple bots:\r\nhttps://lab.llvm.org/buildbot/#/builders/72/builds/2103\r\nhttps://lab.llvm.org/buildbot/#/builders/164/builds/1909\r\nhttps://lab.llvm.org/buildbot/#/builders/66/builds/2706",
            "commit_timestamp": 1723340169.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1723388857.132354,
            "elapsed_time": 78.07077312469482,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6669.7862548828125,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "5286656609418c766272ff78e62fda41671ef4cb",
            "commit_message": "[LV] Regenerate check lines in preparation for #99808.\n\nRegenerate check lines for test to avoid unrelated changes in\nhttps://github.com/llvm/llvm-project/pull/99808.\n",
            "commit_timestamp": 1723385165.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1723432135.345996,
            "elapsed_time": 90.38775968551636,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6598.463897705078,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "efc6b50d2d93fa571572ee3ef1d4565c09ad1610",
            "commit_message": "[LoopVectorize][X86][AMDLibm] Add Missing AMD LibM trig vector intrinsics (#101125)\n\nAdding the following linked to their docs:\r\n-\r\n[amd_vrs16_acosf](https://github.com/amd/aocl-libm-ose/blob/9c0b67293ba01e509a6308247d82a8f1adfbbc67/scripts/libalm.def#L221)\r\n-\r\n[amd_vrd2_cosh](https://github.com/amd/aocl-libm-ose/blob/9c0b67293ba01e509a6308247d82a8f1adfbbc67/scripts/libalm.def#L124)\r\n-\r\n[amd_vrs16_tanhf](https://github.com/amd/aocl-libm-ose/blob/9c0b67293ba01e509a6308247d82a8f1adfbbc67/scripts/libalm.def#L224)",
            "commit_timestamp": 1723428669.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1723475267.831511,
            "elapsed_time": 73.49578738212585,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6586.90104675293,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "49777d7ffe82f1dcace318e51c9d785994f8c32a",
            "commit_message": "[mlir][spirv] Add atan and atan2 pattern to MathToSPIRV Conversion pass (#102633)\n\nAdd missing math.atan to spirv.CL.atan and math.atan2 to spirv.CL.atan2\r\nin MathToSPIRV.\r\nAdd math.atan to spirv.GL.atan too.",
            "commit_timestamp": 1723474728.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1723518567.640477,
            "elapsed_time": 82.33531165122986,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6606.358512878418,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "17db3313c75120fd8415529723eb96cbad399338",
            "commit_message": "[ASTDump] TextNodeDumper learned to dump builtin name for AtomicExpr (#102748)\n\nIn 4198576157bfd0d08c08b784220d6132b709ae2c, we add support for dumping\r\nbuiltin name for AtomicExpr in JSON dump. This change syncs\r\n`TextNodeDumper` with `JSONNodeDumper`, makes `TextNodeDumper` learned\r\nto dump builtin name for AtomicExpr.",
            "commit_timestamp": 1723513834.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1723561715.497577,
            "elapsed_time": 78.28319883346558,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6616.4567947387695,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ac26c661ead4c5fb05d13c7d07a706f2a305970a",
            "commit_message": "[compiler-rt][SME] Correct .variant_pcs directives. (#103047)\n\n",
            "commit_timestamp": 1723561389.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1723605027.123707,
            "elapsed_time": 120.14789652824402,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6605.488792419434,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "4f5d866af7fed0de1671a68530d3023e9762b71e",
            "commit_message": "[llvm-lit] Add REQUIRES: shell to BOLT permission test for lit internal shell (#103012)\n\nThis patch adds the `REQUIRES: shell` directive to the BOLT permission\r\ntest to ensure it only runs in environments with a full-featured\r\nUnix-like shell. This change is necessary because the test relies on\r\nadvanced shell capabilities that are not supported by lit's internal\r\nshell.\r\n\r\n**Reasoning:** The BOLT permission test uses features like running\r\ncommands in the background with `&`, performing arithmetic operations,\r\nand handling special number formats (octal). These features require a\r\nmore capable shell than what lit's internal shell provides. Without a\r\nproper shell, the test could fail or behave unpredictably.\r\n\r\nThis change is relevant for enabling the lit internal shell by default,\r\nas outlined in [[RFC] Enabling the Lit Internal Shell by\r\nDefault](https://discourse.llvm.org/t/rfc-enabling-the-lit-internal-shell-by-default/80179)",
            "commit_timestamp": 1723604339.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1723648108.855252,
            "elapsed_time": 80.74753713607788,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6607.990097045898,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "80c5ccd867ebfaabaaf330c90d79cc45ae003647",
            "commit_message": "[libc][math] Fix missing const in hdrgen signatures for totalordermag* (#103935)\n\n",
            "commit_timestamp": 1723647626.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1723691307.532978,
            "elapsed_time": 99.49285650253296,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6603.824394226074,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b57038a611329ec42858b714effb482cbfc4d4e1",
            "commit_message": "[OpenMP] Use range-based for loops (NFC) (#103511)\n\n",
            "commit_timestamp": 1723691025.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1723734561.116231,
            "elapsed_time": 110.73829817771912,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6611.145042419434,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "56140a8258a3498cfcd9f0f05c182457d43cbfd2",
            "commit_message": "[SLP]Fix PR104422: Wrong value truncation\n\nThe minbitwidth restrictions can be skipped only for immediate reduced\nvalues, for other nodes still need to check if external users allow\nbitwidth reduction.\n\nFixes https://github.com/llvm/llvm-project/issues/104422\n",
            "commit_timestamp": 1723734008.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1723777784.926602,
            "elapsed_time": 72.05882358551025,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6586.032249450684,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c20e7b6fe105e4dffc8ecff77b03a049d327c567",
            "commit_message": "[HLSL] update default validator version to 1.8. (#104040)\n\nChange default validator version to 1.8 in Options.td. \r\nRemove the default value set in HLSL.cpp.\r\n\r\nFixes #102963\r\n\r\nThis also helps #99910.",
            "commit_timestamp": 1723776247.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1723820878.450014,
            "elapsed_time": 78.73551297187805,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6601.528633117676,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "60bffe221a1d615ffc7c6b632287d0fbd27ef863",
            "commit_message": "[InstCombine] Handle commuted variant of sqrt transform\n",
            "commit_timestamp": 1723819633.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1723864071.356013,
            "elapsed_time": 98.89372038841248,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6588.532577514648,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6e0fc155782ff5307245a85c7b037a2998ec6c86",
            "commit_message": "[RISCV] Remove feature implication from Zvknhb.\n\nWe don't have feature implications on any other Zvk extensions and\nwe have error messages in RISCVISAInfo if Zve or V is not enabled.\nI'm working on testing and refactoring in that code so I'd like to\nmake it consistent.\n",
            "commit_timestamp": 1723858506.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1723907316.465242,
            "elapsed_time": 96.14530754089355,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6614.522354125977,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "76161451f5ca837b25769c7d142f8271b45d9b28",
            "commit_message": "[libc] Fix type signature for strlcpy and strlcat (#104643)\n\nSummary:\r\nThese should not be const on the destination pointer.",
            "commit_timestamp": 1723906145.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1723950562.023736,
            "elapsed_time": 112.63046622276306,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6572.449417114258,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "f499a3fe5fb6fd816d35b541e67a3761093cfded",
            "commit_message": "[VE] Use SelectionDAG::getSignedConstant/getAllOnesConstant.\n",
            "commit_timestamp": 1723949779.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1723993692.495543,
            "elapsed_time": 94.44951701164246,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6579.5173263549805,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d082f1f37d8cb7a0c6875537ba873a631b154d53",
            "commit_message": "[clang][bytecode] Only booleans can be inverted\n\nNo need to have the Inv() function be templated.\n",
            "commit_timestamp": 1723989752.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1724036907.486717,
            "elapsed_time": 70.10360050201416,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6621.079406738281,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7f87b5bf0e2f0e01735e5abe724d7fe5c69d202e",
            "commit_message": "[SelectionDAG][X86] Preserve unpredictable metadata for conditional branches in SelectionDAG, as well as JCCs generated by X86 backend. (#102101)\n\nThis builds on 09515f2c2, which preserves unpredictable metadata in\r\nCodeGen for `select`. This patch does it for conditional branches.",
            "commit_timestamp": 1724036688.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1724080143.606877,
            "elapsed_time": 96.62478137016296,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6599.198516845703,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "7dd6340bdadf86bd0facdea89d1876a5c36dc33b",
            "commit_message": "MathExtras: template'ize alignToPowerOf2 (#97814)\n\nFollow up on 5627794 (MathExtras: avoid unnecessarily widening types) to\r\nchange the overflow behavior of alignToPowerOf2 to only overflow if the\r\nresult is not representable in the return type. This allows us to\r\ntemplate'ize it, and avoid unnecessarily widening the types of\r\narguments.",
            "commit_timestamp": 1724079822.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1724123247.151902,
            "elapsed_time": 69.23296976089478,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6571.635803222656,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "52bfb2611f8d30fae3306c652af7ba5c7e88c147",
            "commit_message": "[ADT] Fix a minor build error (#104840)\n\nA quick follow-up fix for\r\nhttps://github.com/llvm/llvm-project/pull/99403\r\n\r\nBuildbot\r\n[reported](https://lab.llvm.org/buildbot/#/builders/168/builds/2330) an\r\nerror:\r\n\r\n```\r\n/home/buildbots/llvm-external-buildbots/workers/ppc64le-lld-multistage-test/ppc64le-lld-multistage-test/llvm-project/llvm/unittests/ADT/FunctionExtrasTest.cpp:320:8: error: variable 'ptr' is uninitialized when used here [-Werror,-Wuninitialized]\r\n  320 |       [ptr](void *self) {\r\n      |        ^~~\r\n/home/buildbots/llvm-external-buildbots/workers/ppc64le-lld-multistage-test/ppc64le-lld-multistage-test/llvm-project/llvm/unittests/ADT/FunctionExtrasTest.cpp:318:12: note: initialize the variable 'ptr' to silence this warning\r\n  318 |   void *ptr;\r\n      |            ^\r\n      |             = nullptr\r\n1 error generated.\r\n```\r\n\r\nSo that PR does exactly what's sugested.",
            "commit_timestamp": 1724118821.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1724166508.528982,
            "elapsed_time": 69.81195640563965,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6535.812103271484,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "b5f7b6961d2bc4d852fc3a5992aecf5e2e48baee",
            "commit_message": "[AArch64] fix buildbot by removing dead code\n\nFailure with -Werror buildbot caused by #104587\n",
            "commit_timestamp": 1724166194.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1724209837.382119,
            "elapsed_time": 110.67033171653748,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6643.621910095215,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "d9b6e9f1c1565d9469eb0546da8c276051175408",
            "commit_message": "[gn build] Port c8a678b1e486\n",
            "commit_timestamp": 1724207630.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1724252812.630231,
            "elapsed_time": 69.84206819534302,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6578.5570068359375,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "c9ba6d35c19022a582516e9455af3f0d79101adf",
            "commit_message": "[RISCV] Add coverage for fp reductions of <2^N-1 x FP> vectors\n",
            "commit_timestamp": 1724252301.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1724296131.284531,
            "elapsed_time": 69.72059178352356,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6595.584381103516,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "bf88db78bd80cb624b49510c628ba841fb1fed04",
            "commit_message": "[Symbolizer, DebugInfo] Clean up LLVMSymbolizer API: const string& -> StringRef (#104541)\n\nNothing in the affected code depends on the `ModuleName` being\r\nnull-terminated,\r\nso take it by `StringRef` instead of `const std::string &`.\r\n\r\nThis change simplifies API consumption, since one doesn't always have a\r\n`std::string` at the call site (might have `std::string_view` instead),\r\nand also gives some minor performance improvements by removing\r\nstring-copies in the cache-hit path of `getOrCreateModuleInfo`.",
            "commit_timestamp": 1724295221.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1724339314.166724,
            "elapsed_time": 72.46958756446838,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6598.723495483398,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ec5e58519d24010beea937fccf5fc4541db3ec21",
            "commit_message": "[NFC] Replace bool <= bool comparison (#102948)\n\nStatic analyser tool cppcheck flags ordered comparison with `bool`s.\r\nReplace with equivalent logical operators to prevent this.\r\n\r\nCloses #102912",
            "commit_timestamp": 1724339079.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1724425660.296524,
            "elapsed_time": 78.1961555480957,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6617.760696411133,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6a8f73803a32db75d22490d341bf8744722a9025",
            "commit_message": "Revert \"Reland \"[asan] Remove debug tracing from `report_globals` (#104404)\" (#105601)\"\n\nthat change still breaks\n\n  SanitizerCommon-asan-x86_64-Darwin :: Darwin/print-stack-trace-in-code-loaded-after-fork.cpp\n\n> This reverts commit 2704b804bec50c2b016bf678bd534c330ec655b6\n> and relands #104404.\n>\n> The Darwin should not fail after #105599.\n\nThis reverts commit 8c6f8c29e90666b747fc4b4612647554206a2be5.\n",
            "commit_timestamp": 1724425264.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1724468857.301832,
            "elapsed_time": 94.4114146232605,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6587.821235656738,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e439fdf4ea0dbc6f001428f4d4956700bf26bb97",
            "commit_message": "[clang-format] Treat new expressions as simple functions (#105168)\n\nccae7b461be339e717d02f99ac857cf0bc7d17f improved handling for nested\r\ncalls, but this resulted in a lot of changes near `new` expressions.\r\n\r\nThis patch tries to restore previous behavior around new expressions, by\r\ntreating them as simple functions, which seem to align with the concept.\r\n\r\nFixes https://github.com/llvm/llvm-project/issues/105133.",
            "commit_timestamp": 1724461470.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1724512145.978829,
            "elapsed_time": 73.66467571258545,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6620.699310302734,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "08acc3f73b64bed578d18812a04015cb537c9c82",
            "commit_message": "[Analysis] Copy-construct SmallVector (NFC) (#105911)\n\n",
            "commit_timestamp": 1724508822.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1724555253.33401,
            "elapsed_time": 68.913010597229,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6600.219383239746,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "6bc225e0630f28e83290a43c3d9b25b057fc815a",
            "commit_message": "[clang-format] Fix a misannotation of redundant r_paren as CastRParen (#105921)\n\nFixes #105880.",
            "commit_timestamp": 1724551935.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1724598470.572581,
            "elapsed_time": 70.98982405662537,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6621.021759033203,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "1193f7d6487d2d94009f8d8d27da3907136482b9",
            "commit_message": "[NFC] Use const members of `StringToOffsetTable` (#105824)\n\n",
            "commit_timestamp": 1724589621.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1724641763.539282,
            "elapsed_time": 81.0609803199768,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6669.516166687012,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "88f9ac380d8b40742aea11c8278652711261abff",
            "commit_message": "[doc] [C++20] [Modules] Add docs and release notes for '-Wdecls-in-multiple-modules'\n\nAs the title shows.\n",
            "commit_timestamp": 1724640725.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1724684840.280008,
            "elapsed_time": 73.26359796524048,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6632.885643005371,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "46a4132e167aa44d8ec7776262ce2a0e6d47de59",
            "commit_message": "[Instrumentation] Fix EdgeCounts vector size in SetBranchWeights (#99064)\n\n",
            "commit_timestamp": 1724684205.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1724728034.2268,
            "elapsed_time": 81.80153274536133,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6650.50959777832,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "ce2b488e90d6d5a5c8fe495ede8238938827da39",
            "commit_message": "[mlir] ThreadLocalCache: make TSAN happy about destructors (#106170)\n\nTSAN warns that `ptr` is read and write without protection in\r\n`clearExpiredEntries` and in the destructor of `Owner`. Add an atomic\r\nbool to synchronize these without incurring a cost when calling `get`.",
            "commit_timestamp": 1724727589.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1724771277.582334,
            "elapsed_time": 67.65943741798401,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6659.9508056640625,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fd36a7b9443921a4aa571549543244c5f1c9b6f8",
            "commit_message": "[mlir][gpu] Pass GPU module to `TargetAttrInterface::createObject`. (#94910)\n\nThis patch adds an argument to `gpu::TargetAttrInterface::createObject`\r\nto pass the GPU module. This is useful as `gpu::ObjectAttr` contains a\r\nproperty dict for metadata, hence the module can be used for extracting\r\nthings like the symbol table and adding it to the property dict.\r\n\r\n---------\r\n\r\nCo-authored-by: Oleksandr \"Alex\" Zinenko <ftynse@gmail.com>",
            "commit_timestamp": 1724771104.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1724814525.449765,
            "elapsed_time": 82.32734155654907,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6677.594375610352,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "fac7e87d6634a153450bbc6dd147245d7b534a16",
            "commit_message": "[clang-format] Insert a space between new/delete and a C-style cast (#106175)\n\nIt doesn't make sense to remove the space between new/delete and a\r\nC-style cast when SpaceBeforeParensOptions.AfterPlacementOperator is set\r\nto false.\r\n\r\nFixes #105628.",
            "commit_timestamp": 1724811256.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1724857736.480708,
            "elapsed_time": 96.62206506729126,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6606.426475524902,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "16910a21ee0fabab2df291e4e5bc18289bd5762d",
            "commit_message": "[VPlan] Move logic to create interleave groups to VPlanTransforms (NFC).\n\nThis is a step towards further breaking up the rather large\ntryToBuildVPlanWithVPRecipes. It moves logic create interleave groups to\nVPlanTransforms.cpp, where similar replacements for other recipes are\ndefined as well (e.g. EVL-based ones)\n",
            "commit_timestamp": 1724856969.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1724900951.564468,
            "elapsed_time": 90.65591335296631,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6628.349960327148,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "87c86aa6b93aea3d1603c1759a17fb6b5ba6e814",
            "commit_message": "[X86,SimplifyCFG] Support hoisting load/store with conditional faulting (Part I) (#96878)\n\nThis is simplifycfg part of\r\nhttps://github.com/llvm/llvm-project/pull/95515\r\n\r\nIn this PR, we support hoisting load/store with conditional faulting in\r\n`SimplifyCFGOpt::speculativelyExecuteBB` to eliminate conditional\r\nbranches.\r\nThis is for cases like\r\n```\r\nvoid test (int a, int *b) {\r\n  if (a)\r\n   *b = a;\r\n}\r\n``` \r\n\r\nIn the following patches, we will support the hoist in\r\n`SimplifyCFGOpt::hoistCommonCodeFromSuccessors`.\r\nThat is for cases like\r\n```\r\nvoid test (int a, int *c, int *d) {\r\n  if (a)\r\n   *c = a;\r\n  else \r\n   *d = a;\r\n}\r\n```",
            "commit_timestamp": 1724899364.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1724944210.481159,
            "elapsed_time": 123.39815473556519,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6599.854919433594,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "a705e8cb5b071b3bf6d1d55629f18f6b7b9699ac",
            "commit_message": "[libc++][NFC] Remove __constexpr_is{nan,finite} (#106205)\n\nThey're never used in `constexpr` functions, so we can simply use\r\n`std::isnan` and `std::isfinite` instead.",
            "commit_timestamp": 1724943956.0
        },
        {
            "tool_version": "243.0.20240731.75611-eap01d",
            "error_mismatch": false,
            "project": [
                "cxx_shared"
            ],
            "timestamp": 1724987286.959591,
            "elapsed_time": 100.89578342437744,
            "x64": true,
            "actual_files_count": 89,
            "expected_files_count": null,
            "memory_traffic": 6618.2272872924805,
            "repo_url": "https://github.com/llvm/llvm-project",
            "commit_ref": "e29c5f387f4a4aff039c01bde9eedeb6bd97951f",
            "commit_message": "[RISCV][TTI] Add legality check of vector of address for gather/scatter. (#106481)\n\nThis patch add a legality check that checks if target machine support\r\nvector of address in `isLegalMaskedGatherScatter()`.",
            "commit_timestamp": 1724986215.0
        }
    ]
}